/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.2
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsignfoldertypeResponseV4 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsignfoldertypeResponseV4{}

// EzsignfoldertypeResponseV4 A Ezsignfoldertype Object
type EzsignfoldertypeResponseV4 struct {
	// The unique ID of the Ezsignfoldertype.
	PkiEzsignfoldertypeID int32 `json:"pkiEzsignfoldertypeID"`
	ObjEzsignfoldertypeName MultilingualEzsignfoldertypeName `json:"objEzsignfoldertypeName"`
	// The unique ID of the Branding
	FkiBrandingID int32 `json:"fkiBrandingID"`
	// The unique ID of the Billingentityinternal.
	FkiBillingentityinternalID *int32 `json:"fkiBillingentityinternalID,omitempty"`
	// The unique ID of the Ezsigntsarequirement.  Determine if a Time Stamping Authority should add a timestamp on each of the signature. Valid values:  |Value|Description| |-|-| |1|No. TSA Timestamping will requested. This will make all signatures a lot faster since no round-trip to the TSA server will be required. Timestamping will be made using eZsign server's time.| |2|Best effort. Timestamping from a Time Stamping Authority will be requested but is not mandatory. In the very improbable case it cannot be completed, the timestamping will be made using eZsign server's time. **Additional fee applies**| |3|Mandatory. Timestamping from a Time Stamping Authority will be requested and is mandatory. In the very improbable case it cannot be completed, the signature will fail and the user will be asked to retry. **Additional fee applies**|
	FkiEzsigntsarequirementID *int32 `json:"fkiEzsigntsarequirementID,omitempty"`
	// The unique ID of the Font
	FkiFontIDAnnotation *int32 `json:"fkiFontIDAnnotation,omitempty"`
	// The unique ID of the Font
	FkiFontIDFormfield *int32 `json:"fkiFontIDFormfield,omitempty"`
	// The unique ID of the Font
	FkiFontIDSignature *int32 `json:"fkiFontIDSignature,omitempty"`
	// The unique ID of the Pdfalevel
	FkiPdfalevelIDConvert *int32 `json:"fkiPdfalevelIDConvert,omitempty"`
	EEzsignfoldertypeDocumentdependency *FieldEEzsignfoldertypeDocumentdependency `json:"eEzsignfoldertypeDocumentdependency,omitempty"`
	// The Description of the Branding in the language of the requester
	SBrandingDescriptionX string `json:"sBrandingDescriptionX"`
	// The description of the Billingentityinternal in the language of the requester
	SBillingentityinternalDescriptionX *string `json:"sBillingentityinternalDescriptionX,omitempty"`
	// The description of the Ezsigntsarequirement in the language of the requester
	SEzsigntsarequirementDescriptionX *string `json:"sEzsigntsarequirementDescriptionX,omitempty"`
	// The email address.
	SEmailAddressSigned *string "json:\"sEmailAddressSigned,omitempty\" validate:\"regexp=^[\\\\w.%+\\\\-!#$%&'*+\\/=?^`{|}~]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,20}$\""
	// The email address.
	SEmailAddressSummary *string "json:\"sEmailAddressSummary,omitempty\" validate:\"regexp=^[\\\\w.%+\\\\-!#$%&'*+\\/=?^`{|}~]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,20}$\""
	EEzsignfoldertypePdfarequirement *FieldEEzsignfoldertypePdfarequirement `json:"eEzsignfoldertypePdfarequirement,omitempty"`
	EEzsignfoldertypePdfanoncompliantaction *FieldEEzsignfoldertypePdfanoncompliantaction `json:"eEzsignfoldertypePdfanoncompliantaction,omitempty"`
	EEzsignfoldertypePrivacylevel FieldEEzsignfoldertypePrivacylevel `json:"eEzsignfoldertypePrivacylevel"`
	// Font size for annotations
	IEzsignfoldertypeFontsizeannotation *int32 `json:"iEzsignfoldertypeFontsizeannotation,omitempty"`
	// Font size for form fields
	IEzsignfoldertypeFontsizeformfield *int32 `json:"iEzsignfoldertypeFontsizeformfield,omitempty"`
	// The number of days before the the first reminder sending
	IEzsignfoldertypeSendreminderfirstdays *int32 `json:"iEzsignfoldertypeSendreminderfirstdays,omitempty"`
	// The number of days after the first reminder sending
	IEzsignfoldertypeSendreminderotherdays *int32 `json:"iEzsignfoldertypeSendreminderotherdays,omitempty"`
	// The number of days before the archival of Ezsignfolders created using this Ezsignfoldertype
	IEzsignfoldertypeArchivaldays int32 `json:"iEzsignfoldertypeArchivaldays"`
	EEzsignfoldertypeDisposal FieldEEzsignfoldertypeDisposal `json:"eEzsignfoldertypeDisposal"`
	EEzsignfoldertypeCompletion FieldEEzsignfoldertypeCompletion `json:"eEzsignfoldertypeCompletion"`
	// The number of days after the archival before the disposal of the Ezsignfolder
	IEzsignfoldertypeDisposaldays *int32 `json:"iEzsignfoldertypeDisposaldays,omitempty"`
	// The number of days to get all Ezsignsignatures
	IEzsignfoldertypeDeadlinedays int32 `json:"iEzsignfoldertypeDeadlinedays"`
	// Wheter if document will be ended prematurely after Ezsignfolder expires.
	BEzsignfoldertypePrematurelyendautomatically *bool `json:"bEzsignfoldertypePrematurelyendautomatically,omitempty"`
	// Number of days between Ezsignfolder expiration and automatic prematurely end of Ezsigndocuments.
	IEzsignfoldertypePrematurelyendautomaticallydays *int32 `json:"iEzsignfoldertypePrematurelyendautomaticallydays,omitempty"`
	// Whether we allow the automatic signature by an User
	BEzsignfoldertypeAutomaticsignature *bool `json:"bEzsignfoldertypeAutomaticsignature,omitempty"`
	// Wheter if delegation of signature is allowed to another user or not
	BEzsignfoldertypeDelegate *bool `json:"bEzsignfoldertypeDelegate,omitempty"`
	// Wheter if creating a new Discussion is allowed or not
	BEzsignfoldertypeDiscussion *bool `json:"bEzsignfoldertypeDiscussion,omitempty"`
	// Whether we log recipient of signed document in proof
	BEzsignfoldertypeLogrecipientinproof *bool `json:"bEzsignfoldertypeLogrecipientinproof,omitempty"`
	// Wheter if Reassignment of signature is allowed by a signatory to another signatory or not
	BEzsignfoldertypeReassignezsignsigner *bool `json:"bEzsignfoldertypeReassignezsignsigner,omitempty"`
	// Wheter if Reassignment of signature is allowed by a user to a signatory or another user or not
	BEzsignfoldertypeReassignuser *bool `json:"bEzsignfoldertypeReassignuser,omitempty"`
	// Wheter if Reassignment of signatures of the groups to which the user belongs is authorized by a user to himself
	BEzsignfoldertypeReassigngroup *bool `json:"bEzsignfoldertypeReassigngroup,omitempty"`
	// Whether we send an email to Ezsignsigner  when document is completed
	BEzsignfoldertypeSendsignedtoezsignsigner *bool `json:"bEzsignfoldertypeSendsignedtoezsignsigner,omitempty"`
	// Whether we send an email to User who signed when document is completed
	BEzsignfoldertypeSendsignedtouser *bool `json:"bEzsignfoldertypeSendsignedtouser,omitempty"`
	// Whether we send the Ezsigndocument in the email to Ezsignsigner
	BEzsignfoldertypeSendattachmentezsignsigner *bool `json:"bEzsignfoldertypeSendattachmentezsignsigner,omitempty"`
	// Whether we send the proof in the email to Ezsignsigner
	BEzsignfoldertypeSendproofezsignsigner *bool `json:"bEzsignfoldertypeSendproofezsignsigner,omitempty"`
	// Whether we send the Ezsigndocument in the email to Ezsignsigner or User when bEzsignfoldersignerassociationReceivecopy = 1
	BEzsignfoldertypeSendattachmentreceivecopy *bool `json:"bEzsignfoldertypeSendattachmentreceivecopy,omitempty"`
	// Whether we send the Ezsigndocument in the email to User
	BEzsignfoldertypeSendattachmentuser *bool `json:"bEzsignfoldertypeSendattachmentuser,omitempty"`
	// Whether we send the proof in the email to User
	BEzsignfoldertypeSendproofuser *bool `json:"bEzsignfoldertypeSendproofuser,omitempty"`
	// Whether we send the proof in the email to external recipient
	BEzsignfoldertypeSendproofemail *bool `json:"bEzsignfoldertypeSendproofemail,omitempty"`
	// Whether we allow the Ezsigndocument to be downloaded by an Ezsignsigner
	BEzsignfoldertypeAllowdownloadattachmentezsignsigner *bool `json:"bEzsignfoldertypeAllowdownloadattachmentezsignsigner,omitempty"`
	// Whether we allow the proof to be downloaded by an Ezsignsigner
	BEzsignfoldertypeAllowdownloadproofezsignsigner *bool `json:"bEzsignfoldertypeAllowdownloadproofezsignsigner,omitempty"`
	// Whether we send the proof to user and Ezsignsigner who receive all documents.
	BEzsignfoldertypeSendproofreceivealldocument *bool `json:"bEzsignfoldertypeSendproofreceivealldocument,omitempty"`
	// Whether we send the signed Ezsigndocument to the Ezsigndocument's owner
	BEzsignfoldertypeSendsignedtodocumentowner bool `json:"bEzsignfoldertypeSendsignedtodocumentowner"`
	// Whether we send the signed Ezsigndocument to the Ezsignfolder's owner
	BEzsignfoldertypeSendsignedtofolderowner bool `json:"bEzsignfoldertypeSendsignedtofolderowner"`
	// Whether we send the signed Ezsigndocument to the Usergroup that has acces to all Ezsignfolders
	BEzsignfoldertypeSendsignedtofullgroup *bool `json:"bEzsignfoldertypeSendsignedtofullgroup,omitempty"`
	// THIS FIELD WILL BE DELETED. Whether we send the signed Ezsigndocument to the Usergroup that has acces to only their own Ezsignfolders
	BEzsignfoldertypeSendsignedtolimitedgroup *bool `json:"bEzsignfoldertypeSendsignedtolimitedgroup,omitempty"`
	// Whether we send the signed Ezsigndocument to the colleagues
	BEzsignfoldertypeSendsignedtocolleague bool `json:"bEzsignfoldertypeSendsignedtocolleague"`
	// Whether we send the summary to the Ezsigndocument's owner
	BEzsignfoldertypeSendsummarytodocumentowner bool `json:"bEzsignfoldertypeSendsummarytodocumentowner"`
	// Whether we send the summary to the Ezsignfolder's owner
	BEzsignfoldertypeSendsummarytofolderowner bool `json:"bEzsignfoldertypeSendsummarytofolderowner"`
	// Whether we send the summary to the Usergroup that has acces to all Ezsignfolders
	BEzsignfoldertypeSendsummarytofullgroup *bool `json:"bEzsignfoldertypeSendsummarytofullgroup,omitempty"`
	// Whether we send the summary to the Usergroup that has acces to only their own Ezsignfolders
	BEzsignfoldertypeSendsummarytolimitedgroup *bool `json:"bEzsignfoldertypeSendsummarytolimitedgroup,omitempty"`
	// Whether we send the summary to the colleagues
	BEzsignfoldertypeSendsummarytocolleague bool `json:"bEzsignfoldertypeSendsummarytocolleague"`
	EEzsignfoldertypeSigneraccess *FieldEEzsignfoldertypeSigneraccess `json:"eEzsignfoldertypeSigneraccess,omitempty"`
	// Whether the Ezsignfoldertype is active or not
	BEzsignfoldertypeIsactive bool `json:"bEzsignfoldertypeIsactive"`
	AFkiPdfalevelID []int32 `json:"a_fkiPdfalevelID,omitempty"`
	AObjUserlogintype []UserlogintypeResponse `json:"a_objUserlogintype"`
	AObjUsergroupAll []UsergroupResponse `json:"a_objUsergroupAll,omitempty"`
	AObjUsergroupRestricted []UsergroupResponse `json:"a_objUsergroupRestricted,omitempty"`
	AObjUsergroupTemplate []UsergroupResponse `json:"a_objUsergroupTemplate,omitempty"`
	ObjAudit CommonAudit `json:"objAudit"`
}

type _EzsignfoldertypeResponseV4 EzsignfoldertypeResponseV4

// NewEzsignfoldertypeResponseV4 instantiates a new EzsignfoldertypeResponseV4 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsignfoldertypeResponseV4(pkiEzsignfoldertypeID int32, objEzsignfoldertypeName MultilingualEzsignfoldertypeName, fkiBrandingID int32, sBrandingDescriptionX string, eEzsignfoldertypePrivacylevel FieldEEzsignfoldertypePrivacylevel, iEzsignfoldertypeArchivaldays int32, eEzsignfoldertypeDisposal FieldEEzsignfoldertypeDisposal, eEzsignfoldertypeCompletion FieldEEzsignfoldertypeCompletion, iEzsignfoldertypeDeadlinedays int32, bEzsignfoldertypeSendsignedtodocumentowner bool, bEzsignfoldertypeSendsignedtofolderowner bool, bEzsignfoldertypeSendsignedtocolleague bool, bEzsignfoldertypeSendsummarytodocumentowner bool, bEzsignfoldertypeSendsummarytofolderowner bool, bEzsignfoldertypeSendsummarytocolleague bool, bEzsignfoldertypeIsactive bool, aObjUserlogintype []UserlogintypeResponse, objAudit CommonAudit) *EzsignfoldertypeResponseV4 {
	this := EzsignfoldertypeResponseV4{}
	this.PkiEzsignfoldertypeID = pkiEzsignfoldertypeID
	this.ObjEzsignfoldertypeName = objEzsignfoldertypeName
	this.FkiBrandingID = fkiBrandingID
	this.SBrandingDescriptionX = sBrandingDescriptionX
	this.EEzsignfoldertypePrivacylevel = eEzsignfoldertypePrivacylevel
	this.IEzsignfoldertypeArchivaldays = iEzsignfoldertypeArchivaldays
	this.EEzsignfoldertypeDisposal = eEzsignfoldertypeDisposal
	this.EEzsignfoldertypeCompletion = eEzsignfoldertypeCompletion
	this.IEzsignfoldertypeDeadlinedays = iEzsignfoldertypeDeadlinedays
	this.BEzsignfoldertypeSendsignedtodocumentowner = bEzsignfoldertypeSendsignedtodocumentowner
	this.BEzsignfoldertypeSendsignedtofolderowner = bEzsignfoldertypeSendsignedtofolderowner
	this.BEzsignfoldertypeSendsignedtocolleague = bEzsignfoldertypeSendsignedtocolleague
	this.BEzsignfoldertypeSendsummarytodocumentowner = bEzsignfoldertypeSendsummarytodocumentowner
	this.BEzsignfoldertypeSendsummarytofolderowner = bEzsignfoldertypeSendsummarytofolderowner
	this.BEzsignfoldertypeSendsummarytocolleague = bEzsignfoldertypeSendsummarytocolleague
	this.BEzsignfoldertypeIsactive = bEzsignfoldertypeIsactive
	this.AObjUserlogintype = aObjUserlogintype
	this.ObjAudit = objAudit
	return &this
}

// NewEzsignfoldertypeResponseV4WithDefaults instantiates a new EzsignfoldertypeResponseV4 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsignfoldertypeResponseV4WithDefaults() *EzsignfoldertypeResponseV4 {
	this := EzsignfoldertypeResponseV4{}
	return &this
}

// GetPkiEzsignfoldertypeID returns the PkiEzsignfoldertypeID field value
func (o *EzsignfoldertypeResponseV4) GetPkiEzsignfoldertypeID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PkiEzsignfoldertypeID
}

// GetPkiEzsignfoldertypeIDOk returns a tuple with the PkiEzsignfoldertypeID field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetPkiEzsignfoldertypeIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkiEzsignfoldertypeID, true
}

// SetPkiEzsignfoldertypeID sets field value
func (o *EzsignfoldertypeResponseV4) SetPkiEzsignfoldertypeID(v int32) {
	o.PkiEzsignfoldertypeID = v
}

// GetObjEzsignfoldertypeName returns the ObjEzsignfoldertypeName field value
func (o *EzsignfoldertypeResponseV4) GetObjEzsignfoldertypeName() MultilingualEzsignfoldertypeName {
	if o == nil {
		var ret MultilingualEzsignfoldertypeName
		return ret
	}

	return o.ObjEzsignfoldertypeName
}

// GetObjEzsignfoldertypeNameOk returns a tuple with the ObjEzsignfoldertypeName field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetObjEzsignfoldertypeNameOk() (*MultilingualEzsignfoldertypeName, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjEzsignfoldertypeName, true
}

// SetObjEzsignfoldertypeName sets field value
func (o *EzsignfoldertypeResponseV4) SetObjEzsignfoldertypeName(v MultilingualEzsignfoldertypeName) {
	o.ObjEzsignfoldertypeName = v
}

// GetFkiBrandingID returns the FkiBrandingID field value
func (o *EzsignfoldertypeResponseV4) GetFkiBrandingID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiBrandingID
}

// GetFkiBrandingIDOk returns a tuple with the FkiBrandingID field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetFkiBrandingIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiBrandingID, true
}

// SetFkiBrandingID sets field value
func (o *EzsignfoldertypeResponseV4) SetFkiBrandingID(v int32) {
	o.FkiBrandingID = v
}

// GetFkiBillingentityinternalID returns the FkiBillingentityinternalID field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetFkiBillingentityinternalID() int32 {
	if o == nil || IsNil(o.FkiBillingentityinternalID) {
		var ret int32
		return ret
	}
	return *o.FkiBillingentityinternalID
}

// GetFkiBillingentityinternalIDOk returns a tuple with the FkiBillingentityinternalID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetFkiBillingentityinternalIDOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiBillingentityinternalID) {
		return nil, false
	}
	return o.FkiBillingentityinternalID, true
}

// HasFkiBillingentityinternalID returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasFkiBillingentityinternalID() bool {
	if o != nil && !IsNil(o.FkiBillingentityinternalID) {
		return true
	}

	return false
}

// SetFkiBillingentityinternalID gets a reference to the given int32 and assigns it to the FkiBillingentityinternalID field.
func (o *EzsignfoldertypeResponseV4) SetFkiBillingentityinternalID(v int32) {
	o.FkiBillingentityinternalID = &v
}

// GetFkiEzsigntsarequirementID returns the FkiEzsigntsarequirementID field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetFkiEzsigntsarequirementID() int32 {
	if o == nil || IsNil(o.FkiEzsigntsarequirementID) {
		var ret int32
		return ret
	}
	return *o.FkiEzsigntsarequirementID
}

// GetFkiEzsigntsarequirementIDOk returns a tuple with the FkiEzsigntsarequirementID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetFkiEzsigntsarequirementIDOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiEzsigntsarequirementID) {
		return nil, false
	}
	return o.FkiEzsigntsarequirementID, true
}

// HasFkiEzsigntsarequirementID returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasFkiEzsigntsarequirementID() bool {
	if o != nil && !IsNil(o.FkiEzsigntsarequirementID) {
		return true
	}

	return false
}

// SetFkiEzsigntsarequirementID gets a reference to the given int32 and assigns it to the FkiEzsigntsarequirementID field.
func (o *EzsignfoldertypeResponseV4) SetFkiEzsigntsarequirementID(v int32) {
	o.FkiEzsigntsarequirementID = &v
}

// GetFkiFontIDAnnotation returns the FkiFontIDAnnotation field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetFkiFontIDAnnotation() int32 {
	if o == nil || IsNil(o.FkiFontIDAnnotation) {
		var ret int32
		return ret
	}
	return *o.FkiFontIDAnnotation
}

// GetFkiFontIDAnnotationOk returns a tuple with the FkiFontIDAnnotation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetFkiFontIDAnnotationOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiFontIDAnnotation) {
		return nil, false
	}
	return o.FkiFontIDAnnotation, true
}

// HasFkiFontIDAnnotation returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasFkiFontIDAnnotation() bool {
	if o != nil && !IsNil(o.FkiFontIDAnnotation) {
		return true
	}

	return false
}

// SetFkiFontIDAnnotation gets a reference to the given int32 and assigns it to the FkiFontIDAnnotation field.
func (o *EzsignfoldertypeResponseV4) SetFkiFontIDAnnotation(v int32) {
	o.FkiFontIDAnnotation = &v
}

// GetFkiFontIDFormfield returns the FkiFontIDFormfield field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetFkiFontIDFormfield() int32 {
	if o == nil || IsNil(o.FkiFontIDFormfield) {
		var ret int32
		return ret
	}
	return *o.FkiFontIDFormfield
}

// GetFkiFontIDFormfieldOk returns a tuple with the FkiFontIDFormfield field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetFkiFontIDFormfieldOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiFontIDFormfield) {
		return nil, false
	}
	return o.FkiFontIDFormfield, true
}

// HasFkiFontIDFormfield returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasFkiFontIDFormfield() bool {
	if o != nil && !IsNil(o.FkiFontIDFormfield) {
		return true
	}

	return false
}

// SetFkiFontIDFormfield gets a reference to the given int32 and assigns it to the FkiFontIDFormfield field.
func (o *EzsignfoldertypeResponseV4) SetFkiFontIDFormfield(v int32) {
	o.FkiFontIDFormfield = &v
}

// GetFkiFontIDSignature returns the FkiFontIDSignature field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetFkiFontIDSignature() int32 {
	if o == nil || IsNil(o.FkiFontIDSignature) {
		var ret int32
		return ret
	}
	return *o.FkiFontIDSignature
}

// GetFkiFontIDSignatureOk returns a tuple with the FkiFontIDSignature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetFkiFontIDSignatureOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiFontIDSignature) {
		return nil, false
	}
	return o.FkiFontIDSignature, true
}

// HasFkiFontIDSignature returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasFkiFontIDSignature() bool {
	if o != nil && !IsNil(o.FkiFontIDSignature) {
		return true
	}

	return false
}

// SetFkiFontIDSignature gets a reference to the given int32 and assigns it to the FkiFontIDSignature field.
func (o *EzsignfoldertypeResponseV4) SetFkiFontIDSignature(v int32) {
	o.FkiFontIDSignature = &v
}

// GetFkiPdfalevelIDConvert returns the FkiPdfalevelIDConvert field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetFkiPdfalevelIDConvert() int32 {
	if o == nil || IsNil(o.FkiPdfalevelIDConvert) {
		var ret int32
		return ret
	}
	return *o.FkiPdfalevelIDConvert
}

// GetFkiPdfalevelIDConvertOk returns a tuple with the FkiPdfalevelIDConvert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetFkiPdfalevelIDConvertOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiPdfalevelIDConvert) {
		return nil, false
	}
	return o.FkiPdfalevelIDConvert, true
}

// HasFkiPdfalevelIDConvert returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasFkiPdfalevelIDConvert() bool {
	if o != nil && !IsNil(o.FkiPdfalevelIDConvert) {
		return true
	}

	return false
}

// SetFkiPdfalevelIDConvert gets a reference to the given int32 and assigns it to the FkiPdfalevelIDConvert field.
func (o *EzsignfoldertypeResponseV4) SetFkiPdfalevelIDConvert(v int32) {
	o.FkiPdfalevelIDConvert = &v
}

// GetEEzsignfoldertypeDocumentdependency returns the EEzsignfoldertypeDocumentdependency field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetEEzsignfoldertypeDocumentdependency() FieldEEzsignfoldertypeDocumentdependency {
	if o == nil || IsNil(o.EEzsignfoldertypeDocumentdependency) {
		var ret FieldEEzsignfoldertypeDocumentdependency
		return ret
	}
	return *o.EEzsignfoldertypeDocumentdependency
}

// GetEEzsignfoldertypeDocumentdependencyOk returns a tuple with the EEzsignfoldertypeDocumentdependency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetEEzsignfoldertypeDocumentdependencyOk() (*FieldEEzsignfoldertypeDocumentdependency, bool) {
	if o == nil || IsNil(o.EEzsignfoldertypeDocumentdependency) {
		return nil, false
	}
	return o.EEzsignfoldertypeDocumentdependency, true
}

// HasEEzsignfoldertypeDocumentdependency returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasEEzsignfoldertypeDocumentdependency() bool {
	if o != nil && !IsNil(o.EEzsignfoldertypeDocumentdependency) {
		return true
	}

	return false
}

// SetEEzsignfoldertypeDocumentdependency gets a reference to the given FieldEEzsignfoldertypeDocumentdependency and assigns it to the EEzsignfoldertypeDocumentdependency field.
func (o *EzsignfoldertypeResponseV4) SetEEzsignfoldertypeDocumentdependency(v FieldEEzsignfoldertypeDocumentdependency) {
	o.EEzsignfoldertypeDocumentdependency = &v
}

// GetSBrandingDescriptionX returns the SBrandingDescriptionX field value
func (o *EzsignfoldertypeResponseV4) GetSBrandingDescriptionX() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SBrandingDescriptionX
}

// GetSBrandingDescriptionXOk returns a tuple with the SBrandingDescriptionX field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetSBrandingDescriptionXOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SBrandingDescriptionX, true
}

// SetSBrandingDescriptionX sets field value
func (o *EzsignfoldertypeResponseV4) SetSBrandingDescriptionX(v string) {
	o.SBrandingDescriptionX = v
}

// GetSBillingentityinternalDescriptionX returns the SBillingentityinternalDescriptionX field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetSBillingentityinternalDescriptionX() string {
	if o == nil || IsNil(o.SBillingentityinternalDescriptionX) {
		var ret string
		return ret
	}
	return *o.SBillingentityinternalDescriptionX
}

// GetSBillingentityinternalDescriptionXOk returns a tuple with the SBillingentityinternalDescriptionX field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetSBillingentityinternalDescriptionXOk() (*string, bool) {
	if o == nil || IsNil(o.SBillingentityinternalDescriptionX) {
		return nil, false
	}
	return o.SBillingentityinternalDescriptionX, true
}

// HasSBillingentityinternalDescriptionX returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasSBillingentityinternalDescriptionX() bool {
	if o != nil && !IsNil(o.SBillingentityinternalDescriptionX) {
		return true
	}

	return false
}

// SetSBillingentityinternalDescriptionX gets a reference to the given string and assigns it to the SBillingentityinternalDescriptionX field.
func (o *EzsignfoldertypeResponseV4) SetSBillingentityinternalDescriptionX(v string) {
	o.SBillingentityinternalDescriptionX = &v
}

// GetSEzsigntsarequirementDescriptionX returns the SEzsigntsarequirementDescriptionX field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetSEzsigntsarequirementDescriptionX() string {
	if o == nil || IsNil(o.SEzsigntsarequirementDescriptionX) {
		var ret string
		return ret
	}
	return *o.SEzsigntsarequirementDescriptionX
}

// GetSEzsigntsarequirementDescriptionXOk returns a tuple with the SEzsigntsarequirementDescriptionX field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetSEzsigntsarequirementDescriptionXOk() (*string, bool) {
	if o == nil || IsNil(o.SEzsigntsarequirementDescriptionX) {
		return nil, false
	}
	return o.SEzsigntsarequirementDescriptionX, true
}

// HasSEzsigntsarequirementDescriptionX returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasSEzsigntsarequirementDescriptionX() bool {
	if o != nil && !IsNil(o.SEzsigntsarequirementDescriptionX) {
		return true
	}

	return false
}

// SetSEzsigntsarequirementDescriptionX gets a reference to the given string and assigns it to the SEzsigntsarequirementDescriptionX field.
func (o *EzsignfoldertypeResponseV4) SetSEzsigntsarequirementDescriptionX(v string) {
	o.SEzsigntsarequirementDescriptionX = &v
}

// GetSEmailAddressSigned returns the SEmailAddressSigned field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetSEmailAddressSigned() string {
	if o == nil || IsNil(o.SEmailAddressSigned) {
		var ret string
		return ret
	}
	return *o.SEmailAddressSigned
}

// GetSEmailAddressSignedOk returns a tuple with the SEmailAddressSigned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetSEmailAddressSignedOk() (*string, bool) {
	if o == nil || IsNil(o.SEmailAddressSigned) {
		return nil, false
	}
	return o.SEmailAddressSigned, true
}

// HasSEmailAddressSigned returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasSEmailAddressSigned() bool {
	if o != nil && !IsNil(o.SEmailAddressSigned) {
		return true
	}

	return false
}

// SetSEmailAddressSigned gets a reference to the given string and assigns it to the SEmailAddressSigned field.
func (o *EzsignfoldertypeResponseV4) SetSEmailAddressSigned(v string) {
	o.SEmailAddressSigned = &v
}

// GetSEmailAddressSummary returns the SEmailAddressSummary field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetSEmailAddressSummary() string {
	if o == nil || IsNil(o.SEmailAddressSummary) {
		var ret string
		return ret
	}
	return *o.SEmailAddressSummary
}

// GetSEmailAddressSummaryOk returns a tuple with the SEmailAddressSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetSEmailAddressSummaryOk() (*string, bool) {
	if o == nil || IsNil(o.SEmailAddressSummary) {
		return nil, false
	}
	return o.SEmailAddressSummary, true
}

// HasSEmailAddressSummary returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasSEmailAddressSummary() bool {
	if o != nil && !IsNil(o.SEmailAddressSummary) {
		return true
	}

	return false
}

// SetSEmailAddressSummary gets a reference to the given string and assigns it to the SEmailAddressSummary field.
func (o *EzsignfoldertypeResponseV4) SetSEmailAddressSummary(v string) {
	o.SEmailAddressSummary = &v
}

// GetEEzsignfoldertypePdfarequirement returns the EEzsignfoldertypePdfarequirement field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetEEzsignfoldertypePdfarequirement() FieldEEzsignfoldertypePdfarequirement {
	if o == nil || IsNil(o.EEzsignfoldertypePdfarequirement) {
		var ret FieldEEzsignfoldertypePdfarequirement
		return ret
	}
	return *o.EEzsignfoldertypePdfarequirement
}

// GetEEzsignfoldertypePdfarequirementOk returns a tuple with the EEzsignfoldertypePdfarequirement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetEEzsignfoldertypePdfarequirementOk() (*FieldEEzsignfoldertypePdfarequirement, bool) {
	if o == nil || IsNil(o.EEzsignfoldertypePdfarequirement) {
		return nil, false
	}
	return o.EEzsignfoldertypePdfarequirement, true
}

// HasEEzsignfoldertypePdfarequirement returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasEEzsignfoldertypePdfarequirement() bool {
	if o != nil && !IsNil(o.EEzsignfoldertypePdfarequirement) {
		return true
	}

	return false
}

// SetEEzsignfoldertypePdfarequirement gets a reference to the given FieldEEzsignfoldertypePdfarequirement and assigns it to the EEzsignfoldertypePdfarequirement field.
func (o *EzsignfoldertypeResponseV4) SetEEzsignfoldertypePdfarequirement(v FieldEEzsignfoldertypePdfarequirement) {
	o.EEzsignfoldertypePdfarequirement = &v
}

// GetEEzsignfoldertypePdfanoncompliantaction returns the EEzsignfoldertypePdfanoncompliantaction field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetEEzsignfoldertypePdfanoncompliantaction() FieldEEzsignfoldertypePdfanoncompliantaction {
	if o == nil || IsNil(o.EEzsignfoldertypePdfanoncompliantaction) {
		var ret FieldEEzsignfoldertypePdfanoncompliantaction
		return ret
	}
	return *o.EEzsignfoldertypePdfanoncompliantaction
}

// GetEEzsignfoldertypePdfanoncompliantactionOk returns a tuple with the EEzsignfoldertypePdfanoncompliantaction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetEEzsignfoldertypePdfanoncompliantactionOk() (*FieldEEzsignfoldertypePdfanoncompliantaction, bool) {
	if o == nil || IsNil(o.EEzsignfoldertypePdfanoncompliantaction) {
		return nil, false
	}
	return o.EEzsignfoldertypePdfanoncompliantaction, true
}

// HasEEzsignfoldertypePdfanoncompliantaction returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasEEzsignfoldertypePdfanoncompliantaction() bool {
	if o != nil && !IsNil(o.EEzsignfoldertypePdfanoncompliantaction) {
		return true
	}

	return false
}

// SetEEzsignfoldertypePdfanoncompliantaction gets a reference to the given FieldEEzsignfoldertypePdfanoncompliantaction and assigns it to the EEzsignfoldertypePdfanoncompliantaction field.
func (o *EzsignfoldertypeResponseV4) SetEEzsignfoldertypePdfanoncompliantaction(v FieldEEzsignfoldertypePdfanoncompliantaction) {
	o.EEzsignfoldertypePdfanoncompliantaction = &v
}

// GetEEzsignfoldertypePrivacylevel returns the EEzsignfoldertypePrivacylevel field value
func (o *EzsignfoldertypeResponseV4) GetEEzsignfoldertypePrivacylevel() FieldEEzsignfoldertypePrivacylevel {
	if o == nil {
		var ret FieldEEzsignfoldertypePrivacylevel
		return ret
	}

	return o.EEzsignfoldertypePrivacylevel
}

// GetEEzsignfoldertypePrivacylevelOk returns a tuple with the EEzsignfoldertypePrivacylevel field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetEEzsignfoldertypePrivacylevelOk() (*FieldEEzsignfoldertypePrivacylevel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EEzsignfoldertypePrivacylevel, true
}

// SetEEzsignfoldertypePrivacylevel sets field value
func (o *EzsignfoldertypeResponseV4) SetEEzsignfoldertypePrivacylevel(v FieldEEzsignfoldertypePrivacylevel) {
	o.EEzsignfoldertypePrivacylevel = v
}

// GetIEzsignfoldertypeFontsizeannotation returns the IEzsignfoldertypeFontsizeannotation field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetIEzsignfoldertypeFontsizeannotation() int32 {
	if o == nil || IsNil(o.IEzsignfoldertypeFontsizeannotation) {
		var ret int32
		return ret
	}
	return *o.IEzsignfoldertypeFontsizeannotation
}

// GetIEzsignfoldertypeFontsizeannotationOk returns a tuple with the IEzsignfoldertypeFontsizeannotation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetIEzsignfoldertypeFontsizeannotationOk() (*int32, bool) {
	if o == nil || IsNil(o.IEzsignfoldertypeFontsizeannotation) {
		return nil, false
	}
	return o.IEzsignfoldertypeFontsizeannotation, true
}

// HasIEzsignfoldertypeFontsizeannotation returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasIEzsignfoldertypeFontsizeannotation() bool {
	if o != nil && !IsNil(o.IEzsignfoldertypeFontsizeannotation) {
		return true
	}

	return false
}

// SetIEzsignfoldertypeFontsizeannotation gets a reference to the given int32 and assigns it to the IEzsignfoldertypeFontsizeannotation field.
func (o *EzsignfoldertypeResponseV4) SetIEzsignfoldertypeFontsizeannotation(v int32) {
	o.IEzsignfoldertypeFontsizeannotation = &v
}

// GetIEzsignfoldertypeFontsizeformfield returns the IEzsignfoldertypeFontsizeformfield field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetIEzsignfoldertypeFontsizeformfield() int32 {
	if o == nil || IsNil(o.IEzsignfoldertypeFontsizeformfield) {
		var ret int32
		return ret
	}
	return *o.IEzsignfoldertypeFontsizeformfield
}

// GetIEzsignfoldertypeFontsizeformfieldOk returns a tuple with the IEzsignfoldertypeFontsizeformfield field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetIEzsignfoldertypeFontsizeformfieldOk() (*int32, bool) {
	if o == nil || IsNil(o.IEzsignfoldertypeFontsizeformfield) {
		return nil, false
	}
	return o.IEzsignfoldertypeFontsizeformfield, true
}

// HasIEzsignfoldertypeFontsizeformfield returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasIEzsignfoldertypeFontsizeformfield() bool {
	if o != nil && !IsNil(o.IEzsignfoldertypeFontsizeformfield) {
		return true
	}

	return false
}

// SetIEzsignfoldertypeFontsizeformfield gets a reference to the given int32 and assigns it to the IEzsignfoldertypeFontsizeformfield field.
func (o *EzsignfoldertypeResponseV4) SetIEzsignfoldertypeFontsizeformfield(v int32) {
	o.IEzsignfoldertypeFontsizeformfield = &v
}

// GetIEzsignfoldertypeSendreminderfirstdays returns the IEzsignfoldertypeSendreminderfirstdays field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetIEzsignfoldertypeSendreminderfirstdays() int32 {
	if o == nil || IsNil(o.IEzsignfoldertypeSendreminderfirstdays) {
		var ret int32
		return ret
	}
	return *o.IEzsignfoldertypeSendreminderfirstdays
}

// GetIEzsignfoldertypeSendreminderfirstdaysOk returns a tuple with the IEzsignfoldertypeSendreminderfirstdays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetIEzsignfoldertypeSendreminderfirstdaysOk() (*int32, bool) {
	if o == nil || IsNil(o.IEzsignfoldertypeSendreminderfirstdays) {
		return nil, false
	}
	return o.IEzsignfoldertypeSendreminderfirstdays, true
}

// HasIEzsignfoldertypeSendreminderfirstdays returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasIEzsignfoldertypeSendreminderfirstdays() bool {
	if o != nil && !IsNil(o.IEzsignfoldertypeSendreminderfirstdays) {
		return true
	}

	return false
}

// SetIEzsignfoldertypeSendreminderfirstdays gets a reference to the given int32 and assigns it to the IEzsignfoldertypeSendreminderfirstdays field.
func (o *EzsignfoldertypeResponseV4) SetIEzsignfoldertypeSendreminderfirstdays(v int32) {
	o.IEzsignfoldertypeSendreminderfirstdays = &v
}

// GetIEzsignfoldertypeSendreminderotherdays returns the IEzsignfoldertypeSendreminderotherdays field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetIEzsignfoldertypeSendreminderotherdays() int32 {
	if o == nil || IsNil(o.IEzsignfoldertypeSendreminderotherdays) {
		var ret int32
		return ret
	}
	return *o.IEzsignfoldertypeSendreminderotherdays
}

// GetIEzsignfoldertypeSendreminderotherdaysOk returns a tuple with the IEzsignfoldertypeSendreminderotherdays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetIEzsignfoldertypeSendreminderotherdaysOk() (*int32, bool) {
	if o == nil || IsNil(o.IEzsignfoldertypeSendreminderotherdays) {
		return nil, false
	}
	return o.IEzsignfoldertypeSendreminderotherdays, true
}

// HasIEzsignfoldertypeSendreminderotherdays returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasIEzsignfoldertypeSendreminderotherdays() bool {
	if o != nil && !IsNil(o.IEzsignfoldertypeSendreminderotherdays) {
		return true
	}

	return false
}

// SetIEzsignfoldertypeSendreminderotherdays gets a reference to the given int32 and assigns it to the IEzsignfoldertypeSendreminderotherdays field.
func (o *EzsignfoldertypeResponseV4) SetIEzsignfoldertypeSendreminderotherdays(v int32) {
	o.IEzsignfoldertypeSendreminderotherdays = &v
}

// GetIEzsignfoldertypeArchivaldays returns the IEzsignfoldertypeArchivaldays field value
func (o *EzsignfoldertypeResponseV4) GetIEzsignfoldertypeArchivaldays() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IEzsignfoldertypeArchivaldays
}

// GetIEzsignfoldertypeArchivaldaysOk returns a tuple with the IEzsignfoldertypeArchivaldays field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetIEzsignfoldertypeArchivaldaysOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IEzsignfoldertypeArchivaldays, true
}

// SetIEzsignfoldertypeArchivaldays sets field value
func (o *EzsignfoldertypeResponseV4) SetIEzsignfoldertypeArchivaldays(v int32) {
	o.IEzsignfoldertypeArchivaldays = v
}

// GetEEzsignfoldertypeDisposal returns the EEzsignfoldertypeDisposal field value
func (o *EzsignfoldertypeResponseV4) GetEEzsignfoldertypeDisposal() FieldEEzsignfoldertypeDisposal {
	if o == nil {
		var ret FieldEEzsignfoldertypeDisposal
		return ret
	}

	return o.EEzsignfoldertypeDisposal
}

// GetEEzsignfoldertypeDisposalOk returns a tuple with the EEzsignfoldertypeDisposal field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetEEzsignfoldertypeDisposalOk() (*FieldEEzsignfoldertypeDisposal, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EEzsignfoldertypeDisposal, true
}

// SetEEzsignfoldertypeDisposal sets field value
func (o *EzsignfoldertypeResponseV4) SetEEzsignfoldertypeDisposal(v FieldEEzsignfoldertypeDisposal) {
	o.EEzsignfoldertypeDisposal = v
}

// GetEEzsignfoldertypeCompletion returns the EEzsignfoldertypeCompletion field value
func (o *EzsignfoldertypeResponseV4) GetEEzsignfoldertypeCompletion() FieldEEzsignfoldertypeCompletion {
	if o == nil {
		var ret FieldEEzsignfoldertypeCompletion
		return ret
	}

	return o.EEzsignfoldertypeCompletion
}

// GetEEzsignfoldertypeCompletionOk returns a tuple with the EEzsignfoldertypeCompletion field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetEEzsignfoldertypeCompletionOk() (*FieldEEzsignfoldertypeCompletion, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EEzsignfoldertypeCompletion, true
}

// SetEEzsignfoldertypeCompletion sets field value
func (o *EzsignfoldertypeResponseV4) SetEEzsignfoldertypeCompletion(v FieldEEzsignfoldertypeCompletion) {
	o.EEzsignfoldertypeCompletion = v
}

// GetIEzsignfoldertypeDisposaldays returns the IEzsignfoldertypeDisposaldays field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetIEzsignfoldertypeDisposaldays() int32 {
	if o == nil || IsNil(o.IEzsignfoldertypeDisposaldays) {
		var ret int32
		return ret
	}
	return *o.IEzsignfoldertypeDisposaldays
}

// GetIEzsignfoldertypeDisposaldaysOk returns a tuple with the IEzsignfoldertypeDisposaldays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetIEzsignfoldertypeDisposaldaysOk() (*int32, bool) {
	if o == nil || IsNil(o.IEzsignfoldertypeDisposaldays) {
		return nil, false
	}
	return o.IEzsignfoldertypeDisposaldays, true
}

// HasIEzsignfoldertypeDisposaldays returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasIEzsignfoldertypeDisposaldays() bool {
	if o != nil && !IsNil(o.IEzsignfoldertypeDisposaldays) {
		return true
	}

	return false
}

// SetIEzsignfoldertypeDisposaldays gets a reference to the given int32 and assigns it to the IEzsignfoldertypeDisposaldays field.
func (o *EzsignfoldertypeResponseV4) SetIEzsignfoldertypeDisposaldays(v int32) {
	o.IEzsignfoldertypeDisposaldays = &v
}

// GetIEzsignfoldertypeDeadlinedays returns the IEzsignfoldertypeDeadlinedays field value
func (o *EzsignfoldertypeResponseV4) GetIEzsignfoldertypeDeadlinedays() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IEzsignfoldertypeDeadlinedays
}

// GetIEzsignfoldertypeDeadlinedaysOk returns a tuple with the IEzsignfoldertypeDeadlinedays field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetIEzsignfoldertypeDeadlinedaysOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IEzsignfoldertypeDeadlinedays, true
}

// SetIEzsignfoldertypeDeadlinedays sets field value
func (o *EzsignfoldertypeResponseV4) SetIEzsignfoldertypeDeadlinedays(v int32) {
	o.IEzsignfoldertypeDeadlinedays = v
}

// GetBEzsignfoldertypePrematurelyendautomatically returns the BEzsignfoldertypePrematurelyendautomatically field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypePrematurelyendautomatically() bool {
	if o == nil || IsNil(o.BEzsignfoldertypePrematurelyendautomatically) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypePrematurelyendautomatically
}

// GetBEzsignfoldertypePrematurelyendautomaticallyOk returns a tuple with the BEzsignfoldertypePrematurelyendautomatically field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypePrematurelyendautomaticallyOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypePrematurelyendautomatically) {
		return nil, false
	}
	return o.BEzsignfoldertypePrematurelyendautomatically, true
}

// HasBEzsignfoldertypePrematurelyendautomatically returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasBEzsignfoldertypePrematurelyendautomatically() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypePrematurelyendautomatically) {
		return true
	}

	return false
}

// SetBEzsignfoldertypePrematurelyendautomatically gets a reference to the given bool and assigns it to the BEzsignfoldertypePrematurelyendautomatically field.
func (o *EzsignfoldertypeResponseV4) SetBEzsignfoldertypePrematurelyendautomatically(v bool) {
	o.BEzsignfoldertypePrematurelyendautomatically = &v
}

// GetIEzsignfoldertypePrematurelyendautomaticallydays returns the IEzsignfoldertypePrematurelyendautomaticallydays field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetIEzsignfoldertypePrematurelyendautomaticallydays() int32 {
	if o == nil || IsNil(o.IEzsignfoldertypePrematurelyendautomaticallydays) {
		var ret int32
		return ret
	}
	return *o.IEzsignfoldertypePrematurelyendautomaticallydays
}

// GetIEzsignfoldertypePrematurelyendautomaticallydaysOk returns a tuple with the IEzsignfoldertypePrematurelyendautomaticallydays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetIEzsignfoldertypePrematurelyendautomaticallydaysOk() (*int32, bool) {
	if o == nil || IsNil(o.IEzsignfoldertypePrematurelyendautomaticallydays) {
		return nil, false
	}
	return o.IEzsignfoldertypePrematurelyendautomaticallydays, true
}

// HasIEzsignfoldertypePrematurelyendautomaticallydays returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasIEzsignfoldertypePrematurelyendautomaticallydays() bool {
	if o != nil && !IsNil(o.IEzsignfoldertypePrematurelyendautomaticallydays) {
		return true
	}

	return false
}

// SetIEzsignfoldertypePrematurelyendautomaticallydays gets a reference to the given int32 and assigns it to the IEzsignfoldertypePrematurelyendautomaticallydays field.
func (o *EzsignfoldertypeResponseV4) SetIEzsignfoldertypePrematurelyendautomaticallydays(v int32) {
	o.IEzsignfoldertypePrematurelyendautomaticallydays = &v
}

// GetBEzsignfoldertypeAutomaticsignature returns the BEzsignfoldertypeAutomaticsignature field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeAutomaticsignature() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeAutomaticsignature) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeAutomaticsignature
}

// GetBEzsignfoldertypeAutomaticsignatureOk returns a tuple with the BEzsignfoldertypeAutomaticsignature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeAutomaticsignatureOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeAutomaticsignature) {
		return nil, false
	}
	return o.BEzsignfoldertypeAutomaticsignature, true
}

// HasBEzsignfoldertypeAutomaticsignature returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasBEzsignfoldertypeAutomaticsignature() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeAutomaticsignature) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeAutomaticsignature gets a reference to the given bool and assigns it to the BEzsignfoldertypeAutomaticsignature field.
func (o *EzsignfoldertypeResponseV4) SetBEzsignfoldertypeAutomaticsignature(v bool) {
	o.BEzsignfoldertypeAutomaticsignature = &v
}

// GetBEzsignfoldertypeDelegate returns the BEzsignfoldertypeDelegate field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeDelegate() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeDelegate) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeDelegate
}

// GetBEzsignfoldertypeDelegateOk returns a tuple with the BEzsignfoldertypeDelegate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeDelegateOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeDelegate) {
		return nil, false
	}
	return o.BEzsignfoldertypeDelegate, true
}

// HasBEzsignfoldertypeDelegate returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasBEzsignfoldertypeDelegate() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeDelegate) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeDelegate gets a reference to the given bool and assigns it to the BEzsignfoldertypeDelegate field.
func (o *EzsignfoldertypeResponseV4) SetBEzsignfoldertypeDelegate(v bool) {
	o.BEzsignfoldertypeDelegate = &v
}

// GetBEzsignfoldertypeDiscussion returns the BEzsignfoldertypeDiscussion field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeDiscussion() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeDiscussion) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeDiscussion
}

// GetBEzsignfoldertypeDiscussionOk returns a tuple with the BEzsignfoldertypeDiscussion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeDiscussionOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeDiscussion) {
		return nil, false
	}
	return o.BEzsignfoldertypeDiscussion, true
}

// HasBEzsignfoldertypeDiscussion returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasBEzsignfoldertypeDiscussion() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeDiscussion) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeDiscussion gets a reference to the given bool and assigns it to the BEzsignfoldertypeDiscussion field.
func (o *EzsignfoldertypeResponseV4) SetBEzsignfoldertypeDiscussion(v bool) {
	o.BEzsignfoldertypeDiscussion = &v
}

// GetBEzsignfoldertypeLogrecipientinproof returns the BEzsignfoldertypeLogrecipientinproof field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeLogrecipientinproof() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeLogrecipientinproof) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeLogrecipientinproof
}

// GetBEzsignfoldertypeLogrecipientinproofOk returns a tuple with the BEzsignfoldertypeLogrecipientinproof field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeLogrecipientinproofOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeLogrecipientinproof) {
		return nil, false
	}
	return o.BEzsignfoldertypeLogrecipientinproof, true
}

// HasBEzsignfoldertypeLogrecipientinproof returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasBEzsignfoldertypeLogrecipientinproof() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeLogrecipientinproof) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeLogrecipientinproof gets a reference to the given bool and assigns it to the BEzsignfoldertypeLogrecipientinproof field.
func (o *EzsignfoldertypeResponseV4) SetBEzsignfoldertypeLogrecipientinproof(v bool) {
	o.BEzsignfoldertypeLogrecipientinproof = &v
}

// GetBEzsignfoldertypeReassignezsignsigner returns the BEzsignfoldertypeReassignezsignsigner field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeReassignezsignsigner() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeReassignezsignsigner) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeReassignezsignsigner
}

// GetBEzsignfoldertypeReassignezsignsignerOk returns a tuple with the BEzsignfoldertypeReassignezsignsigner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeReassignezsignsignerOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeReassignezsignsigner) {
		return nil, false
	}
	return o.BEzsignfoldertypeReassignezsignsigner, true
}

// HasBEzsignfoldertypeReassignezsignsigner returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasBEzsignfoldertypeReassignezsignsigner() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeReassignezsignsigner) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeReassignezsignsigner gets a reference to the given bool and assigns it to the BEzsignfoldertypeReassignezsignsigner field.
func (o *EzsignfoldertypeResponseV4) SetBEzsignfoldertypeReassignezsignsigner(v bool) {
	o.BEzsignfoldertypeReassignezsignsigner = &v
}

// GetBEzsignfoldertypeReassignuser returns the BEzsignfoldertypeReassignuser field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeReassignuser() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeReassignuser) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeReassignuser
}

// GetBEzsignfoldertypeReassignuserOk returns a tuple with the BEzsignfoldertypeReassignuser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeReassignuserOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeReassignuser) {
		return nil, false
	}
	return o.BEzsignfoldertypeReassignuser, true
}

// HasBEzsignfoldertypeReassignuser returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasBEzsignfoldertypeReassignuser() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeReassignuser) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeReassignuser gets a reference to the given bool and assigns it to the BEzsignfoldertypeReassignuser field.
func (o *EzsignfoldertypeResponseV4) SetBEzsignfoldertypeReassignuser(v bool) {
	o.BEzsignfoldertypeReassignuser = &v
}

// GetBEzsignfoldertypeReassigngroup returns the BEzsignfoldertypeReassigngroup field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeReassigngroup() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeReassigngroup) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeReassigngroup
}

// GetBEzsignfoldertypeReassigngroupOk returns a tuple with the BEzsignfoldertypeReassigngroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeReassigngroupOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeReassigngroup) {
		return nil, false
	}
	return o.BEzsignfoldertypeReassigngroup, true
}

// HasBEzsignfoldertypeReassigngroup returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasBEzsignfoldertypeReassigngroup() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeReassigngroup) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeReassigngroup gets a reference to the given bool and assigns it to the BEzsignfoldertypeReassigngroup field.
func (o *EzsignfoldertypeResponseV4) SetBEzsignfoldertypeReassigngroup(v bool) {
	o.BEzsignfoldertypeReassigngroup = &v
}

// GetBEzsignfoldertypeSendsignedtoezsignsigner returns the BEzsignfoldertypeSendsignedtoezsignsigner field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendsignedtoezsignsigner() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeSendsignedtoezsignsigner) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeSendsignedtoezsignsigner
}

// GetBEzsignfoldertypeSendsignedtoezsignsignerOk returns a tuple with the BEzsignfoldertypeSendsignedtoezsignsigner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendsignedtoezsignsignerOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeSendsignedtoezsignsigner) {
		return nil, false
	}
	return o.BEzsignfoldertypeSendsignedtoezsignsigner, true
}

// HasBEzsignfoldertypeSendsignedtoezsignsigner returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasBEzsignfoldertypeSendsignedtoezsignsigner() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeSendsignedtoezsignsigner) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeSendsignedtoezsignsigner gets a reference to the given bool and assigns it to the BEzsignfoldertypeSendsignedtoezsignsigner field.
func (o *EzsignfoldertypeResponseV4) SetBEzsignfoldertypeSendsignedtoezsignsigner(v bool) {
	o.BEzsignfoldertypeSendsignedtoezsignsigner = &v
}

// GetBEzsignfoldertypeSendsignedtouser returns the BEzsignfoldertypeSendsignedtouser field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendsignedtouser() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeSendsignedtouser) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeSendsignedtouser
}

// GetBEzsignfoldertypeSendsignedtouserOk returns a tuple with the BEzsignfoldertypeSendsignedtouser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendsignedtouserOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeSendsignedtouser) {
		return nil, false
	}
	return o.BEzsignfoldertypeSendsignedtouser, true
}

// HasBEzsignfoldertypeSendsignedtouser returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasBEzsignfoldertypeSendsignedtouser() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeSendsignedtouser) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeSendsignedtouser gets a reference to the given bool and assigns it to the BEzsignfoldertypeSendsignedtouser field.
func (o *EzsignfoldertypeResponseV4) SetBEzsignfoldertypeSendsignedtouser(v bool) {
	o.BEzsignfoldertypeSendsignedtouser = &v
}

// GetBEzsignfoldertypeSendattachmentezsignsigner returns the BEzsignfoldertypeSendattachmentezsignsigner field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendattachmentezsignsigner() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeSendattachmentezsignsigner) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeSendattachmentezsignsigner
}

// GetBEzsignfoldertypeSendattachmentezsignsignerOk returns a tuple with the BEzsignfoldertypeSendattachmentezsignsigner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendattachmentezsignsignerOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeSendattachmentezsignsigner) {
		return nil, false
	}
	return o.BEzsignfoldertypeSendattachmentezsignsigner, true
}

// HasBEzsignfoldertypeSendattachmentezsignsigner returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasBEzsignfoldertypeSendattachmentezsignsigner() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeSendattachmentezsignsigner) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeSendattachmentezsignsigner gets a reference to the given bool and assigns it to the BEzsignfoldertypeSendattachmentezsignsigner field.
func (o *EzsignfoldertypeResponseV4) SetBEzsignfoldertypeSendattachmentezsignsigner(v bool) {
	o.BEzsignfoldertypeSendattachmentezsignsigner = &v
}

// GetBEzsignfoldertypeSendproofezsignsigner returns the BEzsignfoldertypeSendproofezsignsigner field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendproofezsignsigner() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeSendproofezsignsigner) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeSendproofezsignsigner
}

// GetBEzsignfoldertypeSendproofezsignsignerOk returns a tuple with the BEzsignfoldertypeSendproofezsignsigner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendproofezsignsignerOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeSendproofezsignsigner) {
		return nil, false
	}
	return o.BEzsignfoldertypeSendproofezsignsigner, true
}

// HasBEzsignfoldertypeSendproofezsignsigner returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasBEzsignfoldertypeSendproofezsignsigner() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeSendproofezsignsigner) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeSendproofezsignsigner gets a reference to the given bool and assigns it to the BEzsignfoldertypeSendproofezsignsigner field.
func (o *EzsignfoldertypeResponseV4) SetBEzsignfoldertypeSendproofezsignsigner(v bool) {
	o.BEzsignfoldertypeSendproofezsignsigner = &v
}

// GetBEzsignfoldertypeSendattachmentreceivecopy returns the BEzsignfoldertypeSendattachmentreceivecopy field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendattachmentreceivecopy() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeSendattachmentreceivecopy) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeSendattachmentreceivecopy
}

// GetBEzsignfoldertypeSendattachmentreceivecopyOk returns a tuple with the BEzsignfoldertypeSendattachmentreceivecopy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendattachmentreceivecopyOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeSendattachmentreceivecopy) {
		return nil, false
	}
	return o.BEzsignfoldertypeSendattachmentreceivecopy, true
}

// HasBEzsignfoldertypeSendattachmentreceivecopy returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasBEzsignfoldertypeSendattachmentreceivecopy() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeSendattachmentreceivecopy) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeSendattachmentreceivecopy gets a reference to the given bool and assigns it to the BEzsignfoldertypeSendattachmentreceivecopy field.
func (o *EzsignfoldertypeResponseV4) SetBEzsignfoldertypeSendattachmentreceivecopy(v bool) {
	o.BEzsignfoldertypeSendattachmentreceivecopy = &v
}

// GetBEzsignfoldertypeSendattachmentuser returns the BEzsignfoldertypeSendattachmentuser field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendattachmentuser() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeSendattachmentuser) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeSendattachmentuser
}

// GetBEzsignfoldertypeSendattachmentuserOk returns a tuple with the BEzsignfoldertypeSendattachmentuser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendattachmentuserOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeSendattachmentuser) {
		return nil, false
	}
	return o.BEzsignfoldertypeSendattachmentuser, true
}

// HasBEzsignfoldertypeSendattachmentuser returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasBEzsignfoldertypeSendattachmentuser() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeSendattachmentuser) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeSendattachmentuser gets a reference to the given bool and assigns it to the BEzsignfoldertypeSendattachmentuser field.
func (o *EzsignfoldertypeResponseV4) SetBEzsignfoldertypeSendattachmentuser(v bool) {
	o.BEzsignfoldertypeSendattachmentuser = &v
}

// GetBEzsignfoldertypeSendproofuser returns the BEzsignfoldertypeSendproofuser field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendproofuser() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeSendproofuser) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeSendproofuser
}

// GetBEzsignfoldertypeSendproofuserOk returns a tuple with the BEzsignfoldertypeSendproofuser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendproofuserOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeSendproofuser) {
		return nil, false
	}
	return o.BEzsignfoldertypeSendproofuser, true
}

// HasBEzsignfoldertypeSendproofuser returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasBEzsignfoldertypeSendproofuser() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeSendproofuser) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeSendproofuser gets a reference to the given bool and assigns it to the BEzsignfoldertypeSendproofuser field.
func (o *EzsignfoldertypeResponseV4) SetBEzsignfoldertypeSendproofuser(v bool) {
	o.BEzsignfoldertypeSendproofuser = &v
}

// GetBEzsignfoldertypeSendproofemail returns the BEzsignfoldertypeSendproofemail field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendproofemail() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeSendproofemail) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeSendproofemail
}

// GetBEzsignfoldertypeSendproofemailOk returns a tuple with the BEzsignfoldertypeSendproofemail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendproofemailOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeSendproofemail) {
		return nil, false
	}
	return o.BEzsignfoldertypeSendproofemail, true
}

// HasBEzsignfoldertypeSendproofemail returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasBEzsignfoldertypeSendproofemail() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeSendproofemail) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeSendproofemail gets a reference to the given bool and assigns it to the BEzsignfoldertypeSendproofemail field.
func (o *EzsignfoldertypeResponseV4) SetBEzsignfoldertypeSendproofemail(v bool) {
	o.BEzsignfoldertypeSendproofemail = &v
}

// GetBEzsignfoldertypeAllowdownloadattachmentezsignsigner returns the BEzsignfoldertypeAllowdownloadattachmentezsignsigner field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeAllowdownloadattachmentezsignsigner() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeAllowdownloadattachmentezsignsigner) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeAllowdownloadattachmentezsignsigner
}

// GetBEzsignfoldertypeAllowdownloadattachmentezsignsignerOk returns a tuple with the BEzsignfoldertypeAllowdownloadattachmentezsignsigner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeAllowdownloadattachmentezsignsignerOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeAllowdownloadattachmentezsignsigner) {
		return nil, false
	}
	return o.BEzsignfoldertypeAllowdownloadattachmentezsignsigner, true
}

// HasBEzsignfoldertypeAllowdownloadattachmentezsignsigner returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasBEzsignfoldertypeAllowdownloadattachmentezsignsigner() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeAllowdownloadattachmentezsignsigner) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeAllowdownloadattachmentezsignsigner gets a reference to the given bool and assigns it to the BEzsignfoldertypeAllowdownloadattachmentezsignsigner field.
func (o *EzsignfoldertypeResponseV4) SetBEzsignfoldertypeAllowdownloadattachmentezsignsigner(v bool) {
	o.BEzsignfoldertypeAllowdownloadattachmentezsignsigner = &v
}

// GetBEzsignfoldertypeAllowdownloadproofezsignsigner returns the BEzsignfoldertypeAllowdownloadproofezsignsigner field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeAllowdownloadproofezsignsigner() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeAllowdownloadproofezsignsigner) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeAllowdownloadproofezsignsigner
}

// GetBEzsignfoldertypeAllowdownloadproofezsignsignerOk returns a tuple with the BEzsignfoldertypeAllowdownloadproofezsignsigner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeAllowdownloadproofezsignsignerOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeAllowdownloadproofezsignsigner) {
		return nil, false
	}
	return o.BEzsignfoldertypeAllowdownloadproofezsignsigner, true
}

// HasBEzsignfoldertypeAllowdownloadproofezsignsigner returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasBEzsignfoldertypeAllowdownloadproofezsignsigner() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeAllowdownloadproofezsignsigner) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeAllowdownloadproofezsignsigner gets a reference to the given bool and assigns it to the BEzsignfoldertypeAllowdownloadproofezsignsigner field.
func (o *EzsignfoldertypeResponseV4) SetBEzsignfoldertypeAllowdownloadproofezsignsigner(v bool) {
	o.BEzsignfoldertypeAllowdownloadproofezsignsigner = &v
}

// GetBEzsignfoldertypeSendproofreceivealldocument returns the BEzsignfoldertypeSendproofreceivealldocument field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendproofreceivealldocument() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeSendproofreceivealldocument) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeSendproofreceivealldocument
}

// GetBEzsignfoldertypeSendproofreceivealldocumentOk returns a tuple with the BEzsignfoldertypeSendproofreceivealldocument field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendproofreceivealldocumentOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeSendproofreceivealldocument) {
		return nil, false
	}
	return o.BEzsignfoldertypeSendproofreceivealldocument, true
}

// HasBEzsignfoldertypeSendproofreceivealldocument returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasBEzsignfoldertypeSendproofreceivealldocument() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeSendproofreceivealldocument) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeSendproofreceivealldocument gets a reference to the given bool and assigns it to the BEzsignfoldertypeSendproofreceivealldocument field.
func (o *EzsignfoldertypeResponseV4) SetBEzsignfoldertypeSendproofreceivealldocument(v bool) {
	o.BEzsignfoldertypeSendproofreceivealldocument = &v
}

// GetBEzsignfoldertypeSendsignedtodocumentowner returns the BEzsignfoldertypeSendsignedtodocumentowner field value
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendsignedtodocumentowner() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BEzsignfoldertypeSendsignedtodocumentowner
}

// GetBEzsignfoldertypeSendsignedtodocumentownerOk returns a tuple with the BEzsignfoldertypeSendsignedtodocumentowner field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendsignedtodocumentownerOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BEzsignfoldertypeSendsignedtodocumentowner, true
}

// SetBEzsignfoldertypeSendsignedtodocumentowner sets field value
func (o *EzsignfoldertypeResponseV4) SetBEzsignfoldertypeSendsignedtodocumentowner(v bool) {
	o.BEzsignfoldertypeSendsignedtodocumentowner = v
}

// GetBEzsignfoldertypeSendsignedtofolderowner returns the BEzsignfoldertypeSendsignedtofolderowner field value
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendsignedtofolderowner() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BEzsignfoldertypeSendsignedtofolderowner
}

// GetBEzsignfoldertypeSendsignedtofolderownerOk returns a tuple with the BEzsignfoldertypeSendsignedtofolderowner field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendsignedtofolderownerOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BEzsignfoldertypeSendsignedtofolderowner, true
}

// SetBEzsignfoldertypeSendsignedtofolderowner sets field value
func (o *EzsignfoldertypeResponseV4) SetBEzsignfoldertypeSendsignedtofolderowner(v bool) {
	o.BEzsignfoldertypeSendsignedtofolderowner = v
}

// GetBEzsignfoldertypeSendsignedtofullgroup returns the BEzsignfoldertypeSendsignedtofullgroup field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendsignedtofullgroup() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeSendsignedtofullgroup) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeSendsignedtofullgroup
}

// GetBEzsignfoldertypeSendsignedtofullgroupOk returns a tuple with the BEzsignfoldertypeSendsignedtofullgroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendsignedtofullgroupOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeSendsignedtofullgroup) {
		return nil, false
	}
	return o.BEzsignfoldertypeSendsignedtofullgroup, true
}

// HasBEzsignfoldertypeSendsignedtofullgroup returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasBEzsignfoldertypeSendsignedtofullgroup() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeSendsignedtofullgroup) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeSendsignedtofullgroup gets a reference to the given bool and assigns it to the BEzsignfoldertypeSendsignedtofullgroup field.
func (o *EzsignfoldertypeResponseV4) SetBEzsignfoldertypeSendsignedtofullgroup(v bool) {
	o.BEzsignfoldertypeSendsignedtofullgroup = &v
}

// GetBEzsignfoldertypeSendsignedtolimitedgroup returns the BEzsignfoldertypeSendsignedtolimitedgroup field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendsignedtolimitedgroup() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeSendsignedtolimitedgroup) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeSendsignedtolimitedgroup
}

// GetBEzsignfoldertypeSendsignedtolimitedgroupOk returns a tuple with the BEzsignfoldertypeSendsignedtolimitedgroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendsignedtolimitedgroupOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeSendsignedtolimitedgroup) {
		return nil, false
	}
	return o.BEzsignfoldertypeSendsignedtolimitedgroup, true
}

// HasBEzsignfoldertypeSendsignedtolimitedgroup returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasBEzsignfoldertypeSendsignedtolimitedgroup() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeSendsignedtolimitedgroup) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeSendsignedtolimitedgroup gets a reference to the given bool and assigns it to the BEzsignfoldertypeSendsignedtolimitedgroup field.
func (o *EzsignfoldertypeResponseV4) SetBEzsignfoldertypeSendsignedtolimitedgroup(v bool) {
	o.BEzsignfoldertypeSendsignedtolimitedgroup = &v
}

// GetBEzsignfoldertypeSendsignedtocolleague returns the BEzsignfoldertypeSendsignedtocolleague field value
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendsignedtocolleague() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BEzsignfoldertypeSendsignedtocolleague
}

// GetBEzsignfoldertypeSendsignedtocolleagueOk returns a tuple with the BEzsignfoldertypeSendsignedtocolleague field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendsignedtocolleagueOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BEzsignfoldertypeSendsignedtocolleague, true
}

// SetBEzsignfoldertypeSendsignedtocolleague sets field value
func (o *EzsignfoldertypeResponseV4) SetBEzsignfoldertypeSendsignedtocolleague(v bool) {
	o.BEzsignfoldertypeSendsignedtocolleague = v
}

// GetBEzsignfoldertypeSendsummarytodocumentowner returns the BEzsignfoldertypeSendsummarytodocumentowner field value
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendsummarytodocumentowner() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BEzsignfoldertypeSendsummarytodocumentowner
}

// GetBEzsignfoldertypeSendsummarytodocumentownerOk returns a tuple with the BEzsignfoldertypeSendsummarytodocumentowner field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendsummarytodocumentownerOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BEzsignfoldertypeSendsummarytodocumentowner, true
}

// SetBEzsignfoldertypeSendsummarytodocumentowner sets field value
func (o *EzsignfoldertypeResponseV4) SetBEzsignfoldertypeSendsummarytodocumentowner(v bool) {
	o.BEzsignfoldertypeSendsummarytodocumentowner = v
}

// GetBEzsignfoldertypeSendsummarytofolderowner returns the BEzsignfoldertypeSendsummarytofolderowner field value
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendsummarytofolderowner() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BEzsignfoldertypeSendsummarytofolderowner
}

// GetBEzsignfoldertypeSendsummarytofolderownerOk returns a tuple with the BEzsignfoldertypeSendsummarytofolderowner field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendsummarytofolderownerOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BEzsignfoldertypeSendsummarytofolderowner, true
}

// SetBEzsignfoldertypeSendsummarytofolderowner sets field value
func (o *EzsignfoldertypeResponseV4) SetBEzsignfoldertypeSendsummarytofolderowner(v bool) {
	o.BEzsignfoldertypeSendsummarytofolderowner = v
}

// GetBEzsignfoldertypeSendsummarytofullgroup returns the BEzsignfoldertypeSendsummarytofullgroup field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendsummarytofullgroup() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeSendsummarytofullgroup) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeSendsummarytofullgroup
}

// GetBEzsignfoldertypeSendsummarytofullgroupOk returns a tuple with the BEzsignfoldertypeSendsummarytofullgroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendsummarytofullgroupOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeSendsummarytofullgroup) {
		return nil, false
	}
	return o.BEzsignfoldertypeSendsummarytofullgroup, true
}

// HasBEzsignfoldertypeSendsummarytofullgroup returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasBEzsignfoldertypeSendsummarytofullgroup() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeSendsummarytofullgroup) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeSendsummarytofullgroup gets a reference to the given bool and assigns it to the BEzsignfoldertypeSendsummarytofullgroup field.
func (o *EzsignfoldertypeResponseV4) SetBEzsignfoldertypeSendsummarytofullgroup(v bool) {
	o.BEzsignfoldertypeSendsummarytofullgroup = &v
}

// GetBEzsignfoldertypeSendsummarytolimitedgroup returns the BEzsignfoldertypeSendsummarytolimitedgroup field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendsummarytolimitedgroup() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeSendsummarytolimitedgroup) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeSendsummarytolimitedgroup
}

// GetBEzsignfoldertypeSendsummarytolimitedgroupOk returns a tuple with the BEzsignfoldertypeSendsummarytolimitedgroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendsummarytolimitedgroupOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeSendsummarytolimitedgroup) {
		return nil, false
	}
	return o.BEzsignfoldertypeSendsummarytolimitedgroup, true
}

// HasBEzsignfoldertypeSendsummarytolimitedgroup returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasBEzsignfoldertypeSendsummarytolimitedgroup() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeSendsummarytolimitedgroup) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeSendsummarytolimitedgroup gets a reference to the given bool and assigns it to the BEzsignfoldertypeSendsummarytolimitedgroup field.
func (o *EzsignfoldertypeResponseV4) SetBEzsignfoldertypeSendsummarytolimitedgroup(v bool) {
	o.BEzsignfoldertypeSendsummarytolimitedgroup = &v
}

// GetBEzsignfoldertypeSendsummarytocolleague returns the BEzsignfoldertypeSendsummarytocolleague field value
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendsummarytocolleague() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BEzsignfoldertypeSendsummarytocolleague
}

// GetBEzsignfoldertypeSendsummarytocolleagueOk returns a tuple with the BEzsignfoldertypeSendsummarytocolleague field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeSendsummarytocolleagueOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BEzsignfoldertypeSendsummarytocolleague, true
}

// SetBEzsignfoldertypeSendsummarytocolleague sets field value
func (o *EzsignfoldertypeResponseV4) SetBEzsignfoldertypeSendsummarytocolleague(v bool) {
	o.BEzsignfoldertypeSendsummarytocolleague = v
}

// GetEEzsignfoldertypeSigneraccess returns the EEzsignfoldertypeSigneraccess field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetEEzsignfoldertypeSigneraccess() FieldEEzsignfoldertypeSigneraccess {
	if o == nil || IsNil(o.EEzsignfoldertypeSigneraccess) {
		var ret FieldEEzsignfoldertypeSigneraccess
		return ret
	}
	return *o.EEzsignfoldertypeSigneraccess
}

// GetEEzsignfoldertypeSigneraccessOk returns a tuple with the EEzsignfoldertypeSigneraccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetEEzsignfoldertypeSigneraccessOk() (*FieldEEzsignfoldertypeSigneraccess, bool) {
	if o == nil || IsNil(o.EEzsignfoldertypeSigneraccess) {
		return nil, false
	}
	return o.EEzsignfoldertypeSigneraccess, true
}

// HasEEzsignfoldertypeSigneraccess returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasEEzsignfoldertypeSigneraccess() bool {
	if o != nil && !IsNil(o.EEzsignfoldertypeSigneraccess) {
		return true
	}

	return false
}

// SetEEzsignfoldertypeSigneraccess gets a reference to the given FieldEEzsignfoldertypeSigneraccess and assigns it to the EEzsignfoldertypeSigneraccess field.
func (o *EzsignfoldertypeResponseV4) SetEEzsignfoldertypeSigneraccess(v FieldEEzsignfoldertypeSigneraccess) {
	o.EEzsignfoldertypeSigneraccess = &v
}

// GetBEzsignfoldertypeIsactive returns the BEzsignfoldertypeIsactive field value
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeIsactive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BEzsignfoldertypeIsactive
}

// GetBEzsignfoldertypeIsactiveOk returns a tuple with the BEzsignfoldertypeIsactive field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetBEzsignfoldertypeIsactiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BEzsignfoldertypeIsactive, true
}

// SetBEzsignfoldertypeIsactive sets field value
func (o *EzsignfoldertypeResponseV4) SetBEzsignfoldertypeIsactive(v bool) {
	o.BEzsignfoldertypeIsactive = v
}

// GetAFkiPdfalevelID returns the AFkiPdfalevelID field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetAFkiPdfalevelID() []int32 {
	if o == nil || IsNil(o.AFkiPdfalevelID) {
		var ret []int32
		return ret
	}
	return o.AFkiPdfalevelID
}

// GetAFkiPdfalevelIDOk returns a tuple with the AFkiPdfalevelID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetAFkiPdfalevelIDOk() ([]int32, bool) {
	if o == nil || IsNil(o.AFkiPdfalevelID) {
		return nil, false
	}
	return o.AFkiPdfalevelID, true
}

// HasAFkiPdfalevelID returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasAFkiPdfalevelID() bool {
	if o != nil && !IsNil(o.AFkiPdfalevelID) {
		return true
	}

	return false
}

// SetAFkiPdfalevelID gets a reference to the given []int32 and assigns it to the AFkiPdfalevelID field.
func (o *EzsignfoldertypeResponseV4) SetAFkiPdfalevelID(v []int32) {
	o.AFkiPdfalevelID = v
}

// GetAObjUserlogintype returns the AObjUserlogintype field value
func (o *EzsignfoldertypeResponseV4) GetAObjUserlogintype() []UserlogintypeResponse {
	if o == nil {
		var ret []UserlogintypeResponse
		return ret
	}

	return o.AObjUserlogintype
}

// GetAObjUserlogintypeOk returns a tuple with the AObjUserlogintype field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetAObjUserlogintypeOk() ([]UserlogintypeResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.AObjUserlogintype, true
}

// SetAObjUserlogintype sets field value
func (o *EzsignfoldertypeResponseV4) SetAObjUserlogintype(v []UserlogintypeResponse) {
	o.AObjUserlogintype = v
}

// GetAObjUsergroupAll returns the AObjUsergroupAll field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetAObjUsergroupAll() []UsergroupResponse {
	if o == nil || IsNil(o.AObjUsergroupAll) {
		var ret []UsergroupResponse
		return ret
	}
	return o.AObjUsergroupAll
}

// GetAObjUsergroupAllOk returns a tuple with the AObjUsergroupAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetAObjUsergroupAllOk() ([]UsergroupResponse, bool) {
	if o == nil || IsNil(o.AObjUsergroupAll) {
		return nil, false
	}
	return o.AObjUsergroupAll, true
}

// HasAObjUsergroupAll returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasAObjUsergroupAll() bool {
	if o != nil && !IsNil(o.AObjUsergroupAll) {
		return true
	}

	return false
}

// SetAObjUsergroupAll gets a reference to the given []UsergroupResponse and assigns it to the AObjUsergroupAll field.
func (o *EzsignfoldertypeResponseV4) SetAObjUsergroupAll(v []UsergroupResponse) {
	o.AObjUsergroupAll = v
}

// GetAObjUsergroupRestricted returns the AObjUsergroupRestricted field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetAObjUsergroupRestricted() []UsergroupResponse {
	if o == nil || IsNil(o.AObjUsergroupRestricted) {
		var ret []UsergroupResponse
		return ret
	}
	return o.AObjUsergroupRestricted
}

// GetAObjUsergroupRestrictedOk returns a tuple with the AObjUsergroupRestricted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetAObjUsergroupRestrictedOk() ([]UsergroupResponse, bool) {
	if o == nil || IsNil(o.AObjUsergroupRestricted) {
		return nil, false
	}
	return o.AObjUsergroupRestricted, true
}

// HasAObjUsergroupRestricted returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasAObjUsergroupRestricted() bool {
	if o != nil && !IsNil(o.AObjUsergroupRestricted) {
		return true
	}

	return false
}

// SetAObjUsergroupRestricted gets a reference to the given []UsergroupResponse and assigns it to the AObjUsergroupRestricted field.
func (o *EzsignfoldertypeResponseV4) SetAObjUsergroupRestricted(v []UsergroupResponse) {
	o.AObjUsergroupRestricted = v
}

// GetAObjUsergroupTemplate returns the AObjUsergroupTemplate field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseV4) GetAObjUsergroupTemplate() []UsergroupResponse {
	if o == nil || IsNil(o.AObjUsergroupTemplate) {
		var ret []UsergroupResponse
		return ret
	}
	return o.AObjUsergroupTemplate
}

// GetAObjUsergroupTemplateOk returns a tuple with the AObjUsergroupTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetAObjUsergroupTemplateOk() ([]UsergroupResponse, bool) {
	if o == nil || IsNil(o.AObjUsergroupTemplate) {
		return nil, false
	}
	return o.AObjUsergroupTemplate, true
}

// HasAObjUsergroupTemplate returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseV4) HasAObjUsergroupTemplate() bool {
	if o != nil && !IsNil(o.AObjUsergroupTemplate) {
		return true
	}

	return false
}

// SetAObjUsergroupTemplate gets a reference to the given []UsergroupResponse and assigns it to the AObjUsergroupTemplate field.
func (o *EzsignfoldertypeResponseV4) SetAObjUsergroupTemplate(v []UsergroupResponse) {
	o.AObjUsergroupTemplate = v
}

// GetObjAudit returns the ObjAudit field value
func (o *EzsignfoldertypeResponseV4) GetObjAudit() CommonAudit {
	if o == nil {
		var ret CommonAudit
		return ret
	}

	return o.ObjAudit
}

// GetObjAuditOk returns a tuple with the ObjAudit field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseV4) GetObjAuditOk() (*CommonAudit, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjAudit, true
}

// SetObjAudit sets field value
func (o *EzsignfoldertypeResponseV4) SetObjAudit(v CommonAudit) {
	o.ObjAudit = v
}

func (o EzsignfoldertypeResponseV4) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsignfoldertypeResponseV4) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pkiEzsignfoldertypeID"] = o.PkiEzsignfoldertypeID
	toSerialize["objEzsignfoldertypeName"] = o.ObjEzsignfoldertypeName
	toSerialize["fkiBrandingID"] = o.FkiBrandingID
	if !IsNil(o.FkiBillingentityinternalID) {
		toSerialize["fkiBillingentityinternalID"] = o.FkiBillingentityinternalID
	}
	if !IsNil(o.FkiEzsigntsarequirementID) {
		toSerialize["fkiEzsigntsarequirementID"] = o.FkiEzsigntsarequirementID
	}
	if !IsNil(o.FkiFontIDAnnotation) {
		toSerialize["fkiFontIDAnnotation"] = o.FkiFontIDAnnotation
	}
	if !IsNil(o.FkiFontIDFormfield) {
		toSerialize["fkiFontIDFormfield"] = o.FkiFontIDFormfield
	}
	if !IsNil(o.FkiFontIDSignature) {
		toSerialize["fkiFontIDSignature"] = o.FkiFontIDSignature
	}
	if !IsNil(o.FkiPdfalevelIDConvert) {
		toSerialize["fkiPdfalevelIDConvert"] = o.FkiPdfalevelIDConvert
	}
	if !IsNil(o.EEzsignfoldertypeDocumentdependency) {
		toSerialize["eEzsignfoldertypeDocumentdependency"] = o.EEzsignfoldertypeDocumentdependency
	}
	toSerialize["sBrandingDescriptionX"] = o.SBrandingDescriptionX
	if !IsNil(o.SBillingentityinternalDescriptionX) {
		toSerialize["sBillingentityinternalDescriptionX"] = o.SBillingentityinternalDescriptionX
	}
	if !IsNil(o.SEzsigntsarequirementDescriptionX) {
		toSerialize["sEzsigntsarequirementDescriptionX"] = o.SEzsigntsarequirementDescriptionX
	}
	if !IsNil(o.SEmailAddressSigned) {
		toSerialize["sEmailAddressSigned"] = o.SEmailAddressSigned
	}
	if !IsNil(o.SEmailAddressSummary) {
		toSerialize["sEmailAddressSummary"] = o.SEmailAddressSummary
	}
	if !IsNil(o.EEzsignfoldertypePdfarequirement) {
		toSerialize["eEzsignfoldertypePdfarequirement"] = o.EEzsignfoldertypePdfarequirement
	}
	if !IsNil(o.EEzsignfoldertypePdfanoncompliantaction) {
		toSerialize["eEzsignfoldertypePdfanoncompliantaction"] = o.EEzsignfoldertypePdfanoncompliantaction
	}
	toSerialize["eEzsignfoldertypePrivacylevel"] = o.EEzsignfoldertypePrivacylevel
	if !IsNil(o.IEzsignfoldertypeFontsizeannotation) {
		toSerialize["iEzsignfoldertypeFontsizeannotation"] = o.IEzsignfoldertypeFontsizeannotation
	}
	if !IsNil(o.IEzsignfoldertypeFontsizeformfield) {
		toSerialize["iEzsignfoldertypeFontsizeformfield"] = o.IEzsignfoldertypeFontsizeformfield
	}
	if !IsNil(o.IEzsignfoldertypeSendreminderfirstdays) {
		toSerialize["iEzsignfoldertypeSendreminderfirstdays"] = o.IEzsignfoldertypeSendreminderfirstdays
	}
	if !IsNil(o.IEzsignfoldertypeSendreminderotherdays) {
		toSerialize["iEzsignfoldertypeSendreminderotherdays"] = o.IEzsignfoldertypeSendreminderotherdays
	}
	toSerialize["iEzsignfoldertypeArchivaldays"] = o.IEzsignfoldertypeArchivaldays
	toSerialize["eEzsignfoldertypeDisposal"] = o.EEzsignfoldertypeDisposal
	toSerialize["eEzsignfoldertypeCompletion"] = o.EEzsignfoldertypeCompletion
	if !IsNil(o.IEzsignfoldertypeDisposaldays) {
		toSerialize["iEzsignfoldertypeDisposaldays"] = o.IEzsignfoldertypeDisposaldays
	}
	toSerialize["iEzsignfoldertypeDeadlinedays"] = o.IEzsignfoldertypeDeadlinedays
	if !IsNil(o.BEzsignfoldertypePrematurelyendautomatically) {
		toSerialize["bEzsignfoldertypePrematurelyendautomatically"] = o.BEzsignfoldertypePrematurelyendautomatically
	}
	if !IsNil(o.IEzsignfoldertypePrematurelyendautomaticallydays) {
		toSerialize["iEzsignfoldertypePrematurelyendautomaticallydays"] = o.IEzsignfoldertypePrematurelyendautomaticallydays
	}
	if !IsNil(o.BEzsignfoldertypeAutomaticsignature) {
		toSerialize["bEzsignfoldertypeAutomaticsignature"] = o.BEzsignfoldertypeAutomaticsignature
	}
	if !IsNil(o.BEzsignfoldertypeDelegate) {
		toSerialize["bEzsignfoldertypeDelegate"] = o.BEzsignfoldertypeDelegate
	}
	if !IsNil(o.BEzsignfoldertypeDiscussion) {
		toSerialize["bEzsignfoldertypeDiscussion"] = o.BEzsignfoldertypeDiscussion
	}
	if !IsNil(o.BEzsignfoldertypeLogrecipientinproof) {
		toSerialize["bEzsignfoldertypeLogrecipientinproof"] = o.BEzsignfoldertypeLogrecipientinproof
	}
	if !IsNil(o.BEzsignfoldertypeReassignezsignsigner) {
		toSerialize["bEzsignfoldertypeReassignezsignsigner"] = o.BEzsignfoldertypeReassignezsignsigner
	}
	if !IsNil(o.BEzsignfoldertypeReassignuser) {
		toSerialize["bEzsignfoldertypeReassignuser"] = o.BEzsignfoldertypeReassignuser
	}
	if !IsNil(o.BEzsignfoldertypeReassigngroup) {
		toSerialize["bEzsignfoldertypeReassigngroup"] = o.BEzsignfoldertypeReassigngroup
	}
	if !IsNil(o.BEzsignfoldertypeSendsignedtoezsignsigner) {
		toSerialize["bEzsignfoldertypeSendsignedtoezsignsigner"] = o.BEzsignfoldertypeSendsignedtoezsignsigner
	}
	if !IsNil(o.BEzsignfoldertypeSendsignedtouser) {
		toSerialize["bEzsignfoldertypeSendsignedtouser"] = o.BEzsignfoldertypeSendsignedtouser
	}
	if !IsNil(o.BEzsignfoldertypeSendattachmentezsignsigner) {
		toSerialize["bEzsignfoldertypeSendattachmentezsignsigner"] = o.BEzsignfoldertypeSendattachmentezsignsigner
	}
	if !IsNil(o.BEzsignfoldertypeSendproofezsignsigner) {
		toSerialize["bEzsignfoldertypeSendproofezsignsigner"] = o.BEzsignfoldertypeSendproofezsignsigner
	}
	if !IsNil(o.BEzsignfoldertypeSendattachmentreceivecopy) {
		toSerialize["bEzsignfoldertypeSendattachmentreceivecopy"] = o.BEzsignfoldertypeSendattachmentreceivecopy
	}
	if !IsNil(o.BEzsignfoldertypeSendattachmentuser) {
		toSerialize["bEzsignfoldertypeSendattachmentuser"] = o.BEzsignfoldertypeSendattachmentuser
	}
	if !IsNil(o.BEzsignfoldertypeSendproofuser) {
		toSerialize["bEzsignfoldertypeSendproofuser"] = o.BEzsignfoldertypeSendproofuser
	}
	if !IsNil(o.BEzsignfoldertypeSendproofemail) {
		toSerialize["bEzsignfoldertypeSendproofemail"] = o.BEzsignfoldertypeSendproofemail
	}
	if !IsNil(o.BEzsignfoldertypeAllowdownloadattachmentezsignsigner) {
		toSerialize["bEzsignfoldertypeAllowdownloadattachmentezsignsigner"] = o.BEzsignfoldertypeAllowdownloadattachmentezsignsigner
	}
	if !IsNil(o.BEzsignfoldertypeAllowdownloadproofezsignsigner) {
		toSerialize["bEzsignfoldertypeAllowdownloadproofezsignsigner"] = o.BEzsignfoldertypeAllowdownloadproofezsignsigner
	}
	if !IsNil(o.BEzsignfoldertypeSendproofreceivealldocument) {
		toSerialize["bEzsignfoldertypeSendproofreceivealldocument"] = o.BEzsignfoldertypeSendproofreceivealldocument
	}
	toSerialize["bEzsignfoldertypeSendsignedtodocumentowner"] = o.BEzsignfoldertypeSendsignedtodocumentowner
	toSerialize["bEzsignfoldertypeSendsignedtofolderowner"] = o.BEzsignfoldertypeSendsignedtofolderowner
	if !IsNil(o.BEzsignfoldertypeSendsignedtofullgroup) {
		toSerialize["bEzsignfoldertypeSendsignedtofullgroup"] = o.BEzsignfoldertypeSendsignedtofullgroup
	}
	if !IsNil(o.BEzsignfoldertypeSendsignedtolimitedgroup) {
		toSerialize["bEzsignfoldertypeSendsignedtolimitedgroup"] = o.BEzsignfoldertypeSendsignedtolimitedgroup
	}
	toSerialize["bEzsignfoldertypeSendsignedtocolleague"] = o.BEzsignfoldertypeSendsignedtocolleague
	toSerialize["bEzsignfoldertypeSendsummarytodocumentowner"] = o.BEzsignfoldertypeSendsummarytodocumentowner
	toSerialize["bEzsignfoldertypeSendsummarytofolderowner"] = o.BEzsignfoldertypeSendsummarytofolderowner
	if !IsNil(o.BEzsignfoldertypeSendsummarytofullgroup) {
		toSerialize["bEzsignfoldertypeSendsummarytofullgroup"] = o.BEzsignfoldertypeSendsummarytofullgroup
	}
	if !IsNil(o.BEzsignfoldertypeSendsummarytolimitedgroup) {
		toSerialize["bEzsignfoldertypeSendsummarytolimitedgroup"] = o.BEzsignfoldertypeSendsummarytolimitedgroup
	}
	toSerialize["bEzsignfoldertypeSendsummarytocolleague"] = o.BEzsignfoldertypeSendsummarytocolleague
	if !IsNil(o.EEzsignfoldertypeSigneraccess) {
		toSerialize["eEzsignfoldertypeSigneraccess"] = o.EEzsignfoldertypeSigneraccess
	}
	toSerialize["bEzsignfoldertypeIsactive"] = o.BEzsignfoldertypeIsactive
	if !IsNil(o.AFkiPdfalevelID) {
		toSerialize["a_fkiPdfalevelID"] = o.AFkiPdfalevelID
	}
	toSerialize["a_objUserlogintype"] = o.AObjUserlogintype
	if !IsNil(o.AObjUsergroupAll) {
		toSerialize["a_objUsergroupAll"] = o.AObjUsergroupAll
	}
	if !IsNil(o.AObjUsergroupRestricted) {
		toSerialize["a_objUsergroupRestricted"] = o.AObjUsergroupRestricted
	}
	if !IsNil(o.AObjUsergroupTemplate) {
		toSerialize["a_objUsergroupTemplate"] = o.AObjUsergroupTemplate
	}
	toSerialize["objAudit"] = o.ObjAudit
	return toSerialize, nil
}

func (o *EzsignfoldertypeResponseV4) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pkiEzsignfoldertypeID",
		"objEzsignfoldertypeName",
		"fkiBrandingID",
		"sBrandingDescriptionX",
		"eEzsignfoldertypePrivacylevel",
		"iEzsignfoldertypeArchivaldays",
		"eEzsignfoldertypeDisposal",
		"eEzsignfoldertypeCompletion",
		"iEzsignfoldertypeDeadlinedays",
		"bEzsignfoldertypeSendsignedtodocumentowner",
		"bEzsignfoldertypeSendsignedtofolderowner",
		"bEzsignfoldertypeSendsignedtocolleague",
		"bEzsignfoldertypeSendsummarytodocumentowner",
		"bEzsignfoldertypeSendsummarytofolderowner",
		"bEzsignfoldertypeSendsummarytocolleague",
		"bEzsignfoldertypeIsactive",
		"a_objUserlogintype",
		"objAudit",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsignfoldertypeResponseV4 := _EzsignfoldertypeResponseV4{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsignfoldertypeResponseV4)

	if err != nil {
		return err
	}

	*o = EzsignfoldertypeResponseV4(varEzsignfoldertypeResponseV4)

	return err
}

type NullableEzsignfoldertypeResponseV4 struct {
	value *EzsignfoldertypeResponseV4
	isSet bool
}

func (v NullableEzsignfoldertypeResponseV4) Get() *EzsignfoldertypeResponseV4 {
	return v.value
}

func (v *NullableEzsignfoldertypeResponseV4) Set(val *EzsignfoldertypeResponseV4) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsignfoldertypeResponseV4) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsignfoldertypeResponseV4) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsignfoldertypeResponseV4(val *EzsignfoldertypeResponseV4) *NullableEzsignfoldertypeResponseV4 {
	return &NullableEzsignfoldertypeResponseV4{value: val, isSet: true}
}

func (v NullableEzsignfoldertypeResponseV4) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsignfoldertypeResponseV4) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


