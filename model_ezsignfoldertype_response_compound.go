/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsignfoldertypeResponseCompound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsignfoldertypeResponseCompound{}

// EzsignfoldertypeResponseCompound A Ezsignfoldertype Object
type EzsignfoldertypeResponseCompound struct {
	EzsignfoldertypeResponse
	AFkiUserIDSigned []int32 `json:"a_fkiUserIDSigned,omitempty"`
	AFkiUserIDSummary []int32 `json:"a_fkiUserIDSummary,omitempty"`
}

type _EzsignfoldertypeResponseCompound EzsignfoldertypeResponseCompound

// NewEzsignfoldertypeResponseCompound instantiates a new EzsignfoldertypeResponseCompound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsignfoldertypeResponseCompound(pkiEzsignfoldertypeID int32, objEzsignfoldertypeName MultilingualEzsignfoldertypeName, fkiBrandingID int32, sBrandingDescriptionX string, eEzsignfoldertypePrivacylevel FieldEEzsignfoldertypePrivacylevel, iEzsignfoldertypeArchivaldays int32, eEzsignfoldertypeDisposal FieldEEzsignfoldertypeDisposal, eEzsignfoldertypeCompletion FieldEEzsignfoldertypeCompletion, iEzsignfoldertypeDeadlinedays int32, bEzsignfoldertypeSendsignedtodocumentowner bool, bEzsignfoldertypeSendsignedtofolderowner bool, bEzsignfoldertypeSendsignedtocolleague bool, bEzsignfoldertypeSendsummarytodocumentowner bool, bEzsignfoldertypeSendsummarytofolderowner bool, bEzsignfoldertypeSendsummarytocolleague bool, bEzsignfoldertypeIsactive bool, aObjUserlogintype []UserlogintypeResponse) *EzsignfoldertypeResponseCompound {
	this := EzsignfoldertypeResponseCompound{}
	this.PkiEzsignfoldertypeID = pkiEzsignfoldertypeID
	this.ObjEzsignfoldertypeName = objEzsignfoldertypeName
	this.FkiBrandingID = fkiBrandingID
	this.SBrandingDescriptionX = sBrandingDescriptionX
	this.EEzsignfoldertypePrivacylevel = eEzsignfoldertypePrivacylevel
	this.IEzsignfoldertypeArchivaldays = iEzsignfoldertypeArchivaldays
	this.EEzsignfoldertypeDisposal = eEzsignfoldertypeDisposal
	this.EEzsignfoldertypeCompletion = eEzsignfoldertypeCompletion
	this.IEzsignfoldertypeDeadlinedays = iEzsignfoldertypeDeadlinedays
	this.BEzsignfoldertypeSendsignedtodocumentowner = bEzsignfoldertypeSendsignedtodocumentowner
	this.BEzsignfoldertypeSendsignedtofolderowner = bEzsignfoldertypeSendsignedtofolderowner
	this.BEzsignfoldertypeSendsignedtocolleague = bEzsignfoldertypeSendsignedtocolleague
	this.BEzsignfoldertypeSendsummarytodocumentowner = bEzsignfoldertypeSendsummarytodocumentowner
	this.BEzsignfoldertypeSendsummarytofolderowner = bEzsignfoldertypeSendsummarytofolderowner
	this.BEzsignfoldertypeSendsummarytocolleague = bEzsignfoldertypeSendsummarytocolleague
	this.BEzsignfoldertypeIsactive = bEzsignfoldertypeIsactive
	this.AObjUserlogintype = aObjUserlogintype
	return &this
}

// NewEzsignfoldertypeResponseCompoundWithDefaults instantiates a new EzsignfoldertypeResponseCompound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsignfoldertypeResponseCompoundWithDefaults() *EzsignfoldertypeResponseCompound {
	this := EzsignfoldertypeResponseCompound{}
	return &this
}

// GetAFkiUserIDSigned returns the AFkiUserIDSigned field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseCompound) GetAFkiUserIDSigned() []int32 {
	if o == nil || IsNil(o.AFkiUserIDSigned) {
		var ret []int32
		return ret
	}
	return o.AFkiUserIDSigned
}

// GetAFkiUserIDSignedOk returns a tuple with the AFkiUserIDSigned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseCompound) GetAFkiUserIDSignedOk() ([]int32, bool) {
	if o == nil || IsNil(o.AFkiUserIDSigned) {
		return nil, false
	}
	return o.AFkiUserIDSigned, true
}

// HasAFkiUserIDSigned returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseCompound) HasAFkiUserIDSigned() bool {
	if o != nil && !IsNil(o.AFkiUserIDSigned) {
		return true
	}

	return false
}

// SetAFkiUserIDSigned gets a reference to the given []int32 and assigns it to the AFkiUserIDSigned field.
func (o *EzsignfoldertypeResponseCompound) SetAFkiUserIDSigned(v []int32) {
	o.AFkiUserIDSigned = v
}

// GetAFkiUserIDSummary returns the AFkiUserIDSummary field value if set, zero value otherwise.
func (o *EzsignfoldertypeResponseCompound) GetAFkiUserIDSummary() []int32 {
	if o == nil || IsNil(o.AFkiUserIDSummary) {
		var ret []int32
		return ret
	}
	return o.AFkiUserIDSummary
}

// GetAFkiUserIDSummaryOk returns a tuple with the AFkiUserIDSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeResponseCompound) GetAFkiUserIDSummaryOk() ([]int32, bool) {
	if o == nil || IsNil(o.AFkiUserIDSummary) {
		return nil, false
	}
	return o.AFkiUserIDSummary, true
}

// HasAFkiUserIDSummary returns a boolean if a field has been set.
func (o *EzsignfoldertypeResponseCompound) HasAFkiUserIDSummary() bool {
	if o != nil && !IsNil(o.AFkiUserIDSummary) {
		return true
	}

	return false
}

// SetAFkiUserIDSummary gets a reference to the given []int32 and assigns it to the AFkiUserIDSummary field.
func (o *EzsignfoldertypeResponseCompound) SetAFkiUserIDSummary(v []int32) {
	o.AFkiUserIDSummary = v
}

func (o EzsignfoldertypeResponseCompound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsignfoldertypeResponseCompound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AFkiUserIDSigned) {
		toSerialize["a_fkiUserIDSigned"] = o.AFkiUserIDSigned
	}
	if !IsNil(o.AFkiUserIDSummary) {
		toSerialize["a_fkiUserIDSummary"] = o.AFkiUserIDSummary
	}
	return toSerialize, nil
}

func (o *EzsignfoldertypeResponseCompound) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pkiEzsignfoldertypeID",
		"objEzsignfoldertypeName",
		"fkiBrandingID",
		"sBrandingDescriptionX",
		"eEzsignfoldertypePrivacylevel",
		"iEzsignfoldertypeArchivaldays",
		"eEzsignfoldertypeDisposal",
		"eEzsignfoldertypeCompletion",
		"iEzsignfoldertypeDeadlinedays",
		"bEzsignfoldertypeSendsignedtodocumentowner",
		"bEzsignfoldertypeSendsignedtofolderowner",
		"bEzsignfoldertypeSendsignedtocolleague",
		"bEzsignfoldertypeSendsummarytodocumentowner",
		"bEzsignfoldertypeSendsummarytofolderowner",
		"bEzsignfoldertypeSendsummarytocolleague",
		"bEzsignfoldertypeIsactive",
		"a_objUserlogintype",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsignfoldertypeResponseCompound := _EzsignfoldertypeResponseCompound{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsignfoldertypeResponseCompound)

	if err != nil {
		return err
	}

	*o = EzsignfoldertypeResponseCompound(varEzsignfoldertypeResponseCompound)

	return err
}

type NullableEzsignfoldertypeResponseCompound struct {
	value *EzsignfoldertypeResponseCompound
	isSet bool
}

func (v NullableEzsignfoldertypeResponseCompound) Get() *EzsignfoldertypeResponseCompound {
	return v.value
}

func (v *NullableEzsignfoldertypeResponseCompound) Set(val *EzsignfoldertypeResponseCompound) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsignfoldertypeResponseCompound) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsignfoldertypeResponseCompound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsignfoldertypeResponseCompound(val *EzsignfoldertypeResponseCompound) *NullableEzsignfoldertypeResponseCompound {
	return &NullableEzsignfoldertypeResponseCompound{value: val, isSet: true}
}

func (v NullableEzsignfoldertypeResponseCompound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsignfoldertypeResponseCompound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


