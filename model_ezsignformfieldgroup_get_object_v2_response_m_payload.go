/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.2
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsignformfieldgroupGetObjectV2ResponseMPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsignformfieldgroupGetObjectV2ResponseMPayload{}

// EzsignformfieldgroupGetObjectV2ResponseMPayload Payload for GET /2/object/ezsignformfieldgroup/{pkiEzsignformfieldgroupID}
type EzsignformfieldgroupGetObjectV2ResponseMPayload struct {
	ObjEzsignformfieldgroup EzsignformfieldgroupResponseCompound `json:"objEzsignformfieldgroup"`
}

type _EzsignformfieldgroupGetObjectV2ResponseMPayload EzsignformfieldgroupGetObjectV2ResponseMPayload

// NewEzsignformfieldgroupGetObjectV2ResponseMPayload instantiates a new EzsignformfieldgroupGetObjectV2ResponseMPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsignformfieldgroupGetObjectV2ResponseMPayload(objEzsignformfieldgroup EzsignformfieldgroupResponseCompound) *EzsignformfieldgroupGetObjectV2ResponseMPayload {
	this := EzsignformfieldgroupGetObjectV2ResponseMPayload{}
	this.ObjEzsignformfieldgroup = objEzsignformfieldgroup
	return &this
}

// NewEzsignformfieldgroupGetObjectV2ResponseMPayloadWithDefaults instantiates a new EzsignformfieldgroupGetObjectV2ResponseMPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsignformfieldgroupGetObjectV2ResponseMPayloadWithDefaults() *EzsignformfieldgroupGetObjectV2ResponseMPayload {
	this := EzsignformfieldgroupGetObjectV2ResponseMPayload{}
	return &this
}

// GetObjEzsignformfieldgroup returns the ObjEzsignformfieldgroup field value
func (o *EzsignformfieldgroupGetObjectV2ResponseMPayload) GetObjEzsignformfieldgroup() EzsignformfieldgroupResponseCompound {
	if o == nil {
		var ret EzsignformfieldgroupResponseCompound
		return ret
	}

	return o.ObjEzsignformfieldgroup
}

// GetObjEzsignformfieldgroupOk returns a tuple with the ObjEzsignformfieldgroup field value
// and a boolean to check if the value has been set.
func (o *EzsignformfieldgroupGetObjectV2ResponseMPayload) GetObjEzsignformfieldgroupOk() (*EzsignformfieldgroupResponseCompound, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjEzsignformfieldgroup, true
}

// SetObjEzsignformfieldgroup sets field value
func (o *EzsignformfieldgroupGetObjectV2ResponseMPayload) SetObjEzsignformfieldgroup(v EzsignformfieldgroupResponseCompound) {
	o.ObjEzsignformfieldgroup = v
}

func (o EzsignformfieldgroupGetObjectV2ResponseMPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsignformfieldgroupGetObjectV2ResponseMPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["objEzsignformfieldgroup"] = o.ObjEzsignformfieldgroup
	return toSerialize, nil
}

func (o *EzsignformfieldgroupGetObjectV2ResponseMPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"objEzsignformfieldgroup",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsignformfieldgroupGetObjectV2ResponseMPayload := _EzsignformfieldgroupGetObjectV2ResponseMPayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsignformfieldgroupGetObjectV2ResponseMPayload)

	if err != nil {
		return err
	}

	*o = EzsignformfieldgroupGetObjectV2ResponseMPayload(varEzsignformfieldgroupGetObjectV2ResponseMPayload)

	return err
}

type NullableEzsignformfieldgroupGetObjectV2ResponseMPayload struct {
	value *EzsignformfieldgroupGetObjectV2ResponseMPayload
	isSet bool
}

func (v NullableEzsignformfieldgroupGetObjectV2ResponseMPayload) Get() *EzsignformfieldgroupGetObjectV2ResponseMPayload {
	return v.value
}

func (v *NullableEzsignformfieldgroupGetObjectV2ResponseMPayload) Set(val *EzsignformfieldgroupGetObjectV2ResponseMPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsignformfieldgroupGetObjectV2ResponseMPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsignformfieldgroupGetObjectV2ResponseMPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsignformfieldgroupGetObjectV2ResponseMPayload(val *EzsignformfieldgroupGetObjectV2ResponseMPayload) *NullableEzsignformfieldgroupGetObjectV2ResponseMPayload {
	return &NullableEzsignformfieldgroupGetObjectV2ResponseMPayload{value: val, isSet: true}
}

func (v NullableEzsignformfieldgroupGetObjectV2ResponseMPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsignformfieldgroupGetObjectV2ResponseMPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


