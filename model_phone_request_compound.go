/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// checks if the PhoneRequestCompound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PhoneRequestCompound{}

// PhoneRequestCompound A Phone Object and children to create a complete structure
type PhoneRequestCompound struct {
	// The unique ID of the Phone.
	PkiPhoneID *int32 `json:"pkiPhoneID,omitempty"`
	// The unique ID of the Phonetype.  Valid values:  |Value|Description| |-|-| |1|Office| |2|Home| |3|Mobile| |4|Fax| |5|Pager| |6|Toll Free|
	FkiPhonetypeID int32 `json:"fkiPhonetypeID"`
	// Deprecated
	EPhoneType *FieldEPhoneType `json:"ePhoneType,omitempty"`
	// The region of the phone number. (For a North America Number only)  The region is the \"514\" section in this sample phone number: (514) 990-1516 x123
	// Deprecated
	SPhoneRegion *string `json:"sPhoneRegion,omitempty"`
	// The exchange of the phone number. (For a North America Number only)  The exchange is the \"990\" section in this sample phone number: (514) 990-1516 x123
	// Deprecated
	SPhoneExchange *string `json:"sPhoneExchange,omitempty"`
	// The number of the phone number. (For a North America Number only)  The number is the \"1516\" section in this sample phone number: (514) 990-1516 x123
	// Deprecated
	SPhoneNumber *string `json:"sPhoneNumber,omitempty"`
	// The international phone number.
	// Deprecated
	SPhoneInternational *string `json:"sPhoneInternational,omitempty"`
	// The extension of the phone number.  The extension is the \"123\" section in this sample phone number: (514) 990-1516 x123.  It can also be used with international phone numbers
	SPhoneExtension *string `json:"sPhoneExtension,omitempty"`
	// A phone number in E.164 Format
	SPhoneE164 *string `json:"sPhoneE164,omitempty"`
}

// NewPhoneRequestCompound instantiates a new PhoneRequestCompound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPhoneRequestCompound(fkiPhonetypeID int32) *PhoneRequestCompound {
	this := PhoneRequestCompound{}
	this.FkiPhonetypeID = fkiPhonetypeID
	return &this
}

// NewPhoneRequestCompoundWithDefaults instantiates a new PhoneRequestCompound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPhoneRequestCompoundWithDefaults() *PhoneRequestCompound {
	this := PhoneRequestCompound{}
	return &this
}

// GetPkiPhoneID returns the PkiPhoneID field value if set, zero value otherwise.
func (o *PhoneRequestCompound) GetPkiPhoneID() int32 {
	if o == nil || IsNil(o.PkiPhoneID) {
		var ret int32
		return ret
	}
	return *o.PkiPhoneID
}

// GetPkiPhoneIDOk returns a tuple with the PkiPhoneID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneRequestCompound) GetPkiPhoneIDOk() (*int32, bool) {
	if o == nil || IsNil(o.PkiPhoneID) {
		return nil, false
	}
	return o.PkiPhoneID, true
}

// HasPkiPhoneID returns a boolean if a field has been set.
func (o *PhoneRequestCompound) HasPkiPhoneID() bool {
	if o != nil && !IsNil(o.PkiPhoneID) {
		return true
	}

	return false
}

// SetPkiPhoneID gets a reference to the given int32 and assigns it to the PkiPhoneID field.
func (o *PhoneRequestCompound) SetPkiPhoneID(v int32) {
	o.PkiPhoneID = &v
}

// GetFkiPhonetypeID returns the FkiPhonetypeID field value
func (o *PhoneRequestCompound) GetFkiPhonetypeID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiPhonetypeID
}

// GetFkiPhonetypeIDOk returns a tuple with the FkiPhonetypeID field value
// and a boolean to check if the value has been set.
func (o *PhoneRequestCompound) GetFkiPhonetypeIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiPhonetypeID, true
}

// SetFkiPhonetypeID sets field value
func (o *PhoneRequestCompound) SetFkiPhonetypeID(v int32) {
	o.FkiPhonetypeID = v
}

// GetEPhoneType returns the EPhoneType field value if set, zero value otherwise.
// Deprecated
func (o *PhoneRequestCompound) GetEPhoneType() FieldEPhoneType {
	if o == nil || IsNil(o.EPhoneType) {
		var ret FieldEPhoneType
		return ret
	}
	return *o.EPhoneType
}

// GetEPhoneTypeOk returns a tuple with the EPhoneType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *PhoneRequestCompound) GetEPhoneTypeOk() (*FieldEPhoneType, bool) {
	if o == nil || IsNil(o.EPhoneType) {
		return nil, false
	}
	return o.EPhoneType, true
}

// HasEPhoneType returns a boolean if a field has been set.
func (o *PhoneRequestCompound) HasEPhoneType() bool {
	if o != nil && !IsNil(o.EPhoneType) {
		return true
	}

	return false
}

// SetEPhoneType gets a reference to the given FieldEPhoneType and assigns it to the EPhoneType field.
// Deprecated
func (o *PhoneRequestCompound) SetEPhoneType(v FieldEPhoneType) {
	o.EPhoneType = &v
}

// GetSPhoneRegion returns the SPhoneRegion field value if set, zero value otherwise.
// Deprecated
func (o *PhoneRequestCompound) GetSPhoneRegion() string {
	if o == nil || IsNil(o.SPhoneRegion) {
		var ret string
		return ret
	}
	return *o.SPhoneRegion
}

// GetSPhoneRegionOk returns a tuple with the SPhoneRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *PhoneRequestCompound) GetSPhoneRegionOk() (*string, bool) {
	if o == nil || IsNil(o.SPhoneRegion) {
		return nil, false
	}
	return o.SPhoneRegion, true
}

// HasSPhoneRegion returns a boolean if a field has been set.
func (o *PhoneRequestCompound) HasSPhoneRegion() bool {
	if o != nil && !IsNil(o.SPhoneRegion) {
		return true
	}

	return false
}

// SetSPhoneRegion gets a reference to the given string and assigns it to the SPhoneRegion field.
// Deprecated
func (o *PhoneRequestCompound) SetSPhoneRegion(v string) {
	o.SPhoneRegion = &v
}

// GetSPhoneExchange returns the SPhoneExchange field value if set, zero value otherwise.
// Deprecated
func (o *PhoneRequestCompound) GetSPhoneExchange() string {
	if o == nil || IsNil(o.SPhoneExchange) {
		var ret string
		return ret
	}
	return *o.SPhoneExchange
}

// GetSPhoneExchangeOk returns a tuple with the SPhoneExchange field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *PhoneRequestCompound) GetSPhoneExchangeOk() (*string, bool) {
	if o == nil || IsNil(o.SPhoneExchange) {
		return nil, false
	}
	return o.SPhoneExchange, true
}

// HasSPhoneExchange returns a boolean if a field has been set.
func (o *PhoneRequestCompound) HasSPhoneExchange() bool {
	if o != nil && !IsNil(o.SPhoneExchange) {
		return true
	}

	return false
}

// SetSPhoneExchange gets a reference to the given string and assigns it to the SPhoneExchange field.
// Deprecated
func (o *PhoneRequestCompound) SetSPhoneExchange(v string) {
	o.SPhoneExchange = &v
}

// GetSPhoneNumber returns the SPhoneNumber field value if set, zero value otherwise.
// Deprecated
func (o *PhoneRequestCompound) GetSPhoneNumber() string {
	if o == nil || IsNil(o.SPhoneNumber) {
		var ret string
		return ret
	}
	return *o.SPhoneNumber
}

// GetSPhoneNumberOk returns a tuple with the SPhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *PhoneRequestCompound) GetSPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SPhoneNumber) {
		return nil, false
	}
	return o.SPhoneNumber, true
}

// HasSPhoneNumber returns a boolean if a field has been set.
func (o *PhoneRequestCompound) HasSPhoneNumber() bool {
	if o != nil && !IsNil(o.SPhoneNumber) {
		return true
	}

	return false
}

// SetSPhoneNumber gets a reference to the given string and assigns it to the SPhoneNumber field.
// Deprecated
func (o *PhoneRequestCompound) SetSPhoneNumber(v string) {
	o.SPhoneNumber = &v
}

// GetSPhoneInternational returns the SPhoneInternational field value if set, zero value otherwise.
// Deprecated
func (o *PhoneRequestCompound) GetSPhoneInternational() string {
	if o == nil || IsNil(o.SPhoneInternational) {
		var ret string
		return ret
	}
	return *o.SPhoneInternational
}

// GetSPhoneInternationalOk returns a tuple with the SPhoneInternational field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *PhoneRequestCompound) GetSPhoneInternationalOk() (*string, bool) {
	if o == nil || IsNil(o.SPhoneInternational) {
		return nil, false
	}
	return o.SPhoneInternational, true
}

// HasSPhoneInternational returns a boolean if a field has been set.
func (o *PhoneRequestCompound) HasSPhoneInternational() bool {
	if o != nil && !IsNil(o.SPhoneInternational) {
		return true
	}

	return false
}

// SetSPhoneInternational gets a reference to the given string and assigns it to the SPhoneInternational field.
// Deprecated
func (o *PhoneRequestCompound) SetSPhoneInternational(v string) {
	o.SPhoneInternational = &v
}

// GetSPhoneExtension returns the SPhoneExtension field value if set, zero value otherwise.
func (o *PhoneRequestCompound) GetSPhoneExtension() string {
	if o == nil || IsNil(o.SPhoneExtension) {
		var ret string
		return ret
	}
	return *o.SPhoneExtension
}

// GetSPhoneExtensionOk returns a tuple with the SPhoneExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneRequestCompound) GetSPhoneExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.SPhoneExtension) {
		return nil, false
	}
	return o.SPhoneExtension, true
}

// HasSPhoneExtension returns a boolean if a field has been set.
func (o *PhoneRequestCompound) HasSPhoneExtension() bool {
	if o != nil && !IsNil(o.SPhoneExtension) {
		return true
	}

	return false
}

// SetSPhoneExtension gets a reference to the given string and assigns it to the SPhoneExtension field.
func (o *PhoneRequestCompound) SetSPhoneExtension(v string) {
	o.SPhoneExtension = &v
}

// GetSPhoneE164 returns the SPhoneE164 field value if set, zero value otherwise.
func (o *PhoneRequestCompound) GetSPhoneE164() string {
	if o == nil || IsNil(o.SPhoneE164) {
		var ret string
		return ret
	}
	return *o.SPhoneE164
}

// GetSPhoneE164Ok returns a tuple with the SPhoneE164 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneRequestCompound) GetSPhoneE164Ok() (*string, bool) {
	if o == nil || IsNil(o.SPhoneE164) {
		return nil, false
	}
	return o.SPhoneE164, true
}

// HasSPhoneE164 returns a boolean if a field has been set.
func (o *PhoneRequestCompound) HasSPhoneE164() bool {
	if o != nil && !IsNil(o.SPhoneE164) {
		return true
	}

	return false
}

// SetSPhoneE164 gets a reference to the given string and assigns it to the SPhoneE164 field.
func (o *PhoneRequestCompound) SetSPhoneE164(v string) {
	o.SPhoneE164 = &v
}

func (o PhoneRequestCompound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PhoneRequestCompound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PkiPhoneID) {
		toSerialize["pkiPhoneID"] = o.PkiPhoneID
	}
	toSerialize["fkiPhonetypeID"] = o.FkiPhonetypeID
	if !IsNil(o.EPhoneType) {
		toSerialize["ePhoneType"] = o.EPhoneType
	}
	if !IsNil(o.SPhoneRegion) {
		toSerialize["sPhoneRegion"] = o.SPhoneRegion
	}
	if !IsNil(o.SPhoneExchange) {
		toSerialize["sPhoneExchange"] = o.SPhoneExchange
	}
	if !IsNil(o.SPhoneNumber) {
		toSerialize["sPhoneNumber"] = o.SPhoneNumber
	}
	if !IsNil(o.SPhoneInternational) {
		toSerialize["sPhoneInternational"] = o.SPhoneInternational
	}
	if !IsNil(o.SPhoneExtension) {
		toSerialize["sPhoneExtension"] = o.SPhoneExtension
	}
	if !IsNil(o.SPhoneE164) {
		toSerialize["sPhoneE164"] = o.SPhoneE164
	}
	return toSerialize, nil
}

type NullablePhoneRequestCompound struct {
	value *PhoneRequestCompound
	isSet bool
}

func (v NullablePhoneRequestCompound) Get() *PhoneRequestCompound {
	return v.value
}

func (v *NullablePhoneRequestCompound) Set(val *PhoneRequestCompound) {
	v.value = val
	v.isSet = true
}

func (v NullablePhoneRequestCompound) IsSet() bool {
	return v.isSet
}

func (v *NullablePhoneRequestCompound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePhoneRequestCompound(val *PhoneRequestCompound) *NullablePhoneRequestCompound {
	return &NullablePhoneRequestCompound{value: val, isSet: true}
}

func (v NullablePhoneRequestCompound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePhoneRequestCompound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


