/*
 * eZmax API Definition
 *
 * This API expose all the functionnalities for the eZmax and eZsign application.  We provide SDKs for customers. They are generated using OpenAPI codegen, we encourage customers to use them as we also provide samples for them.  You can choose to build your own implementation manually or can use any compatible OpenAPI 3.0 generator like Swagger Codegen, OpenAPI codegen or any commercial generators.  If you need helping understanding how to use this API, don't waste too much time looking for it. Contact support-api@ezmax.ca, we're here to help. We are developpers so we know programmers don't like bad documentation. If you don't find what you need in the documentation, let us know, we'll improve it and put you rapidly up on track.
 *
 * API version: 1.0.29
 * Contact: support-api@ezmax.ca
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxinc/eZmax-SDK-go

import (
	"encoding/json"
)

// ContactRequestCompoundAllOf struct for ContactRequestCompoundAllOf
type ContactRequestCompoundAllOf struct {
	ObjContactinformations ContactinformationsRequestCompound `json:"objContactinformations"`
}

// NewContactRequestCompoundAllOf instantiates a new ContactRequestCompoundAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContactRequestCompoundAllOf(objContactinformations ContactinformationsRequestCompound, ) *ContactRequestCompoundAllOf {
	this := ContactRequestCompoundAllOf{}
	this.ObjContactinformations = objContactinformations
	return &this
}

// NewContactRequestCompoundAllOfWithDefaults instantiates a new ContactRequestCompoundAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContactRequestCompoundAllOfWithDefaults() *ContactRequestCompoundAllOf {
	this := ContactRequestCompoundAllOf{}
	return &this
}

// GetObjContactinformations returns the ObjContactinformations field value
func (o *ContactRequestCompoundAllOf) GetObjContactinformations() ContactinformationsRequestCompound {
	if o == nil  {
		var ret ContactinformationsRequestCompound
		return ret
	}

	return o.ObjContactinformations
}

// GetObjContactinformationsOk returns a tuple with the ObjContactinformations field value
// and a boolean to check if the value has been set.
func (o *ContactRequestCompoundAllOf) GetObjContactinformationsOk() (*ContactinformationsRequestCompound, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ObjContactinformations, true
}

// SetObjContactinformations sets field value
func (o *ContactRequestCompoundAllOf) SetObjContactinformations(v ContactinformationsRequestCompound) {
	o.ObjContactinformations = v
}

func (o ContactRequestCompoundAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["objContactinformations"] = o.ObjContactinformations
	}
	return json.Marshal(toSerialize)
}

type NullableContactRequestCompoundAllOf struct {
	value *ContactRequestCompoundAllOf
	isSet bool
}

func (v NullableContactRequestCompoundAllOf) Get() *ContactRequestCompoundAllOf {
	return v.value
}

func (v *NullableContactRequestCompoundAllOf) Set(val *ContactRequestCompoundAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableContactRequestCompoundAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableContactRequestCompoundAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContactRequestCompoundAllOf(val *ContactRequestCompoundAllOf) *NullableContactRequestCompoundAllOf {
	return &NullableContactRequestCompoundAllOf{value: val, isSet: true}
}

func (v NullableContactRequestCompoundAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContactRequestCompoundAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


