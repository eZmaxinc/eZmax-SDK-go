/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.2
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CustomEzsignformfieldgroupRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomEzsignformfieldgroupRequest{}

// CustomEzsignformfieldgroupRequest A Custom Ezsignformfieldgroup Object to fill an Ezsignform using submitForm
type CustomEzsignformfieldgroupRequest struct {
	// The unique ID of the Ezsignformfieldgroup
	PkiEzsignformfieldgroupID *int32 `json:"pkiEzsignformfieldgroupID,omitempty"`
	// The Label for the Ezsignformfieldgroup
	SEzsignformfieldgroupLabel *string `json:"sEzsignformfieldgroupLabel,omitempty"`
	// An array containing all the values to fill the Ezsignform.
	AObjEzsignformfield []CustomEzsignformfieldRequest `json:"a_objEzsignformfield"`
}

type _CustomEzsignformfieldgroupRequest CustomEzsignformfieldgroupRequest

// NewCustomEzsignformfieldgroupRequest instantiates a new CustomEzsignformfieldgroupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomEzsignformfieldgroupRequest(aObjEzsignformfield []CustomEzsignformfieldRequest) *CustomEzsignformfieldgroupRequest {
	this := CustomEzsignformfieldgroupRequest{}
	this.AObjEzsignformfield = aObjEzsignformfield
	return &this
}

// NewCustomEzsignformfieldgroupRequestWithDefaults instantiates a new CustomEzsignformfieldgroupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomEzsignformfieldgroupRequestWithDefaults() *CustomEzsignformfieldgroupRequest {
	this := CustomEzsignformfieldgroupRequest{}
	return &this
}

// GetPkiEzsignformfieldgroupID returns the PkiEzsignformfieldgroupID field value if set, zero value otherwise.
func (o *CustomEzsignformfieldgroupRequest) GetPkiEzsignformfieldgroupID() int32 {
	if o == nil || IsNil(o.PkiEzsignformfieldgroupID) {
		var ret int32
		return ret
	}
	return *o.PkiEzsignformfieldgroupID
}

// GetPkiEzsignformfieldgroupIDOk returns a tuple with the PkiEzsignformfieldgroupID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomEzsignformfieldgroupRequest) GetPkiEzsignformfieldgroupIDOk() (*int32, bool) {
	if o == nil || IsNil(o.PkiEzsignformfieldgroupID) {
		return nil, false
	}
	return o.PkiEzsignformfieldgroupID, true
}

// HasPkiEzsignformfieldgroupID returns a boolean if a field has been set.
func (o *CustomEzsignformfieldgroupRequest) HasPkiEzsignformfieldgroupID() bool {
	if o != nil && !IsNil(o.PkiEzsignformfieldgroupID) {
		return true
	}

	return false
}

// SetPkiEzsignformfieldgroupID gets a reference to the given int32 and assigns it to the PkiEzsignformfieldgroupID field.
func (o *CustomEzsignformfieldgroupRequest) SetPkiEzsignformfieldgroupID(v int32) {
	o.PkiEzsignformfieldgroupID = &v
}

// GetSEzsignformfieldgroupLabel returns the SEzsignformfieldgroupLabel field value if set, zero value otherwise.
func (o *CustomEzsignformfieldgroupRequest) GetSEzsignformfieldgroupLabel() string {
	if o == nil || IsNil(o.SEzsignformfieldgroupLabel) {
		var ret string
		return ret
	}
	return *o.SEzsignformfieldgroupLabel
}

// GetSEzsignformfieldgroupLabelOk returns a tuple with the SEzsignformfieldgroupLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomEzsignformfieldgroupRequest) GetSEzsignformfieldgroupLabelOk() (*string, bool) {
	if o == nil || IsNil(o.SEzsignformfieldgroupLabel) {
		return nil, false
	}
	return o.SEzsignformfieldgroupLabel, true
}

// HasSEzsignformfieldgroupLabel returns a boolean if a field has been set.
func (o *CustomEzsignformfieldgroupRequest) HasSEzsignformfieldgroupLabel() bool {
	if o != nil && !IsNil(o.SEzsignformfieldgroupLabel) {
		return true
	}

	return false
}

// SetSEzsignformfieldgroupLabel gets a reference to the given string and assigns it to the SEzsignformfieldgroupLabel field.
func (o *CustomEzsignformfieldgroupRequest) SetSEzsignformfieldgroupLabel(v string) {
	o.SEzsignformfieldgroupLabel = &v
}

// GetAObjEzsignformfield returns the AObjEzsignformfield field value
func (o *CustomEzsignformfieldgroupRequest) GetAObjEzsignformfield() []CustomEzsignformfieldRequest {
	if o == nil {
		var ret []CustomEzsignformfieldRequest
		return ret
	}

	return o.AObjEzsignformfield
}

// GetAObjEzsignformfieldOk returns a tuple with the AObjEzsignformfield field value
// and a boolean to check if the value has been set.
func (o *CustomEzsignformfieldgroupRequest) GetAObjEzsignformfieldOk() ([]CustomEzsignformfieldRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.AObjEzsignformfield, true
}

// SetAObjEzsignformfield sets field value
func (o *CustomEzsignformfieldgroupRequest) SetAObjEzsignformfield(v []CustomEzsignformfieldRequest) {
	o.AObjEzsignformfield = v
}

func (o CustomEzsignformfieldgroupRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomEzsignformfieldgroupRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PkiEzsignformfieldgroupID) {
		toSerialize["pkiEzsignformfieldgroupID"] = o.PkiEzsignformfieldgroupID
	}
	if !IsNil(o.SEzsignformfieldgroupLabel) {
		toSerialize["sEzsignformfieldgroupLabel"] = o.SEzsignformfieldgroupLabel
	}
	toSerialize["a_objEzsignformfield"] = o.AObjEzsignformfield
	return toSerialize, nil
}

func (o *CustomEzsignformfieldgroupRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"a_objEzsignformfield",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomEzsignformfieldgroupRequest := _CustomEzsignformfieldgroupRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCustomEzsignformfieldgroupRequest)

	if err != nil {
		return err
	}

	*o = CustomEzsignformfieldgroupRequest(varCustomEzsignformfieldgroupRequest)

	return err
}

type NullableCustomEzsignformfieldgroupRequest struct {
	value *CustomEzsignformfieldgroupRequest
	isSet bool
}

func (v NullableCustomEzsignformfieldgroupRequest) Get() *CustomEzsignformfieldgroupRequest {
	return v.value
}

func (v *NullableCustomEzsignformfieldgroupRequest) Set(val *CustomEzsignformfieldgroupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomEzsignformfieldgroupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomEzsignformfieldgroupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomEzsignformfieldgroupRequest(val *CustomEzsignformfieldgroupRequest) *NullableCustomEzsignformfieldgroupRequest {
	return &NullableCustomEzsignformfieldgroupRequest{value: val, isSet: true}
}

func (v NullableCustomEzsignformfieldgroupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomEzsignformfieldgroupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


