/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.2
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CurrencyAutocompleteElementResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CurrencyAutocompleteElementResponse{}

// CurrencyAutocompleteElementResponse A Currency AutocompleteElement Response
type CurrencyAutocompleteElementResponse struct {
	// The unique ID of the Currency.
	PkiCurrencyID int32 `json:"pkiCurrencyID"`
	// The description of the Currency in the language of the requester
	SCurrencyDescriptionX string `json:"sCurrencyDescriptionX" validate:"regexp=^.{1,20}$"`
	// Whether the Currency is active or not
	BCurrencyIsactive bool `json:"bCurrencyIsactive"`
}

type _CurrencyAutocompleteElementResponse CurrencyAutocompleteElementResponse

// NewCurrencyAutocompleteElementResponse instantiates a new CurrencyAutocompleteElementResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCurrencyAutocompleteElementResponse(pkiCurrencyID int32, sCurrencyDescriptionX string, bCurrencyIsactive bool) *CurrencyAutocompleteElementResponse {
	this := CurrencyAutocompleteElementResponse{}
	this.PkiCurrencyID = pkiCurrencyID
	this.SCurrencyDescriptionX = sCurrencyDescriptionX
	this.BCurrencyIsactive = bCurrencyIsactive
	return &this
}

// NewCurrencyAutocompleteElementResponseWithDefaults instantiates a new CurrencyAutocompleteElementResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCurrencyAutocompleteElementResponseWithDefaults() *CurrencyAutocompleteElementResponse {
	this := CurrencyAutocompleteElementResponse{}
	return &this
}

// GetPkiCurrencyID returns the PkiCurrencyID field value
func (o *CurrencyAutocompleteElementResponse) GetPkiCurrencyID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PkiCurrencyID
}

// GetPkiCurrencyIDOk returns a tuple with the PkiCurrencyID field value
// and a boolean to check if the value has been set.
func (o *CurrencyAutocompleteElementResponse) GetPkiCurrencyIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkiCurrencyID, true
}

// SetPkiCurrencyID sets field value
func (o *CurrencyAutocompleteElementResponse) SetPkiCurrencyID(v int32) {
	o.PkiCurrencyID = v
}

// GetSCurrencyDescriptionX returns the SCurrencyDescriptionX field value
func (o *CurrencyAutocompleteElementResponse) GetSCurrencyDescriptionX() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SCurrencyDescriptionX
}

// GetSCurrencyDescriptionXOk returns a tuple with the SCurrencyDescriptionX field value
// and a boolean to check if the value has been set.
func (o *CurrencyAutocompleteElementResponse) GetSCurrencyDescriptionXOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SCurrencyDescriptionX, true
}

// SetSCurrencyDescriptionX sets field value
func (o *CurrencyAutocompleteElementResponse) SetSCurrencyDescriptionX(v string) {
	o.SCurrencyDescriptionX = v
}

// GetBCurrencyIsactive returns the BCurrencyIsactive field value
func (o *CurrencyAutocompleteElementResponse) GetBCurrencyIsactive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BCurrencyIsactive
}

// GetBCurrencyIsactiveOk returns a tuple with the BCurrencyIsactive field value
// and a boolean to check if the value has been set.
func (o *CurrencyAutocompleteElementResponse) GetBCurrencyIsactiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BCurrencyIsactive, true
}

// SetBCurrencyIsactive sets field value
func (o *CurrencyAutocompleteElementResponse) SetBCurrencyIsactive(v bool) {
	o.BCurrencyIsactive = v
}

func (o CurrencyAutocompleteElementResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CurrencyAutocompleteElementResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pkiCurrencyID"] = o.PkiCurrencyID
	toSerialize["sCurrencyDescriptionX"] = o.SCurrencyDescriptionX
	toSerialize["bCurrencyIsactive"] = o.BCurrencyIsactive
	return toSerialize, nil
}

func (o *CurrencyAutocompleteElementResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pkiCurrencyID",
		"sCurrencyDescriptionX",
		"bCurrencyIsactive",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCurrencyAutocompleteElementResponse := _CurrencyAutocompleteElementResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCurrencyAutocompleteElementResponse)

	if err != nil {
		return err
	}

	*o = CurrencyAutocompleteElementResponse(varCurrencyAutocompleteElementResponse)

	return err
}

type NullableCurrencyAutocompleteElementResponse struct {
	value *CurrencyAutocompleteElementResponse
	isSet bool
}

func (v NullableCurrencyAutocompleteElementResponse) Get() *CurrencyAutocompleteElementResponse {
	return v.value
}

func (v *NullableCurrencyAutocompleteElementResponse) Set(val *CurrencyAutocompleteElementResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCurrencyAutocompleteElementResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCurrencyAutocompleteElementResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCurrencyAutocompleteElementResponse(val *CurrencyAutocompleteElementResponse) *NullableCurrencyAutocompleteElementResponse {
	return &NullableCurrencyAutocompleteElementResponse{value: val, isSet: true}
}

func (v NullableCurrencyAutocompleteElementResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCurrencyAutocompleteElementResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


