/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// checks if the EzsignfoldertypeAutocompleteElementResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsignfoldertypeAutocompleteElementResponse{}

// EzsignfoldertypeAutocompleteElementResponse A Ezsignfoldertype AutocompleteElement Response
type EzsignfoldertypeAutocompleteElementResponse struct {
	EEzsignfoldertypePrivacylevel FieldEEzsignfoldertypePrivacylevel `json:"eEzsignfoldertypePrivacylevel"`
	// The name of the Ezsignfoldertype in the language of the requester
	SEzsignfoldertypeNameX string `json:"sEzsignfoldertypeNameX"`
	// The unique ID of the Ezsignfoldertype.
	PkiEzsignfoldertypeID int32 `json:"pkiEzsignfoldertypeID"`
	// Whether the Ezsignfoldertype is active or not
	BEzsignfoldertypeIsactive bool `json:"bEzsignfoldertypeIsactive"`
}

// NewEzsignfoldertypeAutocompleteElementResponse instantiates a new EzsignfoldertypeAutocompleteElementResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsignfoldertypeAutocompleteElementResponse(eEzsignfoldertypePrivacylevel FieldEEzsignfoldertypePrivacylevel, sEzsignfoldertypeNameX string, pkiEzsignfoldertypeID int32, bEzsignfoldertypeIsactive bool) *EzsignfoldertypeAutocompleteElementResponse {
	this := EzsignfoldertypeAutocompleteElementResponse{}
	this.EEzsignfoldertypePrivacylevel = eEzsignfoldertypePrivacylevel
	this.SEzsignfoldertypeNameX = sEzsignfoldertypeNameX
	this.PkiEzsignfoldertypeID = pkiEzsignfoldertypeID
	this.BEzsignfoldertypeIsactive = bEzsignfoldertypeIsactive
	return &this
}

// NewEzsignfoldertypeAutocompleteElementResponseWithDefaults instantiates a new EzsignfoldertypeAutocompleteElementResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsignfoldertypeAutocompleteElementResponseWithDefaults() *EzsignfoldertypeAutocompleteElementResponse {
	this := EzsignfoldertypeAutocompleteElementResponse{}
	return &this
}

// GetEEzsignfoldertypePrivacylevel returns the EEzsignfoldertypePrivacylevel field value
func (o *EzsignfoldertypeAutocompleteElementResponse) GetEEzsignfoldertypePrivacylevel() FieldEEzsignfoldertypePrivacylevel {
	if o == nil {
		var ret FieldEEzsignfoldertypePrivacylevel
		return ret
	}

	return o.EEzsignfoldertypePrivacylevel
}

// GetEEzsignfoldertypePrivacylevelOk returns a tuple with the EEzsignfoldertypePrivacylevel field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeAutocompleteElementResponse) GetEEzsignfoldertypePrivacylevelOk() (*FieldEEzsignfoldertypePrivacylevel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EEzsignfoldertypePrivacylevel, true
}

// SetEEzsignfoldertypePrivacylevel sets field value
func (o *EzsignfoldertypeAutocompleteElementResponse) SetEEzsignfoldertypePrivacylevel(v FieldEEzsignfoldertypePrivacylevel) {
	o.EEzsignfoldertypePrivacylevel = v
}

// GetSEzsignfoldertypeNameX returns the SEzsignfoldertypeNameX field value
func (o *EzsignfoldertypeAutocompleteElementResponse) GetSEzsignfoldertypeNameX() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SEzsignfoldertypeNameX
}

// GetSEzsignfoldertypeNameXOk returns a tuple with the SEzsignfoldertypeNameX field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeAutocompleteElementResponse) GetSEzsignfoldertypeNameXOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SEzsignfoldertypeNameX, true
}

// SetSEzsignfoldertypeNameX sets field value
func (o *EzsignfoldertypeAutocompleteElementResponse) SetSEzsignfoldertypeNameX(v string) {
	o.SEzsignfoldertypeNameX = v
}

// GetPkiEzsignfoldertypeID returns the PkiEzsignfoldertypeID field value
func (o *EzsignfoldertypeAutocompleteElementResponse) GetPkiEzsignfoldertypeID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PkiEzsignfoldertypeID
}

// GetPkiEzsignfoldertypeIDOk returns a tuple with the PkiEzsignfoldertypeID field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeAutocompleteElementResponse) GetPkiEzsignfoldertypeIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkiEzsignfoldertypeID, true
}

// SetPkiEzsignfoldertypeID sets field value
func (o *EzsignfoldertypeAutocompleteElementResponse) SetPkiEzsignfoldertypeID(v int32) {
	o.PkiEzsignfoldertypeID = v
}

// GetBEzsignfoldertypeIsactive returns the BEzsignfoldertypeIsactive field value
func (o *EzsignfoldertypeAutocompleteElementResponse) GetBEzsignfoldertypeIsactive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BEzsignfoldertypeIsactive
}

// GetBEzsignfoldertypeIsactiveOk returns a tuple with the BEzsignfoldertypeIsactive field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeAutocompleteElementResponse) GetBEzsignfoldertypeIsactiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BEzsignfoldertypeIsactive, true
}

// SetBEzsignfoldertypeIsactive sets field value
func (o *EzsignfoldertypeAutocompleteElementResponse) SetBEzsignfoldertypeIsactive(v bool) {
	o.BEzsignfoldertypeIsactive = v
}

func (o EzsignfoldertypeAutocompleteElementResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsignfoldertypeAutocompleteElementResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["eEzsignfoldertypePrivacylevel"] = o.EEzsignfoldertypePrivacylevel
	toSerialize["sEzsignfoldertypeNameX"] = o.SEzsignfoldertypeNameX
	toSerialize["pkiEzsignfoldertypeID"] = o.PkiEzsignfoldertypeID
	toSerialize["bEzsignfoldertypeIsactive"] = o.BEzsignfoldertypeIsactive
	return toSerialize, nil
}

type NullableEzsignfoldertypeAutocompleteElementResponse struct {
	value *EzsignfoldertypeAutocompleteElementResponse
	isSet bool
}

func (v NullableEzsignfoldertypeAutocompleteElementResponse) Get() *EzsignfoldertypeAutocompleteElementResponse {
	return v.value
}

func (v *NullableEzsignfoldertypeAutocompleteElementResponse) Set(val *EzsignfoldertypeAutocompleteElementResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsignfoldertypeAutocompleteElementResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsignfoldertypeAutocompleteElementResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsignfoldertypeAutocompleteElementResponse(val *EzsignfoldertypeAutocompleteElementResponse) *NullableEzsignfoldertypeAutocompleteElementResponse {
	return &NullableEzsignfoldertypeAutocompleteElementResponse{value: val, isSet: true}
}

func (v NullableEzsignfoldertypeAutocompleteElementResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsignfoldertypeAutocompleteElementResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


