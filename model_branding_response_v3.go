/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.2
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BrandingResponseV3 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BrandingResponseV3{}

// BrandingResponseV3 A Branding Object
type BrandingResponseV3 struct {
	// The unique ID of the Branding
	PkiBrandingID int32 `json:"pkiBrandingID"`
	// The unique ID of the Email
	FkiEmailID *int32 `json:"fkiEmailID,omitempty"`
	ObjBrandingDescription MultilingualBrandingDescription `json:"objBrandingDescription"`
	// The Description of the Branding in the language of the requester
	SBrandingDescriptionX string `json:"sBrandingDescriptionX"`
	// The name of the Branding  This value will only be set if you wish to overwrite the default name. If you want to keep the default name, leave this property empty
	SBrandingName *string `json:"sBrandingName,omitempty" validate:"regexp=^.{0,55}$"`
	// The email address.
	SEmailAddress *string "json:\"sEmailAddress,omitempty\" validate:\"regexp=^[\\\\w.%+\\\\-!#$%&'*+\\/=?^`{|}~]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,20}$\""
	EBrandingLogo FieldEBrandingLogo `json:"eBrandingLogo"`
	EBrandingAlignlogo FieldEBrandingAlignlogo `json:"eBrandingAlignlogo"`
	// The primary color. This is a RGB color converted into integer
	IBrandingColor int32 `json:"iBrandingColor"`
	// Whether the Branding is active or not
	BBrandingIsactive bool `json:"bBrandingIsactive"`
}

type _BrandingResponseV3 BrandingResponseV3

// NewBrandingResponseV3 instantiates a new BrandingResponseV3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBrandingResponseV3(pkiBrandingID int32, objBrandingDescription MultilingualBrandingDescription, sBrandingDescriptionX string, eBrandingLogo FieldEBrandingLogo, eBrandingAlignlogo FieldEBrandingAlignlogo, iBrandingColor int32, bBrandingIsactive bool) *BrandingResponseV3 {
	this := BrandingResponseV3{}
	this.PkiBrandingID = pkiBrandingID
	this.ObjBrandingDescription = objBrandingDescription
	this.SBrandingDescriptionX = sBrandingDescriptionX
	this.EBrandingLogo = eBrandingLogo
	this.EBrandingAlignlogo = eBrandingAlignlogo
	this.IBrandingColor = iBrandingColor
	this.BBrandingIsactive = bBrandingIsactive
	return &this
}

// NewBrandingResponseV3WithDefaults instantiates a new BrandingResponseV3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBrandingResponseV3WithDefaults() *BrandingResponseV3 {
	this := BrandingResponseV3{}
	return &this
}

// GetPkiBrandingID returns the PkiBrandingID field value
func (o *BrandingResponseV3) GetPkiBrandingID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PkiBrandingID
}

// GetPkiBrandingIDOk returns a tuple with the PkiBrandingID field value
// and a boolean to check if the value has been set.
func (o *BrandingResponseV3) GetPkiBrandingIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkiBrandingID, true
}

// SetPkiBrandingID sets field value
func (o *BrandingResponseV3) SetPkiBrandingID(v int32) {
	o.PkiBrandingID = v
}

// GetFkiEmailID returns the FkiEmailID field value if set, zero value otherwise.
func (o *BrandingResponseV3) GetFkiEmailID() int32 {
	if o == nil || IsNil(o.FkiEmailID) {
		var ret int32
		return ret
	}
	return *o.FkiEmailID
}

// GetFkiEmailIDOk returns a tuple with the FkiEmailID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandingResponseV3) GetFkiEmailIDOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiEmailID) {
		return nil, false
	}
	return o.FkiEmailID, true
}

// HasFkiEmailID returns a boolean if a field has been set.
func (o *BrandingResponseV3) HasFkiEmailID() bool {
	if o != nil && !IsNil(o.FkiEmailID) {
		return true
	}

	return false
}

// SetFkiEmailID gets a reference to the given int32 and assigns it to the FkiEmailID field.
func (o *BrandingResponseV3) SetFkiEmailID(v int32) {
	o.FkiEmailID = &v
}

// GetObjBrandingDescription returns the ObjBrandingDescription field value
func (o *BrandingResponseV3) GetObjBrandingDescription() MultilingualBrandingDescription {
	if o == nil {
		var ret MultilingualBrandingDescription
		return ret
	}

	return o.ObjBrandingDescription
}

// GetObjBrandingDescriptionOk returns a tuple with the ObjBrandingDescription field value
// and a boolean to check if the value has been set.
func (o *BrandingResponseV3) GetObjBrandingDescriptionOk() (*MultilingualBrandingDescription, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjBrandingDescription, true
}

// SetObjBrandingDescription sets field value
func (o *BrandingResponseV3) SetObjBrandingDescription(v MultilingualBrandingDescription) {
	o.ObjBrandingDescription = v
}

// GetSBrandingDescriptionX returns the SBrandingDescriptionX field value
func (o *BrandingResponseV3) GetSBrandingDescriptionX() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SBrandingDescriptionX
}

// GetSBrandingDescriptionXOk returns a tuple with the SBrandingDescriptionX field value
// and a boolean to check if the value has been set.
func (o *BrandingResponseV3) GetSBrandingDescriptionXOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SBrandingDescriptionX, true
}

// SetSBrandingDescriptionX sets field value
func (o *BrandingResponseV3) SetSBrandingDescriptionX(v string) {
	o.SBrandingDescriptionX = v
}

// GetSBrandingName returns the SBrandingName field value if set, zero value otherwise.
func (o *BrandingResponseV3) GetSBrandingName() string {
	if o == nil || IsNil(o.SBrandingName) {
		var ret string
		return ret
	}
	return *o.SBrandingName
}

// GetSBrandingNameOk returns a tuple with the SBrandingName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandingResponseV3) GetSBrandingNameOk() (*string, bool) {
	if o == nil || IsNil(o.SBrandingName) {
		return nil, false
	}
	return o.SBrandingName, true
}

// HasSBrandingName returns a boolean if a field has been set.
func (o *BrandingResponseV3) HasSBrandingName() bool {
	if o != nil && !IsNil(o.SBrandingName) {
		return true
	}

	return false
}

// SetSBrandingName gets a reference to the given string and assigns it to the SBrandingName field.
func (o *BrandingResponseV3) SetSBrandingName(v string) {
	o.SBrandingName = &v
}

// GetSEmailAddress returns the SEmailAddress field value if set, zero value otherwise.
func (o *BrandingResponseV3) GetSEmailAddress() string {
	if o == nil || IsNil(o.SEmailAddress) {
		var ret string
		return ret
	}
	return *o.SEmailAddress
}

// GetSEmailAddressOk returns a tuple with the SEmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandingResponseV3) GetSEmailAddressOk() (*string, bool) {
	if o == nil || IsNil(o.SEmailAddress) {
		return nil, false
	}
	return o.SEmailAddress, true
}

// HasSEmailAddress returns a boolean if a field has been set.
func (o *BrandingResponseV3) HasSEmailAddress() bool {
	if o != nil && !IsNil(o.SEmailAddress) {
		return true
	}

	return false
}

// SetSEmailAddress gets a reference to the given string and assigns it to the SEmailAddress field.
func (o *BrandingResponseV3) SetSEmailAddress(v string) {
	o.SEmailAddress = &v
}

// GetEBrandingLogo returns the EBrandingLogo field value
func (o *BrandingResponseV3) GetEBrandingLogo() FieldEBrandingLogo {
	if o == nil {
		var ret FieldEBrandingLogo
		return ret
	}

	return o.EBrandingLogo
}

// GetEBrandingLogoOk returns a tuple with the EBrandingLogo field value
// and a boolean to check if the value has been set.
func (o *BrandingResponseV3) GetEBrandingLogoOk() (*FieldEBrandingLogo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EBrandingLogo, true
}

// SetEBrandingLogo sets field value
func (o *BrandingResponseV3) SetEBrandingLogo(v FieldEBrandingLogo) {
	o.EBrandingLogo = v
}

// GetEBrandingAlignlogo returns the EBrandingAlignlogo field value
func (o *BrandingResponseV3) GetEBrandingAlignlogo() FieldEBrandingAlignlogo {
	if o == nil {
		var ret FieldEBrandingAlignlogo
		return ret
	}

	return o.EBrandingAlignlogo
}

// GetEBrandingAlignlogoOk returns a tuple with the EBrandingAlignlogo field value
// and a boolean to check if the value has been set.
func (o *BrandingResponseV3) GetEBrandingAlignlogoOk() (*FieldEBrandingAlignlogo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EBrandingAlignlogo, true
}

// SetEBrandingAlignlogo sets field value
func (o *BrandingResponseV3) SetEBrandingAlignlogo(v FieldEBrandingAlignlogo) {
	o.EBrandingAlignlogo = v
}

// GetIBrandingColor returns the IBrandingColor field value
func (o *BrandingResponseV3) GetIBrandingColor() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IBrandingColor
}

// GetIBrandingColorOk returns a tuple with the IBrandingColor field value
// and a boolean to check if the value has been set.
func (o *BrandingResponseV3) GetIBrandingColorOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IBrandingColor, true
}

// SetIBrandingColor sets field value
func (o *BrandingResponseV3) SetIBrandingColor(v int32) {
	o.IBrandingColor = v
}

// GetBBrandingIsactive returns the BBrandingIsactive field value
func (o *BrandingResponseV3) GetBBrandingIsactive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BBrandingIsactive
}

// GetBBrandingIsactiveOk returns a tuple with the BBrandingIsactive field value
// and a boolean to check if the value has been set.
func (o *BrandingResponseV3) GetBBrandingIsactiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BBrandingIsactive, true
}

// SetBBrandingIsactive sets field value
func (o *BrandingResponseV3) SetBBrandingIsactive(v bool) {
	o.BBrandingIsactive = v
}

func (o BrandingResponseV3) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BrandingResponseV3) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pkiBrandingID"] = o.PkiBrandingID
	if !IsNil(o.FkiEmailID) {
		toSerialize["fkiEmailID"] = o.FkiEmailID
	}
	toSerialize["objBrandingDescription"] = o.ObjBrandingDescription
	toSerialize["sBrandingDescriptionX"] = o.SBrandingDescriptionX
	if !IsNil(o.SBrandingName) {
		toSerialize["sBrandingName"] = o.SBrandingName
	}
	if !IsNil(o.SEmailAddress) {
		toSerialize["sEmailAddress"] = o.SEmailAddress
	}
	toSerialize["eBrandingLogo"] = o.EBrandingLogo
	toSerialize["eBrandingAlignlogo"] = o.EBrandingAlignlogo
	toSerialize["iBrandingColor"] = o.IBrandingColor
	toSerialize["bBrandingIsactive"] = o.BBrandingIsactive
	return toSerialize, nil
}

func (o *BrandingResponseV3) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pkiBrandingID",
		"objBrandingDescription",
		"sBrandingDescriptionX",
		"eBrandingLogo",
		"eBrandingAlignlogo",
		"iBrandingColor",
		"bBrandingIsactive",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBrandingResponseV3 := _BrandingResponseV3{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBrandingResponseV3)

	if err != nil {
		return err
	}

	*o = BrandingResponseV3(varBrandingResponseV3)

	return err
}

type NullableBrandingResponseV3 struct {
	value *BrandingResponseV3
	isSet bool
}

func (v NullableBrandingResponseV3) Get() *BrandingResponseV3 {
	return v.value
}

func (v *NullableBrandingResponseV3) Set(val *BrandingResponseV3) {
	v.value = val
	v.isSet = true
}

func (v NullableBrandingResponseV3) IsSet() bool {
	return v.isSet
}

func (v *NullableBrandingResponseV3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBrandingResponseV3(val *BrandingResponseV3) *NullableBrandingResponseV3 {
	return &NullableBrandingResponseV3{value: val, isSet: true}
}

func (v NullableBrandingResponseV3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBrandingResponseV3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


