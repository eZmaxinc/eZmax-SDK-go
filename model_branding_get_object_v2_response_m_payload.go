/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BrandingGetObjectV2ResponseMPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BrandingGetObjectV2ResponseMPayload{}

// BrandingGetObjectV2ResponseMPayload Payload for GET /2/object/branding/{pkiBrandingID}
type BrandingGetObjectV2ResponseMPayload struct {
	ObjBranding BrandingResponseCompound `json:"objBranding"`
}

type _BrandingGetObjectV2ResponseMPayload BrandingGetObjectV2ResponseMPayload

// NewBrandingGetObjectV2ResponseMPayload instantiates a new BrandingGetObjectV2ResponseMPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBrandingGetObjectV2ResponseMPayload(objBranding BrandingResponseCompound) *BrandingGetObjectV2ResponseMPayload {
	this := BrandingGetObjectV2ResponseMPayload{}
	this.ObjBranding = objBranding
	return &this
}

// NewBrandingGetObjectV2ResponseMPayloadWithDefaults instantiates a new BrandingGetObjectV2ResponseMPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBrandingGetObjectV2ResponseMPayloadWithDefaults() *BrandingGetObjectV2ResponseMPayload {
	this := BrandingGetObjectV2ResponseMPayload{}
	return &this
}

// GetObjBranding returns the ObjBranding field value
func (o *BrandingGetObjectV2ResponseMPayload) GetObjBranding() BrandingResponseCompound {
	if o == nil {
		var ret BrandingResponseCompound
		return ret
	}

	return o.ObjBranding
}

// GetObjBrandingOk returns a tuple with the ObjBranding field value
// and a boolean to check if the value has been set.
func (o *BrandingGetObjectV2ResponseMPayload) GetObjBrandingOk() (*BrandingResponseCompound, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjBranding, true
}

// SetObjBranding sets field value
func (o *BrandingGetObjectV2ResponseMPayload) SetObjBranding(v BrandingResponseCompound) {
	o.ObjBranding = v
}

func (o BrandingGetObjectV2ResponseMPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BrandingGetObjectV2ResponseMPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["objBranding"] = o.ObjBranding
	return toSerialize, nil
}

func (o *BrandingGetObjectV2ResponseMPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"objBranding",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBrandingGetObjectV2ResponseMPayload := _BrandingGetObjectV2ResponseMPayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBrandingGetObjectV2ResponseMPayload)

	if err != nil {
		return err
	}

	*o = BrandingGetObjectV2ResponseMPayload(varBrandingGetObjectV2ResponseMPayload)

	return err
}

type NullableBrandingGetObjectV2ResponseMPayload struct {
	value *BrandingGetObjectV2ResponseMPayload
	isSet bool
}

func (v NullableBrandingGetObjectV2ResponseMPayload) Get() *BrandingGetObjectV2ResponseMPayload {
	return v.value
}

func (v *NullableBrandingGetObjectV2ResponseMPayload) Set(val *BrandingGetObjectV2ResponseMPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableBrandingGetObjectV2ResponseMPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableBrandingGetObjectV2ResponseMPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBrandingGetObjectV2ResponseMPayload(val *BrandingGetObjectV2ResponseMPayload) *NullableBrandingGetObjectV2ResponseMPayload {
	return &NullableBrandingGetObjectV2ResponseMPayload{value: val, isSet: true}
}

func (v NullableBrandingGetObjectV2ResponseMPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBrandingGetObjectV2ResponseMPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


