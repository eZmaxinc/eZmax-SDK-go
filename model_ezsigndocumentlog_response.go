/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsigndocumentlogResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsigndocumentlogResponse{}

// EzsigndocumentlogResponse An Ezsigndocumentlog Object
type EzsigndocumentlogResponse struct {
	// The unique ID of the User
	FkiUserID *int32 `json:"fkiUserID,omitempty"`
	// The unique ID of the Ezsignsigner
	FkiEzsignsignerID *int32 `json:"fkiEzsignsignerID,omitempty"`
	// The date and time at which the event was logged
	DtEzsigndocumentlogDatetime string `json:"dtEzsigndocumentlogDatetime"`
	EEzsigndocumentlogType FieldEEzsigndocumentlogType `json:"eEzsigndocumentlogType"`
	// The detail of the Ezsigndocumentlog
	SEzsigndocumentlogDetail string `json:"sEzsigndocumentlogDetail"`
	// The last name of the User or Ezsignsigner
	SEzsigndocumentlogLastname string `json:"sEzsigndocumentlogLastname"`
	// The first name of the User or Ezsignsigner
	SEzsigndocumentlogFirstname string `json:"sEzsigndocumentlogFirstname"`
	// Represent an IP address.
	SEzsigndocumentlogIP string `json:"sEzsigndocumentlogIP"`
}

type _EzsigndocumentlogResponse EzsigndocumentlogResponse

// NewEzsigndocumentlogResponse instantiates a new EzsigndocumentlogResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsigndocumentlogResponse(dtEzsigndocumentlogDatetime string, eEzsigndocumentlogType FieldEEzsigndocumentlogType, sEzsigndocumentlogDetail string, sEzsigndocumentlogLastname string, sEzsigndocumentlogFirstname string, sEzsigndocumentlogIP string) *EzsigndocumentlogResponse {
	this := EzsigndocumentlogResponse{}
	this.DtEzsigndocumentlogDatetime = dtEzsigndocumentlogDatetime
	this.EEzsigndocumentlogType = eEzsigndocumentlogType
	this.SEzsigndocumentlogDetail = sEzsigndocumentlogDetail
	this.SEzsigndocumentlogLastname = sEzsigndocumentlogLastname
	this.SEzsigndocumentlogFirstname = sEzsigndocumentlogFirstname
	this.SEzsigndocumentlogIP = sEzsigndocumentlogIP
	return &this
}

// NewEzsigndocumentlogResponseWithDefaults instantiates a new EzsigndocumentlogResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsigndocumentlogResponseWithDefaults() *EzsigndocumentlogResponse {
	this := EzsigndocumentlogResponse{}
	return &this
}

// GetFkiUserID returns the FkiUserID field value if set, zero value otherwise.
func (o *EzsigndocumentlogResponse) GetFkiUserID() int32 {
	if o == nil || IsNil(o.FkiUserID) {
		var ret int32
		return ret
	}
	return *o.FkiUserID
}

// GetFkiUserIDOk returns a tuple with the FkiUserID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigndocumentlogResponse) GetFkiUserIDOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiUserID) {
		return nil, false
	}
	return o.FkiUserID, true
}

// HasFkiUserID returns a boolean if a field has been set.
func (o *EzsigndocumentlogResponse) HasFkiUserID() bool {
	if o != nil && !IsNil(o.FkiUserID) {
		return true
	}

	return false
}

// SetFkiUserID gets a reference to the given int32 and assigns it to the FkiUserID field.
func (o *EzsigndocumentlogResponse) SetFkiUserID(v int32) {
	o.FkiUserID = &v
}

// GetFkiEzsignsignerID returns the FkiEzsignsignerID field value if set, zero value otherwise.
func (o *EzsigndocumentlogResponse) GetFkiEzsignsignerID() int32 {
	if o == nil || IsNil(o.FkiEzsignsignerID) {
		var ret int32
		return ret
	}
	return *o.FkiEzsignsignerID
}

// GetFkiEzsignsignerIDOk returns a tuple with the FkiEzsignsignerID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigndocumentlogResponse) GetFkiEzsignsignerIDOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiEzsignsignerID) {
		return nil, false
	}
	return o.FkiEzsignsignerID, true
}

// HasFkiEzsignsignerID returns a boolean if a field has been set.
func (o *EzsigndocumentlogResponse) HasFkiEzsignsignerID() bool {
	if o != nil && !IsNil(o.FkiEzsignsignerID) {
		return true
	}

	return false
}

// SetFkiEzsignsignerID gets a reference to the given int32 and assigns it to the FkiEzsignsignerID field.
func (o *EzsigndocumentlogResponse) SetFkiEzsignsignerID(v int32) {
	o.FkiEzsignsignerID = &v
}

// GetDtEzsigndocumentlogDatetime returns the DtEzsigndocumentlogDatetime field value
func (o *EzsigndocumentlogResponse) GetDtEzsigndocumentlogDatetime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DtEzsigndocumentlogDatetime
}

// GetDtEzsigndocumentlogDatetimeOk returns a tuple with the DtEzsigndocumentlogDatetime field value
// and a boolean to check if the value has been set.
func (o *EzsigndocumentlogResponse) GetDtEzsigndocumentlogDatetimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DtEzsigndocumentlogDatetime, true
}

// SetDtEzsigndocumentlogDatetime sets field value
func (o *EzsigndocumentlogResponse) SetDtEzsigndocumentlogDatetime(v string) {
	o.DtEzsigndocumentlogDatetime = v
}

// GetEEzsigndocumentlogType returns the EEzsigndocumentlogType field value
func (o *EzsigndocumentlogResponse) GetEEzsigndocumentlogType() FieldEEzsigndocumentlogType {
	if o == nil {
		var ret FieldEEzsigndocumentlogType
		return ret
	}

	return o.EEzsigndocumentlogType
}

// GetEEzsigndocumentlogTypeOk returns a tuple with the EEzsigndocumentlogType field value
// and a boolean to check if the value has been set.
func (o *EzsigndocumentlogResponse) GetEEzsigndocumentlogTypeOk() (*FieldEEzsigndocumentlogType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EEzsigndocumentlogType, true
}

// SetEEzsigndocumentlogType sets field value
func (o *EzsigndocumentlogResponse) SetEEzsigndocumentlogType(v FieldEEzsigndocumentlogType) {
	o.EEzsigndocumentlogType = v
}

// GetSEzsigndocumentlogDetail returns the SEzsigndocumentlogDetail field value
func (o *EzsigndocumentlogResponse) GetSEzsigndocumentlogDetail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SEzsigndocumentlogDetail
}

// GetSEzsigndocumentlogDetailOk returns a tuple with the SEzsigndocumentlogDetail field value
// and a boolean to check if the value has been set.
func (o *EzsigndocumentlogResponse) GetSEzsigndocumentlogDetailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SEzsigndocumentlogDetail, true
}

// SetSEzsigndocumentlogDetail sets field value
func (o *EzsigndocumentlogResponse) SetSEzsigndocumentlogDetail(v string) {
	o.SEzsigndocumentlogDetail = v
}

// GetSEzsigndocumentlogLastname returns the SEzsigndocumentlogLastname field value
func (o *EzsigndocumentlogResponse) GetSEzsigndocumentlogLastname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SEzsigndocumentlogLastname
}

// GetSEzsigndocumentlogLastnameOk returns a tuple with the SEzsigndocumentlogLastname field value
// and a boolean to check if the value has been set.
func (o *EzsigndocumentlogResponse) GetSEzsigndocumentlogLastnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SEzsigndocumentlogLastname, true
}

// SetSEzsigndocumentlogLastname sets field value
func (o *EzsigndocumentlogResponse) SetSEzsigndocumentlogLastname(v string) {
	o.SEzsigndocumentlogLastname = v
}

// GetSEzsigndocumentlogFirstname returns the SEzsigndocumentlogFirstname field value
func (o *EzsigndocumentlogResponse) GetSEzsigndocumentlogFirstname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SEzsigndocumentlogFirstname
}

// GetSEzsigndocumentlogFirstnameOk returns a tuple with the SEzsigndocumentlogFirstname field value
// and a boolean to check if the value has been set.
func (o *EzsigndocumentlogResponse) GetSEzsigndocumentlogFirstnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SEzsigndocumentlogFirstname, true
}

// SetSEzsigndocumentlogFirstname sets field value
func (o *EzsigndocumentlogResponse) SetSEzsigndocumentlogFirstname(v string) {
	o.SEzsigndocumentlogFirstname = v
}

// GetSEzsigndocumentlogIP returns the SEzsigndocumentlogIP field value
func (o *EzsigndocumentlogResponse) GetSEzsigndocumentlogIP() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SEzsigndocumentlogIP
}

// GetSEzsigndocumentlogIPOk returns a tuple with the SEzsigndocumentlogIP field value
// and a boolean to check if the value has been set.
func (o *EzsigndocumentlogResponse) GetSEzsigndocumentlogIPOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SEzsigndocumentlogIP, true
}

// SetSEzsigndocumentlogIP sets field value
func (o *EzsigndocumentlogResponse) SetSEzsigndocumentlogIP(v string) {
	o.SEzsigndocumentlogIP = v
}

func (o EzsigndocumentlogResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsigndocumentlogResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FkiUserID) {
		toSerialize["fkiUserID"] = o.FkiUserID
	}
	if !IsNil(o.FkiEzsignsignerID) {
		toSerialize["fkiEzsignsignerID"] = o.FkiEzsignsignerID
	}
	toSerialize["dtEzsigndocumentlogDatetime"] = o.DtEzsigndocumentlogDatetime
	toSerialize["eEzsigndocumentlogType"] = o.EEzsigndocumentlogType
	toSerialize["sEzsigndocumentlogDetail"] = o.SEzsigndocumentlogDetail
	toSerialize["sEzsigndocumentlogLastname"] = o.SEzsigndocumentlogLastname
	toSerialize["sEzsigndocumentlogFirstname"] = o.SEzsigndocumentlogFirstname
	toSerialize["sEzsigndocumentlogIP"] = o.SEzsigndocumentlogIP
	return toSerialize, nil
}

func (o *EzsigndocumentlogResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dtEzsigndocumentlogDatetime",
		"eEzsigndocumentlogType",
		"sEzsigndocumentlogDetail",
		"sEzsigndocumentlogLastname",
		"sEzsigndocumentlogFirstname",
		"sEzsigndocumentlogIP",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsigndocumentlogResponse := _EzsigndocumentlogResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsigndocumentlogResponse)

	if err != nil {
		return err
	}

	*o = EzsigndocumentlogResponse(varEzsigndocumentlogResponse)

	return err
}

type NullableEzsigndocumentlogResponse struct {
	value *EzsigndocumentlogResponse
	isSet bool
}

func (v NullableEzsigndocumentlogResponse) Get() *EzsigndocumentlogResponse {
	return v.value
}

func (v *NullableEzsigndocumentlogResponse) Set(val *EzsigndocumentlogResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsigndocumentlogResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsigndocumentlogResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsigndocumentlogResponse(val *EzsigndocumentlogResponse) *NullableEzsigndocumentlogResponse {
	return &NullableEzsigndocumentlogResponse{value: val, isSet: true}
}

func (v NullableEzsigndocumentlogResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsigndocumentlogResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


