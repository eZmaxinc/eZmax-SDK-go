/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// checks if the EzdoctemplatedocumentRequestPatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzdoctemplatedocumentRequestPatch{}

// EzdoctemplatedocumentRequestPatch An Ezdoctemplatedocument Object
type EzdoctemplatedocumentRequestPatch struct {
	// Indicates the format of the template.  This field is Required when sEzdoctemplatedocumentBase64 is set.
	EEzdoctemplatedocumentFormat *string `json:"eEzdoctemplatedocumentFormat,omitempty"`
	// List of field in Ezdoctemplatedocument
	SEzdoctemplatedocumentFields *string `json:"sEzdoctemplatedocumentFields,omitempty" validate:"regexp=^.{0,}$"`
	// The Base64 encoded binary content of the document.  This field is Required when eEzdoctemplatedocumentFormat is set.
	SEzdoctemplatedocumentBase64 *string `json:"sEzdoctemplatedocumentBase64,omitempty"`
}

// NewEzdoctemplatedocumentRequestPatch instantiates a new EzdoctemplatedocumentRequestPatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzdoctemplatedocumentRequestPatch() *EzdoctemplatedocumentRequestPatch {
	this := EzdoctemplatedocumentRequestPatch{}
	return &this
}

// NewEzdoctemplatedocumentRequestPatchWithDefaults instantiates a new EzdoctemplatedocumentRequestPatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzdoctemplatedocumentRequestPatchWithDefaults() *EzdoctemplatedocumentRequestPatch {
	this := EzdoctemplatedocumentRequestPatch{}
	return &this
}

// GetEEzdoctemplatedocumentFormat returns the EEzdoctemplatedocumentFormat field value if set, zero value otherwise.
func (o *EzdoctemplatedocumentRequestPatch) GetEEzdoctemplatedocumentFormat() string {
	if o == nil || IsNil(o.EEzdoctemplatedocumentFormat) {
		var ret string
		return ret
	}
	return *o.EEzdoctemplatedocumentFormat
}

// GetEEzdoctemplatedocumentFormatOk returns a tuple with the EEzdoctemplatedocumentFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzdoctemplatedocumentRequestPatch) GetEEzdoctemplatedocumentFormatOk() (*string, bool) {
	if o == nil || IsNil(o.EEzdoctemplatedocumentFormat) {
		return nil, false
	}
	return o.EEzdoctemplatedocumentFormat, true
}

// HasEEzdoctemplatedocumentFormat returns a boolean if a field has been set.
func (o *EzdoctemplatedocumentRequestPatch) HasEEzdoctemplatedocumentFormat() bool {
	if o != nil && !IsNil(o.EEzdoctemplatedocumentFormat) {
		return true
	}

	return false
}

// SetEEzdoctemplatedocumentFormat gets a reference to the given string and assigns it to the EEzdoctemplatedocumentFormat field.
func (o *EzdoctemplatedocumentRequestPatch) SetEEzdoctemplatedocumentFormat(v string) {
	o.EEzdoctemplatedocumentFormat = &v
}

// GetSEzdoctemplatedocumentFields returns the SEzdoctemplatedocumentFields field value if set, zero value otherwise.
func (o *EzdoctemplatedocumentRequestPatch) GetSEzdoctemplatedocumentFields() string {
	if o == nil || IsNil(o.SEzdoctemplatedocumentFields) {
		var ret string
		return ret
	}
	return *o.SEzdoctemplatedocumentFields
}

// GetSEzdoctemplatedocumentFieldsOk returns a tuple with the SEzdoctemplatedocumentFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzdoctemplatedocumentRequestPatch) GetSEzdoctemplatedocumentFieldsOk() (*string, bool) {
	if o == nil || IsNil(o.SEzdoctemplatedocumentFields) {
		return nil, false
	}
	return o.SEzdoctemplatedocumentFields, true
}

// HasSEzdoctemplatedocumentFields returns a boolean if a field has been set.
func (o *EzdoctemplatedocumentRequestPatch) HasSEzdoctemplatedocumentFields() bool {
	if o != nil && !IsNil(o.SEzdoctemplatedocumentFields) {
		return true
	}

	return false
}

// SetSEzdoctemplatedocumentFields gets a reference to the given string and assigns it to the SEzdoctemplatedocumentFields field.
func (o *EzdoctemplatedocumentRequestPatch) SetSEzdoctemplatedocumentFields(v string) {
	o.SEzdoctemplatedocumentFields = &v
}

// GetSEzdoctemplatedocumentBase64 returns the SEzdoctemplatedocumentBase64 field value if set, zero value otherwise.
func (o *EzdoctemplatedocumentRequestPatch) GetSEzdoctemplatedocumentBase64() string {
	if o == nil || IsNil(o.SEzdoctemplatedocumentBase64) {
		var ret string
		return ret
	}
	return *o.SEzdoctemplatedocumentBase64
}

// GetSEzdoctemplatedocumentBase64Ok returns a tuple with the SEzdoctemplatedocumentBase64 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzdoctemplatedocumentRequestPatch) GetSEzdoctemplatedocumentBase64Ok() (*string, bool) {
	if o == nil || IsNil(o.SEzdoctemplatedocumentBase64) {
		return nil, false
	}
	return o.SEzdoctemplatedocumentBase64, true
}

// HasSEzdoctemplatedocumentBase64 returns a boolean if a field has been set.
func (o *EzdoctemplatedocumentRequestPatch) HasSEzdoctemplatedocumentBase64() bool {
	if o != nil && !IsNil(o.SEzdoctemplatedocumentBase64) {
		return true
	}

	return false
}

// SetSEzdoctemplatedocumentBase64 gets a reference to the given string and assigns it to the SEzdoctemplatedocumentBase64 field.
func (o *EzdoctemplatedocumentRequestPatch) SetSEzdoctemplatedocumentBase64(v string) {
	o.SEzdoctemplatedocumentBase64 = &v
}

func (o EzdoctemplatedocumentRequestPatch) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzdoctemplatedocumentRequestPatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EEzdoctemplatedocumentFormat) {
		toSerialize["eEzdoctemplatedocumentFormat"] = o.EEzdoctemplatedocumentFormat
	}
	if !IsNil(o.SEzdoctemplatedocumentFields) {
		toSerialize["sEzdoctemplatedocumentFields"] = o.SEzdoctemplatedocumentFields
	}
	if !IsNil(o.SEzdoctemplatedocumentBase64) {
		toSerialize["sEzdoctemplatedocumentBase64"] = o.SEzdoctemplatedocumentBase64
	}
	return toSerialize, nil
}

type NullableEzdoctemplatedocumentRequestPatch struct {
	value *EzdoctemplatedocumentRequestPatch
	isSet bool
}

func (v NullableEzdoctemplatedocumentRequestPatch) Get() *EzdoctemplatedocumentRequestPatch {
	return v.value
}

func (v *NullableEzdoctemplatedocumentRequestPatch) Set(val *EzdoctemplatedocumentRequestPatch) {
	v.value = val
	v.isSet = true
}

func (v NullableEzdoctemplatedocumentRequestPatch) IsSet() bool {
	return v.isSet
}

func (v *NullableEzdoctemplatedocumentRequestPatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzdoctemplatedocumentRequestPatch(val *EzdoctemplatedocumentRequestPatch) *NullableEzdoctemplatedocumentRequestPatch {
	return &NullableEzdoctemplatedocumentRequestPatch{value: val, isSet: true}
}

func (v NullableEzdoctemplatedocumentRequestPatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzdoctemplatedocumentRequestPatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


