/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// checks if the CommonReport type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonReport{}

// CommonReport A Report containing Reportsections 
type CommonReport struct {
	AObjReportsection []CommonReportsection `json:"a_objReportsection"`
}

// NewCommonReport instantiates a new CommonReport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonReport(aObjReportsection []CommonReportsection) *CommonReport {
	this := CommonReport{}
	this.AObjReportsection = aObjReportsection
	return &this
}

// NewCommonReportWithDefaults instantiates a new CommonReport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonReportWithDefaults() *CommonReport {
	this := CommonReport{}
	return &this
}

// GetAObjReportsection returns the AObjReportsection field value
func (o *CommonReport) GetAObjReportsection() []CommonReportsection {
	if o == nil {
		var ret []CommonReportsection
		return ret
	}

	return o.AObjReportsection
}

// GetAObjReportsectionOk returns a tuple with the AObjReportsection field value
// and a boolean to check if the value has been set.
func (o *CommonReport) GetAObjReportsectionOk() ([]CommonReportsection, bool) {
	if o == nil {
		return nil, false
	}
	return o.AObjReportsection, true
}

// SetAObjReportsection sets field value
func (o *CommonReport) SetAObjReportsection(v []CommonReportsection) {
	o.AObjReportsection = v
}

func (o CommonReport) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonReport) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["a_objReportsection"] = o.AObjReportsection
	return toSerialize, nil
}

type NullableCommonReport struct {
	value *CommonReport
	isSet bool
}

func (v NullableCommonReport) Get() *CommonReport {
	return v.value
}

func (v *NullableCommonReport) Set(val *CommonReport) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonReport) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonReport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonReport(val *CommonReport) *NullableCommonReport {
	return &NullableCommonReport{value: val, isSet: true}
}

func (v NullableCommonReport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonReport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


