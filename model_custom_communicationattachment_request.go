/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.2
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// checks if the CustomCommunicationattachmentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomCommunicationattachmentRequest{}

// CustomCommunicationattachmentRequest A Custom Communicationattachment Object
type CustomCommunicationattachmentRequest struct {
	ObjCommunicationattachment *CommunicationattachmentRequestCompound `json:"objCommunicationattachment,omitempty"`
	ObjCommunicationexternalattachment *CommonFile `json:"objCommunicationexternalattachment,omitempty"`
}

// NewCustomCommunicationattachmentRequest instantiates a new CustomCommunicationattachmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomCommunicationattachmentRequest() *CustomCommunicationattachmentRequest {
	this := CustomCommunicationattachmentRequest{}
	return &this
}

// NewCustomCommunicationattachmentRequestWithDefaults instantiates a new CustomCommunicationattachmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomCommunicationattachmentRequestWithDefaults() *CustomCommunicationattachmentRequest {
	this := CustomCommunicationattachmentRequest{}
	return &this
}

// GetObjCommunicationattachment returns the ObjCommunicationattachment field value if set, zero value otherwise.
func (o *CustomCommunicationattachmentRequest) GetObjCommunicationattachment() CommunicationattachmentRequestCompound {
	if o == nil || IsNil(o.ObjCommunicationattachment) {
		var ret CommunicationattachmentRequestCompound
		return ret
	}
	return *o.ObjCommunicationattachment
}

// GetObjCommunicationattachmentOk returns a tuple with the ObjCommunicationattachment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomCommunicationattachmentRequest) GetObjCommunicationattachmentOk() (*CommunicationattachmentRequestCompound, bool) {
	if o == nil || IsNil(o.ObjCommunicationattachment) {
		return nil, false
	}
	return o.ObjCommunicationattachment, true
}

// HasObjCommunicationattachment returns a boolean if a field has been set.
func (o *CustomCommunicationattachmentRequest) HasObjCommunicationattachment() bool {
	if o != nil && !IsNil(o.ObjCommunicationattachment) {
		return true
	}

	return false
}

// SetObjCommunicationattachment gets a reference to the given CommunicationattachmentRequestCompound and assigns it to the ObjCommunicationattachment field.
func (o *CustomCommunicationattachmentRequest) SetObjCommunicationattachment(v CommunicationattachmentRequestCompound) {
	o.ObjCommunicationattachment = &v
}

// GetObjCommunicationexternalattachment returns the ObjCommunicationexternalattachment field value if set, zero value otherwise.
func (o *CustomCommunicationattachmentRequest) GetObjCommunicationexternalattachment() CommonFile {
	if o == nil || IsNil(o.ObjCommunicationexternalattachment) {
		var ret CommonFile
		return ret
	}
	return *o.ObjCommunicationexternalattachment
}

// GetObjCommunicationexternalattachmentOk returns a tuple with the ObjCommunicationexternalattachment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomCommunicationattachmentRequest) GetObjCommunicationexternalattachmentOk() (*CommonFile, bool) {
	if o == nil || IsNil(o.ObjCommunicationexternalattachment) {
		return nil, false
	}
	return o.ObjCommunicationexternalattachment, true
}

// HasObjCommunicationexternalattachment returns a boolean if a field has been set.
func (o *CustomCommunicationattachmentRequest) HasObjCommunicationexternalattachment() bool {
	if o != nil && !IsNil(o.ObjCommunicationexternalattachment) {
		return true
	}

	return false
}

// SetObjCommunicationexternalattachment gets a reference to the given CommonFile and assigns it to the ObjCommunicationexternalattachment field.
func (o *CustomCommunicationattachmentRequest) SetObjCommunicationexternalattachment(v CommonFile) {
	o.ObjCommunicationexternalattachment = &v
}

func (o CustomCommunicationattachmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomCommunicationattachmentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ObjCommunicationattachment) {
		toSerialize["objCommunicationattachment"] = o.ObjCommunicationattachment
	}
	if !IsNil(o.ObjCommunicationexternalattachment) {
		toSerialize["objCommunicationexternalattachment"] = o.ObjCommunicationexternalattachment
	}
	return toSerialize, nil
}

type NullableCustomCommunicationattachmentRequest struct {
	value *CustomCommunicationattachmentRequest
	isSet bool
}

func (v NullableCustomCommunicationattachmentRequest) Get() *CustomCommunicationattachmentRequest {
	return v.value
}

func (v *NullableCustomCommunicationattachmentRequest) Set(val *CustomCommunicationattachmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomCommunicationattachmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomCommunicationattachmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomCommunicationattachmentRequest(val *CustomCommunicationattachmentRequest) *NullableCustomCommunicationattachmentRequest {
	return &NullableCustomCommunicationattachmentRequest{value: val, isSet: true}
}

func (v NullableCustomCommunicationattachmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomCommunicationattachmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


