/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.2
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"fmt"
)

// FieldEEzmaxinvoicingagentVariationezmax Variation type for eZmax
type FieldEEzmaxinvoicingagentVariationezmax string

// List of Field-eEzmaxinvoicingagentVariationezmax
const (
	CHARGE FieldEEzmaxinvoicingagentVariationezmax = "Charge"
	REFUND FieldEEzmaxinvoicingagentVariationezmax = "Refund"
	SAME FieldEEzmaxinvoicingagentVariationezmax = "Same"
)

// All allowed values of FieldEEzmaxinvoicingagentVariationezmax enum
var AllowedFieldEEzmaxinvoicingagentVariationezmaxEnumValues = []FieldEEzmaxinvoicingagentVariationezmax{
	"Charge",
	"Refund",
	"Same",
}

func (v *FieldEEzmaxinvoicingagentVariationezmax) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := FieldEEzmaxinvoicingagentVariationezmax(value)
	for _, existing := range AllowedFieldEEzmaxinvoicingagentVariationezmaxEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid FieldEEzmaxinvoicingagentVariationezmax", value)
}

// NewFieldEEzmaxinvoicingagentVariationezmaxFromValue returns a pointer to a valid FieldEEzmaxinvoicingagentVariationezmax
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewFieldEEzmaxinvoicingagentVariationezmaxFromValue(v string) (*FieldEEzmaxinvoicingagentVariationezmax, error) {
	ev := FieldEEzmaxinvoicingagentVariationezmax(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for FieldEEzmaxinvoicingagentVariationezmax: valid values are %v", v, AllowedFieldEEzmaxinvoicingagentVariationezmaxEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v FieldEEzmaxinvoicingagentVariationezmax) IsValid() bool {
	for _, existing := range AllowedFieldEEzmaxinvoicingagentVariationezmaxEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Field-eEzmaxinvoicingagentVariationezmax value
func (v FieldEEzmaxinvoicingagentVariationezmax) Ptr() *FieldEEzmaxinvoicingagentVariationezmax {
	return &v
}

type NullableFieldEEzmaxinvoicingagentVariationezmax struct {
	value *FieldEEzmaxinvoicingagentVariationezmax
	isSet bool
}

func (v NullableFieldEEzmaxinvoicingagentVariationezmax) Get() *FieldEEzmaxinvoicingagentVariationezmax {
	return v.value
}

func (v *NullableFieldEEzmaxinvoicingagentVariationezmax) Set(val *FieldEEzmaxinvoicingagentVariationezmax) {
	v.value = val
	v.isSet = true
}

func (v NullableFieldEEzmaxinvoicingagentVariationezmax) IsSet() bool {
	return v.isSet
}

func (v *NullableFieldEEzmaxinvoicingagentVariationezmax) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFieldEEzmaxinvoicingagentVariationezmax(val *FieldEEzmaxinvoicingagentVariationezmax) *NullableFieldEEzmaxinvoicingagentVariationezmax {
	return &NullableFieldEEzmaxinvoicingagentVariationezmax{value: val, isSet: true}
}

func (v NullableFieldEEzmaxinvoicingagentVariationezmax) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFieldEEzmaxinvoicingagentVariationezmax) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

