/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModuleAutocompleteElementResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModuleAutocompleteElementResponse{}

// ModuleAutocompleteElementResponse A Module AutocompleteElement Response
type ModuleAutocompleteElementResponse struct {
	// The unique ID of the Module
	PkiModuleID int32 `json:"pkiModuleID"`
	// The Name of the Module in the language of the requester
	SModuleNameX string `json:"sModuleNameX"`
	// Whether the Module is active or not
	BModuleIsactive bool `json:"bModuleIsactive"`
}

type _ModuleAutocompleteElementResponse ModuleAutocompleteElementResponse

// NewModuleAutocompleteElementResponse instantiates a new ModuleAutocompleteElementResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModuleAutocompleteElementResponse(pkiModuleID int32, sModuleNameX string, bModuleIsactive bool) *ModuleAutocompleteElementResponse {
	this := ModuleAutocompleteElementResponse{}
	this.PkiModuleID = pkiModuleID
	this.SModuleNameX = sModuleNameX
	this.BModuleIsactive = bModuleIsactive
	return &this
}

// NewModuleAutocompleteElementResponseWithDefaults instantiates a new ModuleAutocompleteElementResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModuleAutocompleteElementResponseWithDefaults() *ModuleAutocompleteElementResponse {
	this := ModuleAutocompleteElementResponse{}
	return &this
}

// GetPkiModuleID returns the PkiModuleID field value
func (o *ModuleAutocompleteElementResponse) GetPkiModuleID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PkiModuleID
}

// GetPkiModuleIDOk returns a tuple with the PkiModuleID field value
// and a boolean to check if the value has been set.
func (o *ModuleAutocompleteElementResponse) GetPkiModuleIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkiModuleID, true
}

// SetPkiModuleID sets field value
func (o *ModuleAutocompleteElementResponse) SetPkiModuleID(v int32) {
	o.PkiModuleID = v
}

// GetSModuleNameX returns the SModuleNameX field value
func (o *ModuleAutocompleteElementResponse) GetSModuleNameX() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SModuleNameX
}

// GetSModuleNameXOk returns a tuple with the SModuleNameX field value
// and a boolean to check if the value has been set.
func (o *ModuleAutocompleteElementResponse) GetSModuleNameXOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SModuleNameX, true
}

// SetSModuleNameX sets field value
func (o *ModuleAutocompleteElementResponse) SetSModuleNameX(v string) {
	o.SModuleNameX = v
}

// GetBModuleIsactive returns the BModuleIsactive field value
func (o *ModuleAutocompleteElementResponse) GetBModuleIsactive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BModuleIsactive
}

// GetBModuleIsactiveOk returns a tuple with the BModuleIsactive field value
// and a boolean to check if the value has been set.
func (o *ModuleAutocompleteElementResponse) GetBModuleIsactiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BModuleIsactive, true
}

// SetBModuleIsactive sets field value
func (o *ModuleAutocompleteElementResponse) SetBModuleIsactive(v bool) {
	o.BModuleIsactive = v
}

func (o ModuleAutocompleteElementResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModuleAutocompleteElementResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pkiModuleID"] = o.PkiModuleID
	toSerialize["sModuleNameX"] = o.SModuleNameX
	toSerialize["bModuleIsactive"] = o.BModuleIsactive
	return toSerialize, nil
}

func (o *ModuleAutocompleteElementResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pkiModuleID",
		"sModuleNameX",
		"bModuleIsactive",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModuleAutocompleteElementResponse := _ModuleAutocompleteElementResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModuleAutocompleteElementResponse)

	if err != nil {
		return err
	}

	*o = ModuleAutocompleteElementResponse(varModuleAutocompleteElementResponse)

	return err
}

type NullableModuleAutocompleteElementResponse struct {
	value *ModuleAutocompleteElementResponse
	isSet bool
}

func (v NullableModuleAutocompleteElementResponse) Get() *ModuleAutocompleteElementResponse {
	return v.value
}

func (v *NullableModuleAutocompleteElementResponse) Set(val *ModuleAutocompleteElementResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModuleAutocompleteElementResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModuleAutocompleteElementResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModuleAutocompleteElementResponse(val *ModuleAutocompleteElementResponse) *NullableModuleAutocompleteElementResponse {
	return &NullableModuleAutocompleteElementResponse{value: val, isSet: true}
}

func (v NullableModuleAutocompleteElementResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModuleAutocompleteElementResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


