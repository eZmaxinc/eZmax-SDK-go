/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.2
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsigntemplateformfieldgroupEditObjectV1Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsigntemplateformfieldgroupEditObjectV1Request{}

// EzsigntemplateformfieldgroupEditObjectV1Request Request for PUT /1/object/ezsigntemplateformfieldgroup/{pkiEzsigntemplateformfieldgroupID}
type EzsigntemplateformfieldgroupEditObjectV1Request struct {
	ObjEzsigntemplateformfieldgroup EzsigntemplateformfieldgroupRequestCompound `json:"objEzsigntemplateformfieldgroup"`
}

type _EzsigntemplateformfieldgroupEditObjectV1Request EzsigntemplateformfieldgroupEditObjectV1Request

// NewEzsigntemplateformfieldgroupEditObjectV1Request instantiates a new EzsigntemplateformfieldgroupEditObjectV1Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsigntemplateformfieldgroupEditObjectV1Request(objEzsigntemplateformfieldgroup EzsigntemplateformfieldgroupRequestCompound) *EzsigntemplateformfieldgroupEditObjectV1Request {
	this := EzsigntemplateformfieldgroupEditObjectV1Request{}
	this.ObjEzsigntemplateformfieldgroup = objEzsigntemplateformfieldgroup
	return &this
}

// NewEzsigntemplateformfieldgroupEditObjectV1RequestWithDefaults instantiates a new EzsigntemplateformfieldgroupEditObjectV1Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsigntemplateformfieldgroupEditObjectV1RequestWithDefaults() *EzsigntemplateformfieldgroupEditObjectV1Request {
	this := EzsigntemplateformfieldgroupEditObjectV1Request{}
	return &this
}

// GetObjEzsigntemplateformfieldgroup returns the ObjEzsigntemplateformfieldgroup field value
func (o *EzsigntemplateformfieldgroupEditObjectV1Request) GetObjEzsigntemplateformfieldgroup() EzsigntemplateformfieldgroupRequestCompound {
	if o == nil {
		var ret EzsigntemplateformfieldgroupRequestCompound
		return ret
	}

	return o.ObjEzsigntemplateformfieldgroup
}

// GetObjEzsigntemplateformfieldgroupOk returns a tuple with the ObjEzsigntemplateformfieldgroup field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplateformfieldgroupEditObjectV1Request) GetObjEzsigntemplateformfieldgroupOk() (*EzsigntemplateformfieldgroupRequestCompound, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjEzsigntemplateformfieldgroup, true
}

// SetObjEzsigntemplateformfieldgroup sets field value
func (o *EzsigntemplateformfieldgroupEditObjectV1Request) SetObjEzsigntemplateformfieldgroup(v EzsigntemplateformfieldgroupRequestCompound) {
	o.ObjEzsigntemplateformfieldgroup = v
}

func (o EzsigntemplateformfieldgroupEditObjectV1Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsigntemplateformfieldgroupEditObjectV1Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["objEzsigntemplateformfieldgroup"] = o.ObjEzsigntemplateformfieldgroup
	return toSerialize, nil
}

func (o *EzsigntemplateformfieldgroupEditObjectV1Request) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"objEzsigntemplateformfieldgroup",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsigntemplateformfieldgroupEditObjectV1Request := _EzsigntemplateformfieldgroupEditObjectV1Request{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsigntemplateformfieldgroupEditObjectV1Request)

	if err != nil {
		return err
	}

	*o = EzsigntemplateformfieldgroupEditObjectV1Request(varEzsigntemplateformfieldgroupEditObjectV1Request)

	return err
}

type NullableEzsigntemplateformfieldgroupEditObjectV1Request struct {
	value *EzsigntemplateformfieldgroupEditObjectV1Request
	isSet bool
}

func (v NullableEzsigntemplateformfieldgroupEditObjectV1Request) Get() *EzsigntemplateformfieldgroupEditObjectV1Request {
	return v.value
}

func (v *NullableEzsigntemplateformfieldgroupEditObjectV1Request) Set(val *EzsigntemplateformfieldgroupEditObjectV1Request) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsigntemplateformfieldgroupEditObjectV1Request) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsigntemplateformfieldgroupEditObjectV1Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsigntemplateformfieldgroupEditObjectV1Request(val *EzsigntemplateformfieldgroupEditObjectV1Request) *NullableEzsigntemplateformfieldgroupEditObjectV1Request {
	return &NullableEzsigntemplateformfieldgroupEditObjectV1Request{value: val, isSet: true}
}

func (v NullableEzsigntemplateformfieldgroupEditObjectV1Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsigntemplateformfieldgroupEditObjectV1Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


