/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsignbulksendListElement type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsignbulksendListElement{}

// EzsignbulksendListElement An Ezsignbulksend List Element
type EzsignbulksendListElement struct {
	// The unique ID of the Ezsignbulksend
	PkiEzsignbulksendID int32 `json:"pkiEzsignbulksendID"`
	// The unique ID of the Ezsignfoldertype.
	FkiEzsignfoldertypeID int32 `json:"fkiEzsignfoldertypeID"`
	// The description of the Ezsignbulksend
	SEzsignbulksendDescription string `json:"sEzsignbulksendDescription"`
	// The name of the Ezsignfoldertype in the language of the requester
	SEzsignfoldertypeNameX string `json:"sEzsignfoldertypeNameX"`
	// Whether the Ezsigntemplatepackage was automatically modified and needs a manual validation
	BEzsignbulksendNeedvalidation bool `json:"bEzsignbulksendNeedvalidation"`
	// The total number of Ezsignbulksendtransmissions in the Ezsignbulksend
	IEzsignbulksendtransmission int32 `json:"iEzsignbulksendtransmission"`
	// The total number of Ezsignfolders in the Ezsignbulksend
	IEzsignfolder int32 `json:"iEzsignfolder"`
	// The total number of Ezsigndocuments in the Ezsignbulksend
	IEzsigndocument int32 `json:"iEzsigndocument"`
	// The total number of Ezsignsignature in the Ezsignbulksend
	IEzsignsignature int32 `json:"iEzsignsignature"`
	// The total number of already signed Ezsignsignature blocks in the Ezsignbulksend
	IEzsignsignatureSigned int32 `json:"iEzsignsignatureSigned"`
	// Whether the Ezsignbulksend is active or not
	BEzsignbulksendIsactive bool `json:"bEzsignbulksendIsactive"`
}

type _EzsignbulksendListElement EzsignbulksendListElement

// NewEzsignbulksendListElement instantiates a new EzsignbulksendListElement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsignbulksendListElement(pkiEzsignbulksendID int32, fkiEzsignfoldertypeID int32, sEzsignbulksendDescription string, sEzsignfoldertypeNameX string, bEzsignbulksendNeedvalidation bool, iEzsignbulksendtransmission int32, iEzsignfolder int32, iEzsigndocument int32, iEzsignsignature int32, iEzsignsignatureSigned int32, bEzsignbulksendIsactive bool) *EzsignbulksendListElement {
	this := EzsignbulksendListElement{}
	this.PkiEzsignbulksendID = pkiEzsignbulksendID
	this.FkiEzsignfoldertypeID = fkiEzsignfoldertypeID
	this.SEzsignbulksendDescription = sEzsignbulksendDescription
	this.SEzsignfoldertypeNameX = sEzsignfoldertypeNameX
	this.BEzsignbulksendNeedvalidation = bEzsignbulksendNeedvalidation
	this.IEzsignbulksendtransmission = iEzsignbulksendtransmission
	this.IEzsignfolder = iEzsignfolder
	this.IEzsigndocument = iEzsigndocument
	this.IEzsignsignature = iEzsignsignature
	this.IEzsignsignatureSigned = iEzsignsignatureSigned
	this.BEzsignbulksendIsactive = bEzsignbulksendIsactive
	return &this
}

// NewEzsignbulksendListElementWithDefaults instantiates a new EzsignbulksendListElement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsignbulksendListElementWithDefaults() *EzsignbulksendListElement {
	this := EzsignbulksendListElement{}
	return &this
}

// GetPkiEzsignbulksendID returns the PkiEzsignbulksendID field value
func (o *EzsignbulksendListElement) GetPkiEzsignbulksendID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PkiEzsignbulksendID
}

// GetPkiEzsignbulksendIDOk returns a tuple with the PkiEzsignbulksendID field value
// and a boolean to check if the value has been set.
func (o *EzsignbulksendListElement) GetPkiEzsignbulksendIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkiEzsignbulksendID, true
}

// SetPkiEzsignbulksendID sets field value
func (o *EzsignbulksendListElement) SetPkiEzsignbulksendID(v int32) {
	o.PkiEzsignbulksendID = v
}

// GetFkiEzsignfoldertypeID returns the FkiEzsignfoldertypeID field value
func (o *EzsignbulksendListElement) GetFkiEzsignfoldertypeID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiEzsignfoldertypeID
}

// GetFkiEzsignfoldertypeIDOk returns a tuple with the FkiEzsignfoldertypeID field value
// and a boolean to check if the value has been set.
func (o *EzsignbulksendListElement) GetFkiEzsignfoldertypeIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiEzsignfoldertypeID, true
}

// SetFkiEzsignfoldertypeID sets field value
func (o *EzsignbulksendListElement) SetFkiEzsignfoldertypeID(v int32) {
	o.FkiEzsignfoldertypeID = v
}

// GetSEzsignbulksendDescription returns the SEzsignbulksendDescription field value
func (o *EzsignbulksendListElement) GetSEzsignbulksendDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SEzsignbulksendDescription
}

// GetSEzsignbulksendDescriptionOk returns a tuple with the SEzsignbulksendDescription field value
// and a boolean to check if the value has been set.
func (o *EzsignbulksendListElement) GetSEzsignbulksendDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SEzsignbulksendDescription, true
}

// SetSEzsignbulksendDescription sets field value
func (o *EzsignbulksendListElement) SetSEzsignbulksendDescription(v string) {
	o.SEzsignbulksendDescription = v
}

// GetSEzsignfoldertypeNameX returns the SEzsignfoldertypeNameX field value
func (o *EzsignbulksendListElement) GetSEzsignfoldertypeNameX() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SEzsignfoldertypeNameX
}

// GetSEzsignfoldertypeNameXOk returns a tuple with the SEzsignfoldertypeNameX field value
// and a boolean to check if the value has been set.
func (o *EzsignbulksendListElement) GetSEzsignfoldertypeNameXOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SEzsignfoldertypeNameX, true
}

// SetSEzsignfoldertypeNameX sets field value
func (o *EzsignbulksendListElement) SetSEzsignfoldertypeNameX(v string) {
	o.SEzsignfoldertypeNameX = v
}

// GetBEzsignbulksendNeedvalidation returns the BEzsignbulksendNeedvalidation field value
func (o *EzsignbulksendListElement) GetBEzsignbulksendNeedvalidation() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BEzsignbulksendNeedvalidation
}

// GetBEzsignbulksendNeedvalidationOk returns a tuple with the BEzsignbulksendNeedvalidation field value
// and a boolean to check if the value has been set.
func (o *EzsignbulksendListElement) GetBEzsignbulksendNeedvalidationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BEzsignbulksendNeedvalidation, true
}

// SetBEzsignbulksendNeedvalidation sets field value
func (o *EzsignbulksendListElement) SetBEzsignbulksendNeedvalidation(v bool) {
	o.BEzsignbulksendNeedvalidation = v
}

// GetIEzsignbulksendtransmission returns the IEzsignbulksendtransmission field value
func (o *EzsignbulksendListElement) GetIEzsignbulksendtransmission() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IEzsignbulksendtransmission
}

// GetIEzsignbulksendtransmissionOk returns a tuple with the IEzsignbulksendtransmission field value
// and a boolean to check if the value has been set.
func (o *EzsignbulksendListElement) GetIEzsignbulksendtransmissionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IEzsignbulksendtransmission, true
}

// SetIEzsignbulksendtransmission sets field value
func (o *EzsignbulksendListElement) SetIEzsignbulksendtransmission(v int32) {
	o.IEzsignbulksendtransmission = v
}

// GetIEzsignfolder returns the IEzsignfolder field value
func (o *EzsignbulksendListElement) GetIEzsignfolder() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IEzsignfolder
}

// GetIEzsignfolderOk returns a tuple with the IEzsignfolder field value
// and a boolean to check if the value has been set.
func (o *EzsignbulksendListElement) GetIEzsignfolderOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IEzsignfolder, true
}

// SetIEzsignfolder sets field value
func (o *EzsignbulksendListElement) SetIEzsignfolder(v int32) {
	o.IEzsignfolder = v
}

// GetIEzsigndocument returns the IEzsigndocument field value
func (o *EzsignbulksendListElement) GetIEzsigndocument() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IEzsigndocument
}

// GetIEzsigndocumentOk returns a tuple with the IEzsigndocument field value
// and a boolean to check if the value has been set.
func (o *EzsignbulksendListElement) GetIEzsigndocumentOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IEzsigndocument, true
}

// SetIEzsigndocument sets field value
func (o *EzsignbulksendListElement) SetIEzsigndocument(v int32) {
	o.IEzsigndocument = v
}

// GetIEzsignsignature returns the IEzsignsignature field value
func (o *EzsignbulksendListElement) GetIEzsignsignature() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IEzsignsignature
}

// GetIEzsignsignatureOk returns a tuple with the IEzsignsignature field value
// and a boolean to check if the value has been set.
func (o *EzsignbulksendListElement) GetIEzsignsignatureOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IEzsignsignature, true
}

// SetIEzsignsignature sets field value
func (o *EzsignbulksendListElement) SetIEzsignsignature(v int32) {
	o.IEzsignsignature = v
}

// GetIEzsignsignatureSigned returns the IEzsignsignatureSigned field value
func (o *EzsignbulksendListElement) GetIEzsignsignatureSigned() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IEzsignsignatureSigned
}

// GetIEzsignsignatureSignedOk returns a tuple with the IEzsignsignatureSigned field value
// and a boolean to check if the value has been set.
func (o *EzsignbulksendListElement) GetIEzsignsignatureSignedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IEzsignsignatureSigned, true
}

// SetIEzsignsignatureSigned sets field value
func (o *EzsignbulksendListElement) SetIEzsignsignatureSigned(v int32) {
	o.IEzsignsignatureSigned = v
}

// GetBEzsignbulksendIsactive returns the BEzsignbulksendIsactive field value
func (o *EzsignbulksendListElement) GetBEzsignbulksendIsactive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BEzsignbulksendIsactive
}

// GetBEzsignbulksendIsactiveOk returns a tuple with the BEzsignbulksendIsactive field value
// and a boolean to check if the value has been set.
func (o *EzsignbulksendListElement) GetBEzsignbulksendIsactiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BEzsignbulksendIsactive, true
}

// SetBEzsignbulksendIsactive sets field value
func (o *EzsignbulksendListElement) SetBEzsignbulksendIsactive(v bool) {
	o.BEzsignbulksendIsactive = v
}

func (o EzsignbulksendListElement) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsignbulksendListElement) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pkiEzsignbulksendID"] = o.PkiEzsignbulksendID
	toSerialize["fkiEzsignfoldertypeID"] = o.FkiEzsignfoldertypeID
	toSerialize["sEzsignbulksendDescription"] = o.SEzsignbulksendDescription
	toSerialize["sEzsignfoldertypeNameX"] = o.SEzsignfoldertypeNameX
	toSerialize["bEzsignbulksendNeedvalidation"] = o.BEzsignbulksendNeedvalidation
	toSerialize["iEzsignbulksendtransmission"] = o.IEzsignbulksendtransmission
	toSerialize["iEzsignfolder"] = o.IEzsignfolder
	toSerialize["iEzsigndocument"] = o.IEzsigndocument
	toSerialize["iEzsignsignature"] = o.IEzsignsignature
	toSerialize["iEzsignsignatureSigned"] = o.IEzsignsignatureSigned
	toSerialize["bEzsignbulksendIsactive"] = o.BEzsignbulksendIsactive
	return toSerialize, nil
}

func (o *EzsignbulksendListElement) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pkiEzsignbulksendID",
		"fkiEzsignfoldertypeID",
		"sEzsignbulksendDescription",
		"sEzsignfoldertypeNameX",
		"bEzsignbulksendNeedvalidation",
		"iEzsignbulksendtransmission",
		"iEzsignfolder",
		"iEzsigndocument",
		"iEzsignsignature",
		"iEzsignsignatureSigned",
		"bEzsignbulksendIsactive",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsignbulksendListElement := _EzsignbulksendListElement{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsignbulksendListElement)

	if err != nil {
		return err
	}

	*o = EzsignbulksendListElement(varEzsignbulksendListElement)

	return err
}

type NullableEzsignbulksendListElement struct {
	value *EzsignbulksendListElement
	isSet bool
}

func (v NullableEzsignbulksendListElement) Get() *EzsignbulksendListElement {
	return v.value
}

func (v *NullableEzsignbulksendListElement) Set(val *EzsignbulksendListElement) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsignbulksendListElement) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsignbulksendListElement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsignbulksendListElement(val *EzsignbulksendListElement) *NullableEzsignbulksendListElement {
	return &NullableEzsignbulksendListElement{value: val, isSet: true}
}

func (v NullableEzsignbulksendListElement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsignbulksendListElement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


