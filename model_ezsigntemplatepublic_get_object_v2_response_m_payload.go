/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.2
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsigntemplatepublicGetObjectV2ResponseMPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsigntemplatepublicGetObjectV2ResponseMPayload{}

// EzsigntemplatepublicGetObjectV2ResponseMPayload Payload for GET /2/object/ezsigntemplatepublic/{pkiEzsigntemplatepublicID}
type EzsigntemplatepublicGetObjectV2ResponseMPayload struct {
	ObjEzsigntemplatepublic EzsigntemplatepublicResponseCompound `json:"objEzsigntemplatepublic"`
}

type _EzsigntemplatepublicGetObjectV2ResponseMPayload EzsigntemplatepublicGetObjectV2ResponseMPayload

// NewEzsigntemplatepublicGetObjectV2ResponseMPayload instantiates a new EzsigntemplatepublicGetObjectV2ResponseMPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsigntemplatepublicGetObjectV2ResponseMPayload(objEzsigntemplatepublic EzsigntemplatepublicResponseCompound) *EzsigntemplatepublicGetObjectV2ResponseMPayload {
	this := EzsigntemplatepublicGetObjectV2ResponseMPayload{}
	this.ObjEzsigntemplatepublic = objEzsigntemplatepublic
	return &this
}

// NewEzsigntemplatepublicGetObjectV2ResponseMPayloadWithDefaults instantiates a new EzsigntemplatepublicGetObjectV2ResponseMPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsigntemplatepublicGetObjectV2ResponseMPayloadWithDefaults() *EzsigntemplatepublicGetObjectV2ResponseMPayload {
	this := EzsigntemplatepublicGetObjectV2ResponseMPayload{}
	return &this
}

// GetObjEzsigntemplatepublic returns the ObjEzsigntemplatepublic field value
func (o *EzsigntemplatepublicGetObjectV2ResponseMPayload) GetObjEzsigntemplatepublic() EzsigntemplatepublicResponseCompound {
	if o == nil {
		var ret EzsigntemplatepublicResponseCompound
		return ret
	}

	return o.ObjEzsigntemplatepublic
}

// GetObjEzsigntemplatepublicOk returns a tuple with the ObjEzsigntemplatepublic field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplatepublicGetObjectV2ResponseMPayload) GetObjEzsigntemplatepublicOk() (*EzsigntemplatepublicResponseCompound, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjEzsigntemplatepublic, true
}

// SetObjEzsigntemplatepublic sets field value
func (o *EzsigntemplatepublicGetObjectV2ResponseMPayload) SetObjEzsigntemplatepublic(v EzsigntemplatepublicResponseCompound) {
	o.ObjEzsigntemplatepublic = v
}

func (o EzsigntemplatepublicGetObjectV2ResponseMPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsigntemplatepublicGetObjectV2ResponseMPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["objEzsigntemplatepublic"] = o.ObjEzsigntemplatepublic
	return toSerialize, nil
}

func (o *EzsigntemplatepublicGetObjectV2ResponseMPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"objEzsigntemplatepublic",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsigntemplatepublicGetObjectV2ResponseMPayload := _EzsigntemplatepublicGetObjectV2ResponseMPayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsigntemplatepublicGetObjectV2ResponseMPayload)

	if err != nil {
		return err
	}

	*o = EzsigntemplatepublicGetObjectV2ResponseMPayload(varEzsigntemplatepublicGetObjectV2ResponseMPayload)

	return err
}

type NullableEzsigntemplatepublicGetObjectV2ResponseMPayload struct {
	value *EzsigntemplatepublicGetObjectV2ResponseMPayload
	isSet bool
}

func (v NullableEzsigntemplatepublicGetObjectV2ResponseMPayload) Get() *EzsigntemplatepublicGetObjectV2ResponseMPayload {
	return v.value
}

func (v *NullableEzsigntemplatepublicGetObjectV2ResponseMPayload) Set(val *EzsigntemplatepublicGetObjectV2ResponseMPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsigntemplatepublicGetObjectV2ResponseMPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsigntemplatepublicGetObjectV2ResponseMPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsigntemplatepublicGetObjectV2ResponseMPayload(val *EzsigntemplatepublicGetObjectV2ResponseMPayload) *NullableEzsigntemplatepublicGetObjectV2ResponseMPayload {
	return &NullableEzsigntemplatepublicGetObjectV2ResponseMPayload{value: val, isSet: true}
}

func (v NullableEzsigntemplatepublicGetObjectV2ResponseMPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsigntemplatepublicGetObjectV2ResponseMPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


