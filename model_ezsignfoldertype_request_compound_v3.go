/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsignfoldertypeRequestCompoundV3 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsignfoldertypeRequestCompoundV3{}

// EzsignfoldertypeRequestCompoundV3 A Ezsignfoldertype Object and children
type EzsignfoldertypeRequestCompoundV3 struct {
	EzsignfoldertypeRequestV3
	AFkiUserIDSigned []int32 `json:"a_fkiUserIDSigned,omitempty"`
	AFkiUserIDSummary []int32 `json:"a_fkiUserIDSummary,omitempty"`
}

type _EzsignfoldertypeRequestCompoundV3 EzsignfoldertypeRequestCompoundV3

// NewEzsignfoldertypeRequestCompoundV3 instantiates a new EzsignfoldertypeRequestCompoundV3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsignfoldertypeRequestCompoundV3(objEzsignfoldertypeName MultilingualEzsignfoldertypeName, fkiBrandingID int32, aFkiUserlogintypeID []int32, eEzsignfoldertypePrivacylevel FieldEEzsignfoldertypePrivacylevel, iEzsignfoldertypeArchivaldays int32, eEzsignfoldertypeDisposal FieldEEzsignfoldertypeDisposal, eEzsignfoldertypeCompletion FieldEEzsignfoldertypeCompletion, iEzsignfoldertypeDeadlinedays int32, bEzsignfoldertypeSendsignedtodocumentowner bool, bEzsignfoldertypeSendsignedtofolderowner bool, bEzsignfoldertypeSendsignedtocolleague bool, bEzsignfoldertypeSendsummarytodocumentowner bool, bEzsignfoldertypeSendsummarytofolderowner bool, bEzsignfoldertypeSendsummarytocolleague bool, bEzsignfoldertypeIsactive bool) *EzsignfoldertypeRequestCompoundV3 {
	this := EzsignfoldertypeRequestCompoundV3{}
	this.ObjEzsignfoldertypeName = objEzsignfoldertypeName
	this.FkiBrandingID = fkiBrandingID
	this.AFkiUserlogintypeID = aFkiUserlogintypeID
	this.EEzsignfoldertypePrivacylevel = eEzsignfoldertypePrivacylevel
	this.IEzsignfoldertypeArchivaldays = iEzsignfoldertypeArchivaldays
	this.EEzsignfoldertypeDisposal = eEzsignfoldertypeDisposal
	this.EEzsignfoldertypeCompletion = eEzsignfoldertypeCompletion
	this.IEzsignfoldertypeDeadlinedays = iEzsignfoldertypeDeadlinedays
	this.BEzsignfoldertypeSendsignedtodocumentowner = bEzsignfoldertypeSendsignedtodocumentowner
	this.BEzsignfoldertypeSendsignedtofolderowner = bEzsignfoldertypeSendsignedtofolderowner
	this.BEzsignfoldertypeSendsignedtocolleague = bEzsignfoldertypeSendsignedtocolleague
	this.BEzsignfoldertypeSendsummarytodocumentowner = bEzsignfoldertypeSendsummarytodocumentowner
	this.BEzsignfoldertypeSendsummarytofolderowner = bEzsignfoldertypeSendsummarytofolderowner
	this.BEzsignfoldertypeSendsummarytocolleague = bEzsignfoldertypeSendsummarytocolleague
	this.BEzsignfoldertypeIsactive = bEzsignfoldertypeIsactive
	return &this
}

// NewEzsignfoldertypeRequestCompoundV3WithDefaults instantiates a new EzsignfoldertypeRequestCompoundV3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsignfoldertypeRequestCompoundV3WithDefaults() *EzsignfoldertypeRequestCompoundV3 {
	this := EzsignfoldertypeRequestCompoundV3{}
	return &this
}

// GetAFkiUserIDSigned returns the AFkiUserIDSigned field value if set, zero value otherwise.
func (o *EzsignfoldertypeRequestCompoundV3) GetAFkiUserIDSigned() []int32 {
	if o == nil || IsNil(o.AFkiUserIDSigned) {
		var ret []int32
		return ret
	}
	return o.AFkiUserIDSigned
}

// GetAFkiUserIDSignedOk returns a tuple with the AFkiUserIDSigned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompoundV3) GetAFkiUserIDSignedOk() ([]int32, bool) {
	if o == nil || IsNil(o.AFkiUserIDSigned) {
		return nil, false
	}
	return o.AFkiUserIDSigned, true
}

// HasAFkiUserIDSigned returns a boolean if a field has been set.
func (o *EzsignfoldertypeRequestCompoundV3) HasAFkiUserIDSigned() bool {
	if o != nil && !IsNil(o.AFkiUserIDSigned) {
		return true
	}

	return false
}

// SetAFkiUserIDSigned gets a reference to the given []int32 and assigns it to the AFkiUserIDSigned field.
func (o *EzsignfoldertypeRequestCompoundV3) SetAFkiUserIDSigned(v []int32) {
	o.AFkiUserIDSigned = v
}

// GetAFkiUserIDSummary returns the AFkiUserIDSummary field value if set, zero value otherwise.
func (o *EzsignfoldertypeRequestCompoundV3) GetAFkiUserIDSummary() []int32 {
	if o == nil || IsNil(o.AFkiUserIDSummary) {
		var ret []int32
		return ret
	}
	return o.AFkiUserIDSummary
}

// GetAFkiUserIDSummaryOk returns a tuple with the AFkiUserIDSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompoundV3) GetAFkiUserIDSummaryOk() ([]int32, bool) {
	if o == nil || IsNil(o.AFkiUserIDSummary) {
		return nil, false
	}
	return o.AFkiUserIDSummary, true
}

// HasAFkiUserIDSummary returns a boolean if a field has been set.
func (o *EzsignfoldertypeRequestCompoundV3) HasAFkiUserIDSummary() bool {
	if o != nil && !IsNil(o.AFkiUserIDSummary) {
		return true
	}

	return false
}

// SetAFkiUserIDSummary gets a reference to the given []int32 and assigns it to the AFkiUserIDSummary field.
func (o *EzsignfoldertypeRequestCompoundV3) SetAFkiUserIDSummary(v []int32) {
	o.AFkiUserIDSummary = v
}

func (o EzsignfoldertypeRequestCompoundV3) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsignfoldertypeRequestCompoundV3) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AFkiUserIDSigned) {
		toSerialize["a_fkiUserIDSigned"] = o.AFkiUserIDSigned
	}
	if !IsNil(o.AFkiUserIDSummary) {
		toSerialize["a_fkiUserIDSummary"] = o.AFkiUserIDSummary
	}
	return toSerialize, nil
}

func (o *EzsignfoldertypeRequestCompoundV3) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"objEzsignfoldertypeName",
		"fkiBrandingID",
		"a_fkiUserlogintypeID",
		"eEzsignfoldertypePrivacylevel",
		"iEzsignfoldertypeArchivaldays",
		"eEzsignfoldertypeDisposal",
		"eEzsignfoldertypeCompletion",
		"iEzsignfoldertypeDeadlinedays",
		"bEzsignfoldertypeSendsignedtodocumentowner",
		"bEzsignfoldertypeSendsignedtofolderowner",
		"bEzsignfoldertypeSendsignedtocolleague",
		"bEzsignfoldertypeSendsummarytodocumentowner",
		"bEzsignfoldertypeSendsummarytofolderowner",
		"bEzsignfoldertypeSendsummarytocolleague",
		"bEzsignfoldertypeIsactive",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsignfoldertypeRequestCompoundV3 := _EzsignfoldertypeRequestCompoundV3{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsignfoldertypeRequestCompoundV3)

	if err != nil {
		return err
	}

	*o = EzsignfoldertypeRequestCompoundV3(varEzsignfoldertypeRequestCompoundV3)

	return err
}

type NullableEzsignfoldertypeRequestCompoundV3 struct {
	value *EzsignfoldertypeRequestCompoundV3
	isSet bool
}

func (v NullableEzsignfoldertypeRequestCompoundV3) Get() *EzsignfoldertypeRequestCompoundV3 {
	return v.value
}

func (v *NullableEzsignfoldertypeRequestCompoundV3) Set(val *EzsignfoldertypeRequestCompoundV3) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsignfoldertypeRequestCompoundV3) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsignfoldertypeRequestCompoundV3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsignfoldertypeRequestCompoundV3(val *EzsignfoldertypeRequestCompoundV3) *NullableEzsignfoldertypeRequestCompoundV3 {
	return &NullableEzsignfoldertypeRequestCompoundV3{value: val, isSet: true}
}

func (v NullableEzsignfoldertypeRequestCompoundV3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsignfoldertypeRequestCompoundV3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


