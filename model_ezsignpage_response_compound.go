/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsignpageResponseCompound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsignpageResponseCompound{}

// EzsignpageResponseCompound An Ezsignpage Object and children to create a complete structure
type EzsignpageResponseCompound struct {
	// The unique ID of the Ezsignpage
	PkiEzsignpageID int32 `json:"pkiEzsignpageID"`
	// The Width of the page's image in pixels calculated at 100 DPI
	IEzsignpageWidthimage int32 `json:"iEzsignpageWidthimage"`
	// The Height of the page's image in pixels calculated at 100 DPI
	IEzsignpageHeightimage int32 `json:"iEzsignpageHeightimage"`
	// The Width of the page in points calculated at 72 DPI
	IEzsignpageWidthpdf int32 `json:"iEzsignpageWidthpdf"`
	// The Height of the page in points calculated at 72 DPI
	IEzsignpageHeightpdf int32 `json:"iEzsignpageHeightpdf"`
	// The page number in the Ezsigndocument
	IEzsignpagePagenumber int32 `json:"iEzsignpagePagenumber"`
	// The Url to the Ezsignpage's rasterized image.  Url will expire after 5 minutes.
	SComputedImageurl string `json:"sComputedImageurl"`
}

type _EzsignpageResponseCompound EzsignpageResponseCompound

// NewEzsignpageResponseCompound instantiates a new EzsignpageResponseCompound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsignpageResponseCompound(pkiEzsignpageID int32, iEzsignpageWidthimage int32, iEzsignpageHeightimage int32, iEzsignpageWidthpdf int32, iEzsignpageHeightpdf int32, iEzsignpagePagenumber int32, sComputedImageurl string) *EzsignpageResponseCompound {
	this := EzsignpageResponseCompound{}
	this.PkiEzsignpageID = pkiEzsignpageID
	this.IEzsignpageWidthimage = iEzsignpageWidthimage
	this.IEzsignpageHeightimage = iEzsignpageHeightimage
	this.IEzsignpageWidthpdf = iEzsignpageWidthpdf
	this.IEzsignpageHeightpdf = iEzsignpageHeightpdf
	this.IEzsignpagePagenumber = iEzsignpagePagenumber
	this.SComputedImageurl = sComputedImageurl
	return &this
}

// NewEzsignpageResponseCompoundWithDefaults instantiates a new EzsignpageResponseCompound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsignpageResponseCompoundWithDefaults() *EzsignpageResponseCompound {
	this := EzsignpageResponseCompound{}
	return &this
}

// GetPkiEzsignpageID returns the PkiEzsignpageID field value
func (o *EzsignpageResponseCompound) GetPkiEzsignpageID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PkiEzsignpageID
}

// GetPkiEzsignpageIDOk returns a tuple with the PkiEzsignpageID field value
// and a boolean to check if the value has been set.
func (o *EzsignpageResponseCompound) GetPkiEzsignpageIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkiEzsignpageID, true
}

// SetPkiEzsignpageID sets field value
func (o *EzsignpageResponseCompound) SetPkiEzsignpageID(v int32) {
	o.PkiEzsignpageID = v
}

// GetIEzsignpageWidthimage returns the IEzsignpageWidthimage field value
func (o *EzsignpageResponseCompound) GetIEzsignpageWidthimage() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IEzsignpageWidthimage
}

// GetIEzsignpageWidthimageOk returns a tuple with the IEzsignpageWidthimage field value
// and a boolean to check if the value has been set.
func (o *EzsignpageResponseCompound) GetIEzsignpageWidthimageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IEzsignpageWidthimage, true
}

// SetIEzsignpageWidthimage sets field value
func (o *EzsignpageResponseCompound) SetIEzsignpageWidthimage(v int32) {
	o.IEzsignpageWidthimage = v
}

// GetIEzsignpageHeightimage returns the IEzsignpageHeightimage field value
func (o *EzsignpageResponseCompound) GetIEzsignpageHeightimage() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IEzsignpageHeightimage
}

// GetIEzsignpageHeightimageOk returns a tuple with the IEzsignpageHeightimage field value
// and a boolean to check if the value has been set.
func (o *EzsignpageResponseCompound) GetIEzsignpageHeightimageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IEzsignpageHeightimage, true
}

// SetIEzsignpageHeightimage sets field value
func (o *EzsignpageResponseCompound) SetIEzsignpageHeightimage(v int32) {
	o.IEzsignpageHeightimage = v
}

// GetIEzsignpageWidthpdf returns the IEzsignpageWidthpdf field value
func (o *EzsignpageResponseCompound) GetIEzsignpageWidthpdf() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IEzsignpageWidthpdf
}

// GetIEzsignpageWidthpdfOk returns a tuple with the IEzsignpageWidthpdf field value
// and a boolean to check if the value has been set.
func (o *EzsignpageResponseCompound) GetIEzsignpageWidthpdfOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IEzsignpageWidthpdf, true
}

// SetIEzsignpageWidthpdf sets field value
func (o *EzsignpageResponseCompound) SetIEzsignpageWidthpdf(v int32) {
	o.IEzsignpageWidthpdf = v
}

// GetIEzsignpageHeightpdf returns the IEzsignpageHeightpdf field value
func (o *EzsignpageResponseCompound) GetIEzsignpageHeightpdf() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IEzsignpageHeightpdf
}

// GetIEzsignpageHeightpdfOk returns a tuple with the IEzsignpageHeightpdf field value
// and a boolean to check if the value has been set.
func (o *EzsignpageResponseCompound) GetIEzsignpageHeightpdfOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IEzsignpageHeightpdf, true
}

// SetIEzsignpageHeightpdf sets field value
func (o *EzsignpageResponseCompound) SetIEzsignpageHeightpdf(v int32) {
	o.IEzsignpageHeightpdf = v
}

// GetIEzsignpagePagenumber returns the IEzsignpagePagenumber field value
func (o *EzsignpageResponseCompound) GetIEzsignpagePagenumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IEzsignpagePagenumber
}

// GetIEzsignpagePagenumberOk returns a tuple with the IEzsignpagePagenumber field value
// and a boolean to check if the value has been set.
func (o *EzsignpageResponseCompound) GetIEzsignpagePagenumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IEzsignpagePagenumber, true
}

// SetIEzsignpagePagenumber sets field value
func (o *EzsignpageResponseCompound) SetIEzsignpagePagenumber(v int32) {
	o.IEzsignpagePagenumber = v
}

// GetSComputedImageurl returns the SComputedImageurl field value
func (o *EzsignpageResponseCompound) GetSComputedImageurl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SComputedImageurl
}

// GetSComputedImageurlOk returns a tuple with the SComputedImageurl field value
// and a boolean to check if the value has been set.
func (o *EzsignpageResponseCompound) GetSComputedImageurlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SComputedImageurl, true
}

// SetSComputedImageurl sets field value
func (o *EzsignpageResponseCompound) SetSComputedImageurl(v string) {
	o.SComputedImageurl = v
}

func (o EzsignpageResponseCompound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsignpageResponseCompound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pkiEzsignpageID"] = o.PkiEzsignpageID
	toSerialize["iEzsignpageWidthimage"] = o.IEzsignpageWidthimage
	toSerialize["iEzsignpageHeightimage"] = o.IEzsignpageHeightimage
	toSerialize["iEzsignpageWidthpdf"] = o.IEzsignpageWidthpdf
	toSerialize["iEzsignpageHeightpdf"] = o.IEzsignpageHeightpdf
	toSerialize["iEzsignpagePagenumber"] = o.IEzsignpagePagenumber
	toSerialize["sComputedImageurl"] = o.SComputedImageurl
	return toSerialize, nil
}

func (o *EzsignpageResponseCompound) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pkiEzsignpageID",
		"iEzsignpageWidthimage",
		"iEzsignpageHeightimage",
		"iEzsignpageWidthpdf",
		"iEzsignpageHeightpdf",
		"iEzsignpagePagenumber",
		"sComputedImageurl",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsignpageResponseCompound := _EzsignpageResponseCompound{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsignpageResponseCompound)

	if err != nil {
		return err
	}

	*o = EzsignpageResponseCompound(varEzsignpageResponseCompound)

	return err
}

type NullableEzsignpageResponseCompound struct {
	value *EzsignpageResponseCompound
	isSet bool
}

func (v NullableEzsignpageResponseCompound) Get() *EzsignpageResponseCompound {
	return v.value
}

func (v *NullableEzsignpageResponseCompound) Set(val *EzsignpageResponseCompound) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsignpageResponseCompound) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsignpageResponseCompound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsignpageResponseCompound(val *EzsignpageResponseCompound) *NullableEzsignpageResponseCompound {
	return &NullableEzsignpageResponseCompound{value: val, isSet: true}
}

func (v NullableEzsignpageResponseCompound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsignpageResponseCompound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


