/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.2
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzmaxinvoicinguserResponseCompound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzmaxinvoicinguserResponseCompound{}

// EzmaxinvoicinguserResponseCompound A Ezmaxinvoicinguser Object
type EzmaxinvoicinguserResponseCompound struct {
	// The unique ID of the Ezmaxinvoicinguser
	PkiEzmaxinvoicinguserID *int32 `json:"pkiEzmaxinvoicinguserID,omitempty"`
	// The unique ID of the Ezmaxinvoicing
	FkiEzmaxinvoicingID *int32 `json:"fkiEzmaxinvoicingID,omitempty"`
	// The unique ID of the Billingentityinternal.
	FkiBillingentityinternalID int32 `json:"fkiBillingentityinternalID"`
	// The description of the Billingentityinternal in the language of the requester
	SBillingentityinternalDescriptionX string `json:"sBillingentityinternalDescriptionX"`
	// The unique ID of the User
	FkiUserID int32 `json:"fkiUserID"`
	// The number of ezsign documents
	IEzmaxinvoicinguserEzsigndocument int32 `json:"iEzmaxinvoicinguserEzsigndocument"`
	// Whether there is an eZsign account
	BEzmaxinvoicinguserEzsignaccount bool `json:"bEzmaxinvoicinguserEzsignaccount"`
	// Whether it is billable for eZsign
	BEzmaxinvoicinguserBillableezsign bool `json:"bEzmaxinvoicinguserBillableezsign"`
	EEzmaxinvoicinguserVariationezsign FieldEEzmaxinvoicinguserVariationezsign `json:"eEzmaxinvoicinguserVariationezsign"`
	ObjContactName CustomContactNameResponse `json:"objContactName"`
}

type _EzmaxinvoicinguserResponseCompound EzmaxinvoicinguserResponseCompound

// NewEzmaxinvoicinguserResponseCompound instantiates a new EzmaxinvoicinguserResponseCompound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzmaxinvoicinguserResponseCompound(fkiBillingentityinternalID int32, sBillingentityinternalDescriptionX string, fkiUserID int32, iEzmaxinvoicinguserEzsigndocument int32, bEzmaxinvoicinguserEzsignaccount bool, bEzmaxinvoicinguserBillableezsign bool, eEzmaxinvoicinguserVariationezsign FieldEEzmaxinvoicinguserVariationezsign, objContactName CustomContactNameResponse) *EzmaxinvoicinguserResponseCompound {
	this := EzmaxinvoicinguserResponseCompound{}
	this.FkiBillingentityinternalID = fkiBillingentityinternalID
	this.SBillingentityinternalDescriptionX = sBillingentityinternalDescriptionX
	this.FkiUserID = fkiUserID
	this.IEzmaxinvoicinguserEzsigndocument = iEzmaxinvoicinguserEzsigndocument
	this.BEzmaxinvoicinguserEzsignaccount = bEzmaxinvoicinguserEzsignaccount
	this.BEzmaxinvoicinguserBillableezsign = bEzmaxinvoicinguserBillableezsign
	this.EEzmaxinvoicinguserVariationezsign = eEzmaxinvoicinguserVariationezsign
	this.ObjContactName = objContactName
	return &this
}

// NewEzmaxinvoicinguserResponseCompoundWithDefaults instantiates a new EzmaxinvoicinguserResponseCompound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzmaxinvoicinguserResponseCompoundWithDefaults() *EzmaxinvoicinguserResponseCompound {
	this := EzmaxinvoicinguserResponseCompound{}
	return &this
}

// GetPkiEzmaxinvoicinguserID returns the PkiEzmaxinvoicinguserID field value if set, zero value otherwise.
func (o *EzmaxinvoicinguserResponseCompound) GetPkiEzmaxinvoicinguserID() int32 {
	if o == nil || IsNil(o.PkiEzmaxinvoicinguserID) {
		var ret int32
		return ret
	}
	return *o.PkiEzmaxinvoicinguserID
}

// GetPkiEzmaxinvoicinguserIDOk returns a tuple with the PkiEzmaxinvoicinguserID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzmaxinvoicinguserResponseCompound) GetPkiEzmaxinvoicinguserIDOk() (*int32, bool) {
	if o == nil || IsNil(o.PkiEzmaxinvoicinguserID) {
		return nil, false
	}
	return o.PkiEzmaxinvoicinguserID, true
}

// HasPkiEzmaxinvoicinguserID returns a boolean if a field has been set.
func (o *EzmaxinvoicinguserResponseCompound) HasPkiEzmaxinvoicinguserID() bool {
	if o != nil && !IsNil(o.PkiEzmaxinvoicinguserID) {
		return true
	}

	return false
}

// SetPkiEzmaxinvoicinguserID gets a reference to the given int32 and assigns it to the PkiEzmaxinvoicinguserID field.
func (o *EzmaxinvoicinguserResponseCompound) SetPkiEzmaxinvoicinguserID(v int32) {
	o.PkiEzmaxinvoicinguserID = &v
}

// GetFkiEzmaxinvoicingID returns the FkiEzmaxinvoicingID field value if set, zero value otherwise.
func (o *EzmaxinvoicinguserResponseCompound) GetFkiEzmaxinvoicingID() int32 {
	if o == nil || IsNil(o.FkiEzmaxinvoicingID) {
		var ret int32
		return ret
	}
	return *o.FkiEzmaxinvoicingID
}

// GetFkiEzmaxinvoicingIDOk returns a tuple with the FkiEzmaxinvoicingID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzmaxinvoicinguserResponseCompound) GetFkiEzmaxinvoicingIDOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiEzmaxinvoicingID) {
		return nil, false
	}
	return o.FkiEzmaxinvoicingID, true
}

// HasFkiEzmaxinvoicingID returns a boolean if a field has been set.
func (o *EzmaxinvoicinguserResponseCompound) HasFkiEzmaxinvoicingID() bool {
	if o != nil && !IsNil(o.FkiEzmaxinvoicingID) {
		return true
	}

	return false
}

// SetFkiEzmaxinvoicingID gets a reference to the given int32 and assigns it to the FkiEzmaxinvoicingID field.
func (o *EzmaxinvoicinguserResponseCompound) SetFkiEzmaxinvoicingID(v int32) {
	o.FkiEzmaxinvoicingID = &v
}

// GetFkiBillingentityinternalID returns the FkiBillingentityinternalID field value
func (o *EzmaxinvoicinguserResponseCompound) GetFkiBillingentityinternalID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiBillingentityinternalID
}

// GetFkiBillingentityinternalIDOk returns a tuple with the FkiBillingentityinternalID field value
// and a boolean to check if the value has been set.
func (o *EzmaxinvoicinguserResponseCompound) GetFkiBillingentityinternalIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiBillingentityinternalID, true
}

// SetFkiBillingentityinternalID sets field value
func (o *EzmaxinvoicinguserResponseCompound) SetFkiBillingentityinternalID(v int32) {
	o.FkiBillingentityinternalID = v
}

// GetSBillingentityinternalDescriptionX returns the SBillingentityinternalDescriptionX field value
func (o *EzmaxinvoicinguserResponseCompound) GetSBillingentityinternalDescriptionX() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SBillingentityinternalDescriptionX
}

// GetSBillingentityinternalDescriptionXOk returns a tuple with the SBillingentityinternalDescriptionX field value
// and a boolean to check if the value has been set.
func (o *EzmaxinvoicinguserResponseCompound) GetSBillingentityinternalDescriptionXOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SBillingentityinternalDescriptionX, true
}

// SetSBillingentityinternalDescriptionX sets field value
func (o *EzmaxinvoicinguserResponseCompound) SetSBillingentityinternalDescriptionX(v string) {
	o.SBillingentityinternalDescriptionX = v
}

// GetFkiUserID returns the FkiUserID field value
func (o *EzmaxinvoicinguserResponseCompound) GetFkiUserID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiUserID
}

// GetFkiUserIDOk returns a tuple with the FkiUserID field value
// and a boolean to check if the value has been set.
func (o *EzmaxinvoicinguserResponseCompound) GetFkiUserIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiUserID, true
}

// SetFkiUserID sets field value
func (o *EzmaxinvoicinguserResponseCompound) SetFkiUserID(v int32) {
	o.FkiUserID = v
}

// GetIEzmaxinvoicinguserEzsigndocument returns the IEzmaxinvoicinguserEzsigndocument field value
func (o *EzmaxinvoicinguserResponseCompound) GetIEzmaxinvoicinguserEzsigndocument() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IEzmaxinvoicinguserEzsigndocument
}

// GetIEzmaxinvoicinguserEzsigndocumentOk returns a tuple with the IEzmaxinvoicinguserEzsigndocument field value
// and a boolean to check if the value has been set.
func (o *EzmaxinvoicinguserResponseCompound) GetIEzmaxinvoicinguserEzsigndocumentOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IEzmaxinvoicinguserEzsigndocument, true
}

// SetIEzmaxinvoicinguserEzsigndocument sets field value
func (o *EzmaxinvoicinguserResponseCompound) SetIEzmaxinvoicinguserEzsigndocument(v int32) {
	o.IEzmaxinvoicinguserEzsigndocument = v
}

// GetBEzmaxinvoicinguserEzsignaccount returns the BEzmaxinvoicinguserEzsignaccount field value
func (o *EzmaxinvoicinguserResponseCompound) GetBEzmaxinvoicinguserEzsignaccount() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BEzmaxinvoicinguserEzsignaccount
}

// GetBEzmaxinvoicinguserEzsignaccountOk returns a tuple with the BEzmaxinvoicinguserEzsignaccount field value
// and a boolean to check if the value has been set.
func (o *EzmaxinvoicinguserResponseCompound) GetBEzmaxinvoicinguserEzsignaccountOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BEzmaxinvoicinguserEzsignaccount, true
}

// SetBEzmaxinvoicinguserEzsignaccount sets field value
func (o *EzmaxinvoicinguserResponseCompound) SetBEzmaxinvoicinguserEzsignaccount(v bool) {
	o.BEzmaxinvoicinguserEzsignaccount = v
}

// GetBEzmaxinvoicinguserBillableezsign returns the BEzmaxinvoicinguserBillableezsign field value
func (o *EzmaxinvoicinguserResponseCompound) GetBEzmaxinvoicinguserBillableezsign() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BEzmaxinvoicinguserBillableezsign
}

// GetBEzmaxinvoicinguserBillableezsignOk returns a tuple with the BEzmaxinvoicinguserBillableezsign field value
// and a boolean to check if the value has been set.
func (o *EzmaxinvoicinguserResponseCompound) GetBEzmaxinvoicinguserBillableezsignOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BEzmaxinvoicinguserBillableezsign, true
}

// SetBEzmaxinvoicinguserBillableezsign sets field value
func (o *EzmaxinvoicinguserResponseCompound) SetBEzmaxinvoicinguserBillableezsign(v bool) {
	o.BEzmaxinvoicinguserBillableezsign = v
}

// GetEEzmaxinvoicinguserVariationezsign returns the EEzmaxinvoicinguserVariationezsign field value
func (o *EzmaxinvoicinguserResponseCompound) GetEEzmaxinvoicinguserVariationezsign() FieldEEzmaxinvoicinguserVariationezsign {
	if o == nil {
		var ret FieldEEzmaxinvoicinguserVariationezsign
		return ret
	}

	return o.EEzmaxinvoicinguserVariationezsign
}

// GetEEzmaxinvoicinguserVariationezsignOk returns a tuple with the EEzmaxinvoicinguserVariationezsign field value
// and a boolean to check if the value has been set.
func (o *EzmaxinvoicinguserResponseCompound) GetEEzmaxinvoicinguserVariationezsignOk() (*FieldEEzmaxinvoicinguserVariationezsign, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EEzmaxinvoicinguserVariationezsign, true
}

// SetEEzmaxinvoicinguserVariationezsign sets field value
func (o *EzmaxinvoicinguserResponseCompound) SetEEzmaxinvoicinguserVariationezsign(v FieldEEzmaxinvoicinguserVariationezsign) {
	o.EEzmaxinvoicinguserVariationezsign = v
}

// GetObjContactName returns the ObjContactName field value
func (o *EzmaxinvoicinguserResponseCompound) GetObjContactName() CustomContactNameResponse {
	if o == nil {
		var ret CustomContactNameResponse
		return ret
	}

	return o.ObjContactName
}

// GetObjContactNameOk returns a tuple with the ObjContactName field value
// and a boolean to check if the value has been set.
func (o *EzmaxinvoicinguserResponseCompound) GetObjContactNameOk() (*CustomContactNameResponse, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjContactName, true
}

// SetObjContactName sets field value
func (o *EzmaxinvoicinguserResponseCompound) SetObjContactName(v CustomContactNameResponse) {
	o.ObjContactName = v
}

func (o EzmaxinvoicinguserResponseCompound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzmaxinvoicinguserResponseCompound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PkiEzmaxinvoicinguserID) {
		toSerialize["pkiEzmaxinvoicinguserID"] = o.PkiEzmaxinvoicinguserID
	}
	if !IsNil(o.FkiEzmaxinvoicingID) {
		toSerialize["fkiEzmaxinvoicingID"] = o.FkiEzmaxinvoicingID
	}
	toSerialize["fkiBillingentityinternalID"] = o.FkiBillingentityinternalID
	toSerialize["sBillingentityinternalDescriptionX"] = o.SBillingentityinternalDescriptionX
	toSerialize["fkiUserID"] = o.FkiUserID
	toSerialize["iEzmaxinvoicinguserEzsigndocument"] = o.IEzmaxinvoicinguserEzsigndocument
	toSerialize["bEzmaxinvoicinguserEzsignaccount"] = o.BEzmaxinvoicinguserEzsignaccount
	toSerialize["bEzmaxinvoicinguserBillableezsign"] = o.BEzmaxinvoicinguserBillableezsign
	toSerialize["eEzmaxinvoicinguserVariationezsign"] = o.EEzmaxinvoicinguserVariationezsign
	toSerialize["objContactName"] = o.ObjContactName
	return toSerialize, nil
}

func (o *EzmaxinvoicinguserResponseCompound) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"fkiBillingentityinternalID",
		"sBillingentityinternalDescriptionX",
		"fkiUserID",
		"iEzmaxinvoicinguserEzsigndocument",
		"bEzmaxinvoicinguserEzsignaccount",
		"bEzmaxinvoicinguserBillableezsign",
		"eEzmaxinvoicinguserVariationezsign",
		"objContactName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzmaxinvoicinguserResponseCompound := _EzmaxinvoicinguserResponseCompound{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzmaxinvoicinguserResponseCompound)

	if err != nil {
		return err
	}

	*o = EzmaxinvoicinguserResponseCompound(varEzmaxinvoicinguserResponseCompound)

	return err
}

type NullableEzmaxinvoicinguserResponseCompound struct {
	value *EzmaxinvoicinguserResponseCompound
	isSet bool
}

func (v NullableEzmaxinvoicinguserResponseCompound) Get() *EzmaxinvoicinguserResponseCompound {
	return v.value
}

func (v *NullableEzmaxinvoicinguserResponseCompound) Set(val *EzmaxinvoicinguserResponseCompound) {
	v.value = val
	v.isSet = true
}

func (v NullableEzmaxinvoicinguserResponseCompound) IsSet() bool {
	return v.isSet
}

func (v *NullableEzmaxinvoicinguserResponseCompound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzmaxinvoicinguserResponseCompound(val *EzmaxinvoicinguserResponseCompound) *NullableEzmaxinvoicinguserResponseCompound {
	return &NullableEzmaxinvoicinguserResponseCompound{value: val, isSet: true}
}

func (v NullableEzmaxinvoicinguserResponseCompound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzmaxinvoicinguserResponseCompound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


