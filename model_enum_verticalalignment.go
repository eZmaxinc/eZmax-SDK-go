/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"fmt"
)

// EnumVerticalalignment The Vertical alignment
type EnumVerticalalignment string

// List of Enum-Verticalalignment
const (
	BOTTOM EnumVerticalalignment = "Bottom"
	MIDDLE EnumVerticalalignment = "Middle"
	TOP EnumVerticalalignment = "Top"
)

// All allowed values of EnumVerticalalignment enum
var AllowedEnumVerticalalignmentEnumValues = []EnumVerticalalignment{
	"Bottom",
	"Middle",
	"Top",
}

func (v *EnumVerticalalignment) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumVerticalalignment(value)
	for _, existing := range AllowedEnumVerticalalignmentEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumVerticalalignment", value)
}

// NewEnumVerticalalignmentFromValue returns a pointer to a valid EnumVerticalalignment
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumVerticalalignmentFromValue(v string) (*EnumVerticalalignment, error) {
	ev := EnumVerticalalignment(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumVerticalalignment: valid values are %v", v, AllowedEnumVerticalalignmentEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumVerticalalignment) IsValid() bool {
	for _, existing := range AllowedEnumVerticalalignmentEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enum-Verticalalignment value
func (v EnumVerticalalignment) Ptr() *EnumVerticalalignment {
	return &v
}

type NullableEnumVerticalalignment struct {
	value *EnumVerticalalignment
	isSet bool
}

func (v NullableEnumVerticalalignment) Get() *EnumVerticalalignment {
	return v.value
}

func (v *NullableEnumVerticalalignment) Set(val *EnumVerticalalignment) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumVerticalalignment) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumVerticalalignment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumVerticalalignment(val *EnumVerticalalignment) *NullableEnumVerticalalignment {
	return &NullableEnumVerticalalignment{value: val, isSet: true}
}

func (v NullableEnumVerticalalignment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumVerticalalignment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

