/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.2
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// checks if the MultilingualEzsignfoldertypeName type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultilingualEzsignfoldertypeName{}

// MultilingualEzsignfoldertypeName Name of the Ezsignfoldertype
type MultilingualEzsignfoldertypeName struct {
	// The name of the Ezsignfoldertype in French
	SEzsignfoldertypeName1 *string `json:"sEzsignfoldertypeName1,omitempty"`
	// The name of the Ezsignfoldertype in English
	SEzsignfoldertypeName2 *string `json:"sEzsignfoldertypeName2,omitempty"`
}

// NewMultilingualEzsignfoldertypeName instantiates a new MultilingualEzsignfoldertypeName object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultilingualEzsignfoldertypeName() *MultilingualEzsignfoldertypeName {
	this := MultilingualEzsignfoldertypeName{}
	return &this
}

// NewMultilingualEzsignfoldertypeNameWithDefaults instantiates a new MultilingualEzsignfoldertypeName object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultilingualEzsignfoldertypeNameWithDefaults() *MultilingualEzsignfoldertypeName {
	this := MultilingualEzsignfoldertypeName{}
	return &this
}

// GetSEzsignfoldertypeName1 returns the SEzsignfoldertypeName1 field value if set, zero value otherwise.
func (o *MultilingualEzsignfoldertypeName) GetSEzsignfoldertypeName1() string {
	if o == nil || IsNil(o.SEzsignfoldertypeName1) {
		var ret string
		return ret
	}
	return *o.SEzsignfoldertypeName1
}

// GetSEzsignfoldertypeName1Ok returns a tuple with the SEzsignfoldertypeName1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultilingualEzsignfoldertypeName) GetSEzsignfoldertypeName1Ok() (*string, bool) {
	if o == nil || IsNil(o.SEzsignfoldertypeName1) {
		return nil, false
	}
	return o.SEzsignfoldertypeName1, true
}

// HasSEzsignfoldertypeName1 returns a boolean if a field has been set.
func (o *MultilingualEzsignfoldertypeName) HasSEzsignfoldertypeName1() bool {
	if o != nil && !IsNil(o.SEzsignfoldertypeName1) {
		return true
	}

	return false
}

// SetSEzsignfoldertypeName1 gets a reference to the given string and assigns it to the SEzsignfoldertypeName1 field.
func (o *MultilingualEzsignfoldertypeName) SetSEzsignfoldertypeName1(v string) {
	o.SEzsignfoldertypeName1 = &v
}

// GetSEzsignfoldertypeName2 returns the SEzsignfoldertypeName2 field value if set, zero value otherwise.
func (o *MultilingualEzsignfoldertypeName) GetSEzsignfoldertypeName2() string {
	if o == nil || IsNil(o.SEzsignfoldertypeName2) {
		var ret string
		return ret
	}
	return *o.SEzsignfoldertypeName2
}

// GetSEzsignfoldertypeName2Ok returns a tuple with the SEzsignfoldertypeName2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultilingualEzsignfoldertypeName) GetSEzsignfoldertypeName2Ok() (*string, bool) {
	if o == nil || IsNil(o.SEzsignfoldertypeName2) {
		return nil, false
	}
	return o.SEzsignfoldertypeName2, true
}

// HasSEzsignfoldertypeName2 returns a boolean if a field has been set.
func (o *MultilingualEzsignfoldertypeName) HasSEzsignfoldertypeName2() bool {
	if o != nil && !IsNil(o.SEzsignfoldertypeName2) {
		return true
	}

	return false
}

// SetSEzsignfoldertypeName2 gets a reference to the given string and assigns it to the SEzsignfoldertypeName2 field.
func (o *MultilingualEzsignfoldertypeName) SetSEzsignfoldertypeName2(v string) {
	o.SEzsignfoldertypeName2 = &v
}

func (o MultilingualEzsignfoldertypeName) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultilingualEzsignfoldertypeName) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SEzsignfoldertypeName1) {
		toSerialize["sEzsignfoldertypeName1"] = o.SEzsignfoldertypeName1
	}
	if !IsNil(o.SEzsignfoldertypeName2) {
		toSerialize["sEzsignfoldertypeName2"] = o.SEzsignfoldertypeName2
	}
	return toSerialize, nil
}

type NullableMultilingualEzsignfoldertypeName struct {
	value *MultilingualEzsignfoldertypeName
	isSet bool
}

func (v NullableMultilingualEzsignfoldertypeName) Get() *MultilingualEzsignfoldertypeName {
	return v.value
}

func (v *NullableMultilingualEzsignfoldertypeName) Set(val *MultilingualEzsignfoldertypeName) {
	v.value = val
	v.isSet = true
}

func (v NullableMultilingualEzsignfoldertypeName) IsSet() bool {
	return v.isSet
}

func (v *NullableMultilingualEzsignfoldertypeName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultilingualEzsignfoldertypeName(val *MultilingualEzsignfoldertypeName) *NullableMultilingualEzsignfoldertypeName {
	return &NullableMultilingualEzsignfoldertypeName{value: val, isSet: true}
}

func (v NullableMultilingualEzsignfoldertypeName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultilingualEzsignfoldertypeName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


