/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WebhookRequestCompound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookRequestCompound{}

// WebhookRequestCompound A Webhook Object and children
type WebhookRequestCompound struct {
	WebhookRequest
	AObjWebhookheader []WebhookheaderRequestCompound `json:"a_objWebhookheader,omitempty"`
}

type _WebhookRequestCompound WebhookRequestCompound

// NewWebhookRequestCompound instantiates a new WebhookRequestCompound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookRequestCompound(sWebhookDescription string, eWebhookModule FieldEWebhookModule, sWebhookUrl string, sWebhookEmailfailed string, bWebhookIsactive bool, bWebhookSkipsslvalidation bool) *WebhookRequestCompound {
	this := WebhookRequestCompound{}
	this.SWebhookDescription = sWebhookDescription
	this.EWebhookModule = eWebhookModule
	this.SWebhookUrl = sWebhookUrl
	this.SWebhookEmailfailed = sWebhookEmailfailed
	this.BWebhookIsactive = bWebhookIsactive
	this.BWebhookSkipsslvalidation = bWebhookSkipsslvalidation
	return &this
}

// NewWebhookRequestCompoundWithDefaults instantiates a new WebhookRequestCompound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookRequestCompoundWithDefaults() *WebhookRequestCompound {
	this := WebhookRequestCompound{}
	return &this
}

// GetAObjWebhookheader returns the AObjWebhookheader field value if set, zero value otherwise.
func (o *WebhookRequestCompound) GetAObjWebhookheader() []WebhookheaderRequestCompound {
	if o == nil || IsNil(o.AObjWebhookheader) {
		var ret []WebhookheaderRequestCompound
		return ret
	}
	return o.AObjWebhookheader
}

// GetAObjWebhookheaderOk returns a tuple with the AObjWebhookheader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookRequestCompound) GetAObjWebhookheaderOk() ([]WebhookheaderRequestCompound, bool) {
	if o == nil || IsNil(o.AObjWebhookheader) {
		return nil, false
	}
	return o.AObjWebhookheader, true
}

// HasAObjWebhookheader returns a boolean if a field has been set.
func (o *WebhookRequestCompound) HasAObjWebhookheader() bool {
	if o != nil && !IsNil(o.AObjWebhookheader) {
		return true
	}

	return false
}

// SetAObjWebhookheader gets a reference to the given []WebhookheaderRequestCompound and assigns it to the AObjWebhookheader field.
func (o *WebhookRequestCompound) SetAObjWebhookheader(v []WebhookheaderRequestCompound) {
	o.AObjWebhookheader = v
}

func (o WebhookRequestCompound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookRequestCompound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AObjWebhookheader) {
		toSerialize["a_objWebhookheader"] = o.AObjWebhookheader
	}
	return toSerialize, nil
}

func (o *WebhookRequestCompound) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sWebhookDescription",
		"eWebhookModule",
		"sWebhookUrl",
		"sWebhookEmailfailed",
		"bWebhookIsactive",
		"bWebhookSkipsslvalidation",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebhookRequestCompound := _WebhookRequestCompound{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWebhookRequestCompound)

	if err != nil {
		return err
	}

	*o = WebhookRequestCompound(varWebhookRequestCompound)

	return err
}

type NullableWebhookRequestCompound struct {
	value *WebhookRequestCompound
	isSet bool
}

func (v NullableWebhookRequestCompound) Get() *WebhookRequestCompound {
	return v.value
}

func (v *NullableWebhookRequestCompound) Set(val *WebhookRequestCompound) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookRequestCompound) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookRequestCompound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookRequestCompound(val *WebhookRequestCompound) *NullableWebhookRequestCompound {
	return &NullableWebhookRequestCompound{value: val, isSet: true}
}

func (v NullableWebhookRequestCompound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookRequestCompound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


