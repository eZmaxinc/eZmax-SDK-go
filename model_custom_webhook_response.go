/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// checks if the CustomWebhookResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomWebhookResponse{}

// CustomWebhookResponse A custom Webhook object
type CustomWebhookResponse struct {
	// The unique ID of the Webhook
	PkiWebhookID int32 `json:"pkiWebhookID"`
	// The description of the Webhook
	SWebhookDescription string `json:"sWebhookDescription"`
	// The unique ID of the Ezsignfoldertype.
	FkiEzsignfoldertypeID *int32 `json:"fkiEzsignfoldertypeID,omitempty"`
	// The name of the Ezsignfoldertype in the language of the requester
	SEzsignfoldertypeNameX *string `json:"sEzsignfoldertypeNameX,omitempty"`
	EWebhookModule FieldEWebhookModule `json:"eWebhookModule"`
	EWebhookEzsignevent *FieldEWebhookEzsignevent `json:"eWebhookEzsignevent,omitempty"`
	EWebhookManagementevent *FieldEWebhookManagementevent `json:"eWebhookManagementevent,omitempty"`
	// The URL of the Webhook callback
	SWebhookUrl string `json:"sWebhookUrl"`
	// The email that will receive the Webhook in case all attempts fail
	SWebhookEmailfailed string `json:"sWebhookEmailfailed"`
	// Whether the Webhook is active or not
	BWebhookIsactive bool `json:"bWebhookIsactive"`
	// Wheter the server's SSL certificate should be validated or not. Not recommended to skip for production use
	BWebhookSkipsslvalidation bool `json:"bWebhookSkipsslvalidation"`
	// The customer code assigned to your account
	PksCustomerCode string `json:"pksCustomerCode"`
	// Wheter the webhook received is a manual test or a real event
	BWebhookTest bool `json:"bWebhookTest"`
}

// NewCustomWebhookResponse instantiates a new CustomWebhookResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomWebhookResponse(pkiWebhookID int32, sWebhookDescription string, eWebhookModule FieldEWebhookModule, sWebhookUrl string, sWebhookEmailfailed string, bWebhookIsactive bool, bWebhookSkipsslvalidation bool, pksCustomerCode string, bWebhookTest bool) *CustomWebhookResponse {
	this := CustomWebhookResponse{}
	this.PkiWebhookID = pkiWebhookID
	this.SWebhookDescription = sWebhookDescription
	this.EWebhookModule = eWebhookModule
	this.SWebhookUrl = sWebhookUrl
	this.SWebhookEmailfailed = sWebhookEmailfailed
	this.BWebhookIsactive = bWebhookIsactive
	this.BWebhookSkipsslvalidation = bWebhookSkipsslvalidation
	this.PksCustomerCode = pksCustomerCode
	this.BWebhookTest = bWebhookTest
	return &this
}

// NewCustomWebhookResponseWithDefaults instantiates a new CustomWebhookResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomWebhookResponseWithDefaults() *CustomWebhookResponse {
	this := CustomWebhookResponse{}
	return &this
}

// GetPkiWebhookID returns the PkiWebhookID field value
func (o *CustomWebhookResponse) GetPkiWebhookID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PkiWebhookID
}

// GetPkiWebhookIDOk returns a tuple with the PkiWebhookID field value
// and a boolean to check if the value has been set.
func (o *CustomWebhookResponse) GetPkiWebhookIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkiWebhookID, true
}

// SetPkiWebhookID sets field value
func (o *CustomWebhookResponse) SetPkiWebhookID(v int32) {
	o.PkiWebhookID = v
}

// GetSWebhookDescription returns the SWebhookDescription field value
func (o *CustomWebhookResponse) GetSWebhookDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SWebhookDescription
}

// GetSWebhookDescriptionOk returns a tuple with the SWebhookDescription field value
// and a boolean to check if the value has been set.
func (o *CustomWebhookResponse) GetSWebhookDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SWebhookDescription, true
}

// SetSWebhookDescription sets field value
func (o *CustomWebhookResponse) SetSWebhookDescription(v string) {
	o.SWebhookDescription = v
}

// GetFkiEzsignfoldertypeID returns the FkiEzsignfoldertypeID field value if set, zero value otherwise.
func (o *CustomWebhookResponse) GetFkiEzsignfoldertypeID() int32 {
	if o == nil || IsNil(o.FkiEzsignfoldertypeID) {
		var ret int32
		return ret
	}
	return *o.FkiEzsignfoldertypeID
}

// GetFkiEzsignfoldertypeIDOk returns a tuple with the FkiEzsignfoldertypeID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomWebhookResponse) GetFkiEzsignfoldertypeIDOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiEzsignfoldertypeID) {
		return nil, false
	}
	return o.FkiEzsignfoldertypeID, true
}

// HasFkiEzsignfoldertypeID returns a boolean if a field has been set.
func (o *CustomWebhookResponse) HasFkiEzsignfoldertypeID() bool {
	if o != nil && !IsNil(o.FkiEzsignfoldertypeID) {
		return true
	}

	return false
}

// SetFkiEzsignfoldertypeID gets a reference to the given int32 and assigns it to the FkiEzsignfoldertypeID field.
func (o *CustomWebhookResponse) SetFkiEzsignfoldertypeID(v int32) {
	o.FkiEzsignfoldertypeID = &v
}

// GetSEzsignfoldertypeNameX returns the SEzsignfoldertypeNameX field value if set, zero value otherwise.
func (o *CustomWebhookResponse) GetSEzsignfoldertypeNameX() string {
	if o == nil || IsNil(o.SEzsignfoldertypeNameX) {
		var ret string
		return ret
	}
	return *o.SEzsignfoldertypeNameX
}

// GetSEzsignfoldertypeNameXOk returns a tuple with the SEzsignfoldertypeNameX field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomWebhookResponse) GetSEzsignfoldertypeNameXOk() (*string, bool) {
	if o == nil || IsNil(o.SEzsignfoldertypeNameX) {
		return nil, false
	}
	return o.SEzsignfoldertypeNameX, true
}

// HasSEzsignfoldertypeNameX returns a boolean if a field has been set.
func (o *CustomWebhookResponse) HasSEzsignfoldertypeNameX() bool {
	if o != nil && !IsNil(o.SEzsignfoldertypeNameX) {
		return true
	}

	return false
}

// SetSEzsignfoldertypeNameX gets a reference to the given string and assigns it to the SEzsignfoldertypeNameX field.
func (o *CustomWebhookResponse) SetSEzsignfoldertypeNameX(v string) {
	o.SEzsignfoldertypeNameX = &v
}

// GetEWebhookModule returns the EWebhookModule field value
func (o *CustomWebhookResponse) GetEWebhookModule() FieldEWebhookModule {
	if o == nil {
		var ret FieldEWebhookModule
		return ret
	}

	return o.EWebhookModule
}

// GetEWebhookModuleOk returns a tuple with the EWebhookModule field value
// and a boolean to check if the value has been set.
func (o *CustomWebhookResponse) GetEWebhookModuleOk() (*FieldEWebhookModule, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EWebhookModule, true
}

// SetEWebhookModule sets field value
func (o *CustomWebhookResponse) SetEWebhookModule(v FieldEWebhookModule) {
	o.EWebhookModule = v
}

// GetEWebhookEzsignevent returns the EWebhookEzsignevent field value if set, zero value otherwise.
func (o *CustomWebhookResponse) GetEWebhookEzsignevent() FieldEWebhookEzsignevent {
	if o == nil || IsNil(o.EWebhookEzsignevent) {
		var ret FieldEWebhookEzsignevent
		return ret
	}
	return *o.EWebhookEzsignevent
}

// GetEWebhookEzsigneventOk returns a tuple with the EWebhookEzsignevent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomWebhookResponse) GetEWebhookEzsigneventOk() (*FieldEWebhookEzsignevent, bool) {
	if o == nil || IsNil(o.EWebhookEzsignevent) {
		return nil, false
	}
	return o.EWebhookEzsignevent, true
}

// HasEWebhookEzsignevent returns a boolean if a field has been set.
func (o *CustomWebhookResponse) HasEWebhookEzsignevent() bool {
	if o != nil && !IsNil(o.EWebhookEzsignevent) {
		return true
	}

	return false
}

// SetEWebhookEzsignevent gets a reference to the given FieldEWebhookEzsignevent and assigns it to the EWebhookEzsignevent field.
func (o *CustomWebhookResponse) SetEWebhookEzsignevent(v FieldEWebhookEzsignevent) {
	o.EWebhookEzsignevent = &v
}

// GetEWebhookManagementevent returns the EWebhookManagementevent field value if set, zero value otherwise.
func (o *CustomWebhookResponse) GetEWebhookManagementevent() FieldEWebhookManagementevent {
	if o == nil || IsNil(o.EWebhookManagementevent) {
		var ret FieldEWebhookManagementevent
		return ret
	}
	return *o.EWebhookManagementevent
}

// GetEWebhookManagementeventOk returns a tuple with the EWebhookManagementevent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomWebhookResponse) GetEWebhookManagementeventOk() (*FieldEWebhookManagementevent, bool) {
	if o == nil || IsNil(o.EWebhookManagementevent) {
		return nil, false
	}
	return o.EWebhookManagementevent, true
}

// HasEWebhookManagementevent returns a boolean if a field has been set.
func (o *CustomWebhookResponse) HasEWebhookManagementevent() bool {
	if o != nil && !IsNil(o.EWebhookManagementevent) {
		return true
	}

	return false
}

// SetEWebhookManagementevent gets a reference to the given FieldEWebhookManagementevent and assigns it to the EWebhookManagementevent field.
func (o *CustomWebhookResponse) SetEWebhookManagementevent(v FieldEWebhookManagementevent) {
	o.EWebhookManagementevent = &v
}

// GetSWebhookUrl returns the SWebhookUrl field value
func (o *CustomWebhookResponse) GetSWebhookUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SWebhookUrl
}

// GetSWebhookUrlOk returns a tuple with the SWebhookUrl field value
// and a boolean to check if the value has been set.
func (o *CustomWebhookResponse) GetSWebhookUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SWebhookUrl, true
}

// SetSWebhookUrl sets field value
func (o *CustomWebhookResponse) SetSWebhookUrl(v string) {
	o.SWebhookUrl = v
}

// GetSWebhookEmailfailed returns the SWebhookEmailfailed field value
func (o *CustomWebhookResponse) GetSWebhookEmailfailed() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SWebhookEmailfailed
}

// GetSWebhookEmailfailedOk returns a tuple with the SWebhookEmailfailed field value
// and a boolean to check if the value has been set.
func (o *CustomWebhookResponse) GetSWebhookEmailfailedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SWebhookEmailfailed, true
}

// SetSWebhookEmailfailed sets field value
func (o *CustomWebhookResponse) SetSWebhookEmailfailed(v string) {
	o.SWebhookEmailfailed = v
}

// GetBWebhookIsactive returns the BWebhookIsactive field value
func (o *CustomWebhookResponse) GetBWebhookIsactive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BWebhookIsactive
}

// GetBWebhookIsactiveOk returns a tuple with the BWebhookIsactive field value
// and a boolean to check if the value has been set.
func (o *CustomWebhookResponse) GetBWebhookIsactiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BWebhookIsactive, true
}

// SetBWebhookIsactive sets field value
func (o *CustomWebhookResponse) SetBWebhookIsactive(v bool) {
	o.BWebhookIsactive = v
}

// GetBWebhookSkipsslvalidation returns the BWebhookSkipsslvalidation field value
func (o *CustomWebhookResponse) GetBWebhookSkipsslvalidation() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BWebhookSkipsslvalidation
}

// GetBWebhookSkipsslvalidationOk returns a tuple with the BWebhookSkipsslvalidation field value
// and a boolean to check if the value has been set.
func (o *CustomWebhookResponse) GetBWebhookSkipsslvalidationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BWebhookSkipsslvalidation, true
}

// SetBWebhookSkipsslvalidation sets field value
func (o *CustomWebhookResponse) SetBWebhookSkipsslvalidation(v bool) {
	o.BWebhookSkipsslvalidation = v
}

// GetPksCustomerCode returns the PksCustomerCode field value
func (o *CustomWebhookResponse) GetPksCustomerCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PksCustomerCode
}

// GetPksCustomerCodeOk returns a tuple with the PksCustomerCode field value
// and a boolean to check if the value has been set.
func (o *CustomWebhookResponse) GetPksCustomerCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PksCustomerCode, true
}

// SetPksCustomerCode sets field value
func (o *CustomWebhookResponse) SetPksCustomerCode(v string) {
	o.PksCustomerCode = v
}

// GetBWebhookTest returns the BWebhookTest field value
func (o *CustomWebhookResponse) GetBWebhookTest() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BWebhookTest
}

// GetBWebhookTestOk returns a tuple with the BWebhookTest field value
// and a boolean to check if the value has been set.
func (o *CustomWebhookResponse) GetBWebhookTestOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BWebhookTest, true
}

// SetBWebhookTest sets field value
func (o *CustomWebhookResponse) SetBWebhookTest(v bool) {
	o.BWebhookTest = v
}

func (o CustomWebhookResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomWebhookResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pkiWebhookID"] = o.PkiWebhookID
	toSerialize["sWebhookDescription"] = o.SWebhookDescription
	if !IsNil(o.FkiEzsignfoldertypeID) {
		toSerialize["fkiEzsignfoldertypeID"] = o.FkiEzsignfoldertypeID
	}
	if !IsNil(o.SEzsignfoldertypeNameX) {
		toSerialize["sEzsignfoldertypeNameX"] = o.SEzsignfoldertypeNameX
	}
	toSerialize["eWebhookModule"] = o.EWebhookModule
	if !IsNil(o.EWebhookEzsignevent) {
		toSerialize["eWebhookEzsignevent"] = o.EWebhookEzsignevent
	}
	if !IsNil(o.EWebhookManagementevent) {
		toSerialize["eWebhookManagementevent"] = o.EWebhookManagementevent
	}
	toSerialize["sWebhookUrl"] = o.SWebhookUrl
	toSerialize["sWebhookEmailfailed"] = o.SWebhookEmailfailed
	toSerialize["bWebhookIsactive"] = o.BWebhookIsactive
	toSerialize["bWebhookSkipsslvalidation"] = o.BWebhookSkipsslvalidation
	toSerialize["pksCustomerCode"] = o.PksCustomerCode
	toSerialize["bWebhookTest"] = o.BWebhookTest
	return toSerialize, nil
}

type NullableCustomWebhookResponse struct {
	value *CustomWebhookResponse
	isSet bool
}

func (v NullableCustomWebhookResponse) Get() *CustomWebhookResponse {
	return v.value
}

func (v *NullableCustomWebhookResponse) Set(val *CustomWebhookResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomWebhookResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomWebhookResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomWebhookResponse(val *CustomWebhookResponse) *NullableCustomWebhookResponse {
	return &NullableCustomWebhookResponse{value: val, isSet: true}
}

func (v NullableCustomWebhookResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomWebhookResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


