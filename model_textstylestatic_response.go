/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TextstylestaticResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TextstylestaticResponse{}

// TextstylestaticResponse A Textstylestatic Object
type TextstylestaticResponse struct {
	// The unique ID of the Textstylestatic
	PkiTextstylestaticID *int32 `json:"pkiTextstylestaticID,omitempty"`
	// The unique ID of the Font
	FkiFontID int32 `json:"fkiFontID"`
	// Whether the Textstylestatic is Bold or not
	BTextstylestaticBold bool `json:"bTextstylestaticBold"`
	// Whether the Textstylestatic is Underline or not
	BTextstylestaticUnderline bool `json:"bTextstylestaticUnderline"`
	// Whether the Textstylestatic is Italic or not
	BTextstylestaticItalic bool `json:"bTextstylestaticItalic"`
	// Whether the Textstylestatic is Strikethrough or not
	BTextstylestaticStrikethrough bool `json:"bTextstylestaticStrikethrough"`
	// The int32 representation of the Fontcolor. For example, RGB color #39435B would be 3752795
	ITextstylestaticFontcolor int32 `json:"iTextstylestaticFontcolor"`
	// The Size for the Font of the Textstylestatic
	ITextstylestaticSize int32 `json:"iTextstylestaticSize"`
}

type _TextstylestaticResponse TextstylestaticResponse

// NewTextstylestaticResponse instantiates a new TextstylestaticResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTextstylestaticResponse(fkiFontID int32, bTextstylestaticBold bool, bTextstylestaticUnderline bool, bTextstylestaticItalic bool, bTextstylestaticStrikethrough bool, iTextstylestaticFontcolor int32, iTextstylestaticSize int32) *TextstylestaticResponse {
	this := TextstylestaticResponse{}
	this.FkiFontID = fkiFontID
	this.BTextstylestaticBold = bTextstylestaticBold
	this.BTextstylestaticUnderline = bTextstylestaticUnderline
	this.BTextstylestaticItalic = bTextstylestaticItalic
	this.BTextstylestaticStrikethrough = bTextstylestaticStrikethrough
	this.ITextstylestaticFontcolor = iTextstylestaticFontcolor
	this.ITextstylestaticSize = iTextstylestaticSize
	return &this
}

// NewTextstylestaticResponseWithDefaults instantiates a new TextstylestaticResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTextstylestaticResponseWithDefaults() *TextstylestaticResponse {
	this := TextstylestaticResponse{}
	return &this
}

// GetPkiTextstylestaticID returns the PkiTextstylestaticID field value if set, zero value otherwise.
func (o *TextstylestaticResponse) GetPkiTextstylestaticID() int32 {
	if o == nil || IsNil(o.PkiTextstylestaticID) {
		var ret int32
		return ret
	}
	return *o.PkiTextstylestaticID
}

// GetPkiTextstylestaticIDOk returns a tuple with the PkiTextstylestaticID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TextstylestaticResponse) GetPkiTextstylestaticIDOk() (*int32, bool) {
	if o == nil || IsNil(o.PkiTextstylestaticID) {
		return nil, false
	}
	return o.PkiTextstylestaticID, true
}

// HasPkiTextstylestaticID returns a boolean if a field has been set.
func (o *TextstylestaticResponse) HasPkiTextstylestaticID() bool {
	if o != nil && !IsNil(o.PkiTextstylestaticID) {
		return true
	}

	return false
}

// SetPkiTextstylestaticID gets a reference to the given int32 and assigns it to the PkiTextstylestaticID field.
func (o *TextstylestaticResponse) SetPkiTextstylestaticID(v int32) {
	o.PkiTextstylestaticID = &v
}

// GetFkiFontID returns the FkiFontID field value
func (o *TextstylestaticResponse) GetFkiFontID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiFontID
}

// GetFkiFontIDOk returns a tuple with the FkiFontID field value
// and a boolean to check if the value has been set.
func (o *TextstylestaticResponse) GetFkiFontIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiFontID, true
}

// SetFkiFontID sets field value
func (o *TextstylestaticResponse) SetFkiFontID(v int32) {
	o.FkiFontID = v
}

// GetBTextstylestaticBold returns the BTextstylestaticBold field value
func (o *TextstylestaticResponse) GetBTextstylestaticBold() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BTextstylestaticBold
}

// GetBTextstylestaticBoldOk returns a tuple with the BTextstylestaticBold field value
// and a boolean to check if the value has been set.
func (o *TextstylestaticResponse) GetBTextstylestaticBoldOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BTextstylestaticBold, true
}

// SetBTextstylestaticBold sets field value
func (o *TextstylestaticResponse) SetBTextstylestaticBold(v bool) {
	o.BTextstylestaticBold = v
}

// GetBTextstylestaticUnderline returns the BTextstylestaticUnderline field value
func (o *TextstylestaticResponse) GetBTextstylestaticUnderline() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BTextstylestaticUnderline
}

// GetBTextstylestaticUnderlineOk returns a tuple with the BTextstylestaticUnderline field value
// and a boolean to check if the value has been set.
func (o *TextstylestaticResponse) GetBTextstylestaticUnderlineOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BTextstylestaticUnderline, true
}

// SetBTextstylestaticUnderline sets field value
func (o *TextstylestaticResponse) SetBTextstylestaticUnderline(v bool) {
	o.BTextstylestaticUnderline = v
}

// GetBTextstylestaticItalic returns the BTextstylestaticItalic field value
func (o *TextstylestaticResponse) GetBTextstylestaticItalic() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BTextstylestaticItalic
}

// GetBTextstylestaticItalicOk returns a tuple with the BTextstylestaticItalic field value
// and a boolean to check if the value has been set.
func (o *TextstylestaticResponse) GetBTextstylestaticItalicOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BTextstylestaticItalic, true
}

// SetBTextstylestaticItalic sets field value
func (o *TextstylestaticResponse) SetBTextstylestaticItalic(v bool) {
	o.BTextstylestaticItalic = v
}

// GetBTextstylestaticStrikethrough returns the BTextstylestaticStrikethrough field value
func (o *TextstylestaticResponse) GetBTextstylestaticStrikethrough() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BTextstylestaticStrikethrough
}

// GetBTextstylestaticStrikethroughOk returns a tuple with the BTextstylestaticStrikethrough field value
// and a boolean to check if the value has been set.
func (o *TextstylestaticResponse) GetBTextstylestaticStrikethroughOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BTextstylestaticStrikethrough, true
}

// SetBTextstylestaticStrikethrough sets field value
func (o *TextstylestaticResponse) SetBTextstylestaticStrikethrough(v bool) {
	o.BTextstylestaticStrikethrough = v
}

// GetITextstylestaticFontcolor returns the ITextstylestaticFontcolor field value
func (o *TextstylestaticResponse) GetITextstylestaticFontcolor() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ITextstylestaticFontcolor
}

// GetITextstylestaticFontcolorOk returns a tuple with the ITextstylestaticFontcolor field value
// and a boolean to check if the value has been set.
func (o *TextstylestaticResponse) GetITextstylestaticFontcolorOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ITextstylestaticFontcolor, true
}

// SetITextstylestaticFontcolor sets field value
func (o *TextstylestaticResponse) SetITextstylestaticFontcolor(v int32) {
	o.ITextstylestaticFontcolor = v
}

// GetITextstylestaticSize returns the ITextstylestaticSize field value
func (o *TextstylestaticResponse) GetITextstylestaticSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ITextstylestaticSize
}

// GetITextstylestaticSizeOk returns a tuple with the ITextstylestaticSize field value
// and a boolean to check if the value has been set.
func (o *TextstylestaticResponse) GetITextstylestaticSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ITextstylestaticSize, true
}

// SetITextstylestaticSize sets field value
func (o *TextstylestaticResponse) SetITextstylestaticSize(v int32) {
	o.ITextstylestaticSize = v
}

func (o TextstylestaticResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TextstylestaticResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PkiTextstylestaticID) {
		toSerialize["pkiTextstylestaticID"] = o.PkiTextstylestaticID
	}
	toSerialize["fkiFontID"] = o.FkiFontID
	toSerialize["bTextstylestaticBold"] = o.BTextstylestaticBold
	toSerialize["bTextstylestaticUnderline"] = o.BTextstylestaticUnderline
	toSerialize["bTextstylestaticItalic"] = o.BTextstylestaticItalic
	toSerialize["bTextstylestaticStrikethrough"] = o.BTextstylestaticStrikethrough
	toSerialize["iTextstylestaticFontcolor"] = o.ITextstylestaticFontcolor
	toSerialize["iTextstylestaticSize"] = o.ITextstylestaticSize
	return toSerialize, nil
}

func (o *TextstylestaticResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"fkiFontID",
		"bTextstylestaticBold",
		"bTextstylestaticUnderline",
		"bTextstylestaticItalic",
		"bTextstylestaticStrikethrough",
		"iTextstylestaticFontcolor",
		"iTextstylestaticSize",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTextstylestaticResponse := _TextstylestaticResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTextstylestaticResponse)

	if err != nil {
		return err
	}

	*o = TextstylestaticResponse(varTextstylestaticResponse)

	return err
}

type NullableTextstylestaticResponse struct {
	value *TextstylestaticResponse
	isSet bool
}

func (v NullableTextstylestaticResponse) Get() *TextstylestaticResponse {
	return v.value
}

func (v *NullableTextstylestaticResponse) Set(val *TextstylestaticResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTextstylestaticResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTextstylestaticResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTextstylestaticResponse(val *TextstylestaticResponse) *NullableTextstylestaticResponse {
	return &NullableTextstylestaticResponse{value: val, isSet: true}
}

func (v NullableTextstylestaticResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTextstylestaticResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


