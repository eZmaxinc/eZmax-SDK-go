/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsignsignatureResponseCompound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsignsignatureResponseCompound{}

// EzsignsignatureResponseCompound An Ezsignsignature Object and children to create a complete structure
type EzsignsignatureResponseCompound struct {
	EzsignsignatureResponse
	// The date the Ezsignsignature was signed in folder's timezone
	DtEzsignsignatureDateInFolderTimezone *string `json:"dtEzsignsignatureDateInFolderTimezone,omitempty" validate:"regexp=^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) ([01]?[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$"`
	// Whether the Ezsignsignature has a custom date format or not. (Only possible when eEzsignsignatureType is **Name** or **Handwritten**)
	BEzsignsignatureCustomdate *bool `json:"bEzsignsignatureCustomdate,omitempty"`
	// An array of custom date blocks that will be filled at the time of signature.  Can only be used if bEzsignsignatureCustomdate is true.  Use an empty array if you don't want to have a date at all.
	AObjEzsignsignaturecustomdate []EzsignsignaturecustomdateResponseCompound `json:"a_objEzsignsignaturecustomdate,omitempty"`
	ObjCreditcardtransaction *CustomCreditcardtransactionResponse `json:"objCreditcardtransaction,omitempty"`
	AObjEzsignelementdependency []EzsignelementdependencyResponseCompound `json:"a_objEzsignelementdependency,omitempty"`
	ObjTimezone *CustomTimezoneWithCodeResponse `json:"objTimezone,omitempty"`
}

type _EzsignsignatureResponseCompound EzsignsignatureResponseCompound

// NewEzsignsignatureResponseCompound instantiates a new EzsignsignatureResponseCompound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsignsignatureResponseCompound(pkiEzsignsignatureID int32, fkiEzsigndocumentID int32, fkiEzsignfoldersignerassociationID int32, iEzsignpagePagenumber int32, iEzsignsignatureX int32, iEzsignsignatureY int32, iEzsignsignatureStep int32, eEzsignsignatureType FieldEEzsignsignatureType, objContactName CustomContactNameResponse) *EzsignsignatureResponseCompound {
	this := EzsignsignatureResponseCompound{}
	this.PkiEzsignsignatureID = pkiEzsignsignatureID
	this.FkiEzsigndocumentID = fkiEzsigndocumentID
	this.FkiEzsignfoldersignerassociationID = fkiEzsignfoldersignerassociationID
	this.IEzsignpagePagenumber = iEzsignpagePagenumber
	this.IEzsignsignatureX = iEzsignsignatureX
	this.IEzsignsignatureY = iEzsignsignatureY
	this.IEzsignsignatureStep = iEzsignsignatureStep
	this.EEzsignsignatureType = eEzsignsignatureType
	this.ObjContactName = objContactName
	return &this
}

// NewEzsignsignatureResponseCompoundWithDefaults instantiates a new EzsignsignatureResponseCompound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsignsignatureResponseCompoundWithDefaults() *EzsignsignatureResponseCompound {
	this := EzsignsignatureResponseCompound{}
	return &this
}

// GetDtEzsignsignatureDateInFolderTimezone returns the DtEzsignsignatureDateInFolderTimezone field value if set, zero value otherwise.
func (o *EzsignsignatureResponseCompound) GetDtEzsignsignatureDateInFolderTimezone() string {
	if o == nil || IsNil(o.DtEzsignsignatureDateInFolderTimezone) {
		var ret string
		return ret
	}
	return *o.DtEzsignsignatureDateInFolderTimezone
}

// GetDtEzsignsignatureDateInFolderTimezoneOk returns a tuple with the DtEzsignsignatureDateInFolderTimezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignsignatureResponseCompound) GetDtEzsignsignatureDateInFolderTimezoneOk() (*string, bool) {
	if o == nil || IsNil(o.DtEzsignsignatureDateInFolderTimezone) {
		return nil, false
	}
	return o.DtEzsignsignatureDateInFolderTimezone, true
}

// HasDtEzsignsignatureDateInFolderTimezone returns a boolean if a field has been set.
func (o *EzsignsignatureResponseCompound) HasDtEzsignsignatureDateInFolderTimezone() bool {
	if o != nil && !IsNil(o.DtEzsignsignatureDateInFolderTimezone) {
		return true
	}

	return false
}

// SetDtEzsignsignatureDateInFolderTimezone gets a reference to the given string and assigns it to the DtEzsignsignatureDateInFolderTimezone field.
func (o *EzsignsignatureResponseCompound) SetDtEzsignsignatureDateInFolderTimezone(v string) {
	o.DtEzsignsignatureDateInFolderTimezone = &v
}

// GetBEzsignsignatureCustomdate returns the BEzsignsignatureCustomdate field value if set, zero value otherwise.
func (o *EzsignsignatureResponseCompound) GetBEzsignsignatureCustomdate() bool {
	if o == nil || IsNil(o.BEzsignsignatureCustomdate) {
		var ret bool
		return ret
	}
	return *o.BEzsignsignatureCustomdate
}

// GetBEzsignsignatureCustomdateOk returns a tuple with the BEzsignsignatureCustomdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignsignatureResponseCompound) GetBEzsignsignatureCustomdateOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignsignatureCustomdate) {
		return nil, false
	}
	return o.BEzsignsignatureCustomdate, true
}

// HasBEzsignsignatureCustomdate returns a boolean if a field has been set.
func (o *EzsignsignatureResponseCompound) HasBEzsignsignatureCustomdate() bool {
	if o != nil && !IsNil(o.BEzsignsignatureCustomdate) {
		return true
	}

	return false
}

// SetBEzsignsignatureCustomdate gets a reference to the given bool and assigns it to the BEzsignsignatureCustomdate field.
func (o *EzsignsignatureResponseCompound) SetBEzsignsignatureCustomdate(v bool) {
	o.BEzsignsignatureCustomdate = &v
}

// GetAObjEzsignsignaturecustomdate returns the AObjEzsignsignaturecustomdate field value if set, zero value otherwise.
func (o *EzsignsignatureResponseCompound) GetAObjEzsignsignaturecustomdate() []EzsignsignaturecustomdateResponseCompound {
	if o == nil || IsNil(o.AObjEzsignsignaturecustomdate) {
		var ret []EzsignsignaturecustomdateResponseCompound
		return ret
	}
	return o.AObjEzsignsignaturecustomdate
}

// GetAObjEzsignsignaturecustomdateOk returns a tuple with the AObjEzsignsignaturecustomdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignsignatureResponseCompound) GetAObjEzsignsignaturecustomdateOk() ([]EzsignsignaturecustomdateResponseCompound, bool) {
	if o == nil || IsNil(o.AObjEzsignsignaturecustomdate) {
		return nil, false
	}
	return o.AObjEzsignsignaturecustomdate, true
}

// HasAObjEzsignsignaturecustomdate returns a boolean if a field has been set.
func (o *EzsignsignatureResponseCompound) HasAObjEzsignsignaturecustomdate() bool {
	if o != nil && !IsNil(o.AObjEzsignsignaturecustomdate) {
		return true
	}

	return false
}

// SetAObjEzsignsignaturecustomdate gets a reference to the given []EzsignsignaturecustomdateResponseCompound and assigns it to the AObjEzsignsignaturecustomdate field.
func (o *EzsignsignatureResponseCompound) SetAObjEzsignsignaturecustomdate(v []EzsignsignaturecustomdateResponseCompound) {
	o.AObjEzsignsignaturecustomdate = v
}

// GetObjCreditcardtransaction returns the ObjCreditcardtransaction field value if set, zero value otherwise.
func (o *EzsignsignatureResponseCompound) GetObjCreditcardtransaction() CustomCreditcardtransactionResponse {
	if o == nil || IsNil(o.ObjCreditcardtransaction) {
		var ret CustomCreditcardtransactionResponse
		return ret
	}
	return *o.ObjCreditcardtransaction
}

// GetObjCreditcardtransactionOk returns a tuple with the ObjCreditcardtransaction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignsignatureResponseCompound) GetObjCreditcardtransactionOk() (*CustomCreditcardtransactionResponse, bool) {
	if o == nil || IsNil(o.ObjCreditcardtransaction) {
		return nil, false
	}
	return o.ObjCreditcardtransaction, true
}

// HasObjCreditcardtransaction returns a boolean if a field has been set.
func (o *EzsignsignatureResponseCompound) HasObjCreditcardtransaction() bool {
	if o != nil && !IsNil(o.ObjCreditcardtransaction) {
		return true
	}

	return false
}

// SetObjCreditcardtransaction gets a reference to the given CustomCreditcardtransactionResponse and assigns it to the ObjCreditcardtransaction field.
func (o *EzsignsignatureResponseCompound) SetObjCreditcardtransaction(v CustomCreditcardtransactionResponse) {
	o.ObjCreditcardtransaction = &v
}

// GetAObjEzsignelementdependency returns the AObjEzsignelementdependency field value if set, zero value otherwise.
func (o *EzsignsignatureResponseCompound) GetAObjEzsignelementdependency() []EzsignelementdependencyResponseCompound {
	if o == nil || IsNil(o.AObjEzsignelementdependency) {
		var ret []EzsignelementdependencyResponseCompound
		return ret
	}
	return o.AObjEzsignelementdependency
}

// GetAObjEzsignelementdependencyOk returns a tuple with the AObjEzsignelementdependency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignsignatureResponseCompound) GetAObjEzsignelementdependencyOk() ([]EzsignelementdependencyResponseCompound, bool) {
	if o == nil || IsNil(o.AObjEzsignelementdependency) {
		return nil, false
	}
	return o.AObjEzsignelementdependency, true
}

// HasAObjEzsignelementdependency returns a boolean if a field has been set.
func (o *EzsignsignatureResponseCompound) HasAObjEzsignelementdependency() bool {
	if o != nil && !IsNil(o.AObjEzsignelementdependency) {
		return true
	}

	return false
}

// SetAObjEzsignelementdependency gets a reference to the given []EzsignelementdependencyResponseCompound and assigns it to the AObjEzsignelementdependency field.
func (o *EzsignsignatureResponseCompound) SetAObjEzsignelementdependency(v []EzsignelementdependencyResponseCompound) {
	o.AObjEzsignelementdependency = v
}

// GetObjTimezone returns the ObjTimezone field value if set, zero value otherwise.
func (o *EzsignsignatureResponseCompound) GetObjTimezone() CustomTimezoneWithCodeResponse {
	if o == nil || IsNil(o.ObjTimezone) {
		var ret CustomTimezoneWithCodeResponse
		return ret
	}
	return *o.ObjTimezone
}

// GetObjTimezoneOk returns a tuple with the ObjTimezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignsignatureResponseCompound) GetObjTimezoneOk() (*CustomTimezoneWithCodeResponse, bool) {
	if o == nil || IsNil(o.ObjTimezone) {
		return nil, false
	}
	return o.ObjTimezone, true
}

// HasObjTimezone returns a boolean if a field has been set.
func (o *EzsignsignatureResponseCompound) HasObjTimezone() bool {
	if o != nil && !IsNil(o.ObjTimezone) {
		return true
	}

	return false
}

// SetObjTimezone gets a reference to the given CustomTimezoneWithCodeResponse and assigns it to the ObjTimezone field.
func (o *EzsignsignatureResponseCompound) SetObjTimezone(v CustomTimezoneWithCodeResponse) {
	o.ObjTimezone = &v
}

func (o EzsignsignatureResponseCompound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsignsignatureResponseCompound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DtEzsignsignatureDateInFolderTimezone) {
		toSerialize["dtEzsignsignatureDateInFolderTimezone"] = o.DtEzsignsignatureDateInFolderTimezone
	}
	if !IsNil(o.BEzsignsignatureCustomdate) {
		toSerialize["bEzsignsignatureCustomdate"] = o.BEzsignsignatureCustomdate
	}
	if !IsNil(o.AObjEzsignsignaturecustomdate) {
		toSerialize["a_objEzsignsignaturecustomdate"] = o.AObjEzsignsignaturecustomdate
	}
	if !IsNil(o.ObjCreditcardtransaction) {
		toSerialize["objCreditcardtransaction"] = o.ObjCreditcardtransaction
	}
	if !IsNil(o.AObjEzsignelementdependency) {
		toSerialize["a_objEzsignelementdependency"] = o.AObjEzsignelementdependency
	}
	if !IsNil(o.ObjTimezone) {
		toSerialize["objTimezone"] = o.ObjTimezone
	}
	return toSerialize, nil
}

func (o *EzsignsignatureResponseCompound) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pkiEzsignsignatureID",
		"fkiEzsigndocumentID",
		"fkiEzsignfoldersignerassociationID",
		"iEzsignpagePagenumber",
		"iEzsignsignatureX",
		"iEzsignsignatureY",
		"iEzsignsignatureStep",
		"eEzsignsignatureType",
		"objContactName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsignsignatureResponseCompound := _EzsignsignatureResponseCompound{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsignsignatureResponseCompound)

	if err != nil {
		return err
	}

	*o = EzsignsignatureResponseCompound(varEzsignsignatureResponseCompound)

	return err
}

type NullableEzsignsignatureResponseCompound struct {
	value *EzsignsignatureResponseCompound
	isSet bool
}

func (v NullableEzsignsignatureResponseCompound) Get() *EzsignsignatureResponseCompound {
	return v.value
}

func (v *NullableEzsignsignatureResponseCompound) Set(val *EzsignsignatureResponseCompound) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsignsignatureResponseCompound) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsignsignatureResponseCompound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsignsignatureResponseCompound(val *EzsignsignatureResponseCompound) *NullableEzsignsignatureResponseCompound {
	return &NullableEzsignsignatureResponseCompound{value: val, isSet: true}
}

func (v NullableEzsignsignatureResponseCompound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsignsignatureResponseCompound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


