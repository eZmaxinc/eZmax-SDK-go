/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsigndiscussionCreateObjectV1Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsigndiscussionCreateObjectV1Request{}

// EzsigndiscussionCreateObjectV1Request Request for POST /1/object/ezsigndiscussion
type EzsigndiscussionCreateObjectV1Request struct {
	AObjEzsigndiscussion []EzsigndiscussionRequestCompound `json:"a_objEzsigndiscussion"`
}

type _EzsigndiscussionCreateObjectV1Request EzsigndiscussionCreateObjectV1Request

// NewEzsigndiscussionCreateObjectV1Request instantiates a new EzsigndiscussionCreateObjectV1Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsigndiscussionCreateObjectV1Request(aObjEzsigndiscussion []EzsigndiscussionRequestCompound) *EzsigndiscussionCreateObjectV1Request {
	this := EzsigndiscussionCreateObjectV1Request{}
	this.AObjEzsigndiscussion = aObjEzsigndiscussion
	return &this
}

// NewEzsigndiscussionCreateObjectV1RequestWithDefaults instantiates a new EzsigndiscussionCreateObjectV1Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsigndiscussionCreateObjectV1RequestWithDefaults() *EzsigndiscussionCreateObjectV1Request {
	this := EzsigndiscussionCreateObjectV1Request{}
	return &this
}

// GetAObjEzsigndiscussion returns the AObjEzsigndiscussion field value
func (o *EzsigndiscussionCreateObjectV1Request) GetAObjEzsigndiscussion() []EzsigndiscussionRequestCompound {
	if o == nil {
		var ret []EzsigndiscussionRequestCompound
		return ret
	}

	return o.AObjEzsigndiscussion
}

// GetAObjEzsigndiscussionOk returns a tuple with the AObjEzsigndiscussion field value
// and a boolean to check if the value has been set.
func (o *EzsigndiscussionCreateObjectV1Request) GetAObjEzsigndiscussionOk() ([]EzsigndiscussionRequestCompound, bool) {
	if o == nil {
		return nil, false
	}
	return o.AObjEzsigndiscussion, true
}

// SetAObjEzsigndiscussion sets field value
func (o *EzsigndiscussionCreateObjectV1Request) SetAObjEzsigndiscussion(v []EzsigndiscussionRequestCompound) {
	o.AObjEzsigndiscussion = v
}

func (o EzsigndiscussionCreateObjectV1Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsigndiscussionCreateObjectV1Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["a_objEzsigndiscussion"] = o.AObjEzsigndiscussion
	return toSerialize, nil
}

func (o *EzsigndiscussionCreateObjectV1Request) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"a_objEzsigndiscussion",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsigndiscussionCreateObjectV1Request := _EzsigndiscussionCreateObjectV1Request{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsigndiscussionCreateObjectV1Request)

	if err != nil {
		return err
	}

	*o = EzsigndiscussionCreateObjectV1Request(varEzsigndiscussionCreateObjectV1Request)

	return err
}

type NullableEzsigndiscussionCreateObjectV1Request struct {
	value *EzsigndiscussionCreateObjectV1Request
	isSet bool
}

func (v NullableEzsigndiscussionCreateObjectV1Request) Get() *EzsigndiscussionCreateObjectV1Request {
	return v.value
}

func (v *NullableEzsigndiscussionCreateObjectV1Request) Set(val *EzsigndiscussionCreateObjectV1Request) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsigndiscussionCreateObjectV1Request) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsigndiscussionCreateObjectV1Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsigndiscussionCreateObjectV1Request(val *EzsigndiscussionCreateObjectV1Request) *NullableEzsigndiscussionCreateObjectV1Request {
	return &NullableEzsigndiscussionCreateObjectV1Request{value: val, isSet: true}
}

func (v NullableEzsigndiscussionCreateObjectV1Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsigndiscussionCreateObjectV1Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


