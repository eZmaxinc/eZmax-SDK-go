/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WebhookEzsignEzsignsignerAcceptclause type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookEzsignEzsignsignerAcceptclause{}

// WebhookEzsignEzsignsignerAcceptclause This is the base Webhook object
type WebhookEzsignEzsignsignerAcceptclause struct {
	CommonWebhook
	ObjEzsignfolder *EzsignfolderResponse `json:"objEzsignfolder,omitempty"`
	ObjEzsignfoldersignerassociation EzsignfoldersignerassociationResponseCompound `json:"objEzsignfoldersignerassociation"`
}

type _WebhookEzsignEzsignsignerAcceptclause WebhookEzsignEzsignsignerAcceptclause

// NewWebhookEzsignEzsignsignerAcceptclause instantiates a new WebhookEzsignEzsignsignerAcceptclause object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookEzsignEzsignsignerAcceptclause(objEzsignfoldersignerassociation EzsignfoldersignerassociationResponseCompound, objWebhook CustomWebhookResponse, aObjAttempt []AttemptResponseCompound) *WebhookEzsignEzsignsignerAcceptclause {
	this := WebhookEzsignEzsignsignerAcceptclause{}
	this.ObjWebhook = objWebhook
	this.AObjAttempt = aObjAttempt
	this.ObjEzsignfoldersignerassociation = objEzsignfoldersignerassociation
	return &this
}

// NewWebhookEzsignEzsignsignerAcceptclauseWithDefaults instantiates a new WebhookEzsignEzsignsignerAcceptclause object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookEzsignEzsignsignerAcceptclauseWithDefaults() *WebhookEzsignEzsignsignerAcceptclause {
	this := WebhookEzsignEzsignsignerAcceptclause{}
	return &this
}

// GetObjEzsignfolder returns the ObjEzsignfolder field value if set, zero value otherwise.
func (o *WebhookEzsignEzsignsignerAcceptclause) GetObjEzsignfolder() EzsignfolderResponse {
	if o == nil || IsNil(o.ObjEzsignfolder) {
		var ret EzsignfolderResponse
		return ret
	}
	return *o.ObjEzsignfolder
}

// GetObjEzsignfolderOk returns a tuple with the ObjEzsignfolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEzsignEzsignsignerAcceptclause) GetObjEzsignfolderOk() (*EzsignfolderResponse, bool) {
	if o == nil || IsNil(o.ObjEzsignfolder) {
		return nil, false
	}
	return o.ObjEzsignfolder, true
}

// HasObjEzsignfolder returns a boolean if a field has been set.
func (o *WebhookEzsignEzsignsignerAcceptclause) HasObjEzsignfolder() bool {
	if o != nil && !IsNil(o.ObjEzsignfolder) {
		return true
	}

	return false
}

// SetObjEzsignfolder gets a reference to the given EzsignfolderResponse and assigns it to the ObjEzsignfolder field.
func (o *WebhookEzsignEzsignsignerAcceptclause) SetObjEzsignfolder(v EzsignfolderResponse) {
	o.ObjEzsignfolder = &v
}

// GetObjEzsignfoldersignerassociation returns the ObjEzsignfoldersignerassociation field value
func (o *WebhookEzsignEzsignsignerAcceptclause) GetObjEzsignfoldersignerassociation() EzsignfoldersignerassociationResponseCompound {
	if o == nil {
		var ret EzsignfoldersignerassociationResponseCompound
		return ret
	}

	return o.ObjEzsignfoldersignerassociation
}

// GetObjEzsignfoldersignerassociationOk returns a tuple with the ObjEzsignfoldersignerassociation field value
// and a boolean to check if the value has been set.
func (o *WebhookEzsignEzsignsignerAcceptclause) GetObjEzsignfoldersignerassociationOk() (*EzsignfoldersignerassociationResponseCompound, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjEzsignfoldersignerassociation, true
}

// SetObjEzsignfoldersignerassociation sets field value
func (o *WebhookEzsignEzsignsignerAcceptclause) SetObjEzsignfoldersignerassociation(v EzsignfoldersignerassociationResponseCompound) {
	o.ObjEzsignfoldersignerassociation = v
}

func (o WebhookEzsignEzsignsignerAcceptclause) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookEzsignEzsignsignerAcceptclause) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ObjEzsignfolder) {
		toSerialize["objEzsignfolder"] = o.ObjEzsignfolder
	}
	toSerialize["objEzsignfoldersignerassociation"] = o.ObjEzsignfoldersignerassociation
	return toSerialize, nil
}

func (o *WebhookEzsignEzsignsignerAcceptclause) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"objEzsignfoldersignerassociation",
		"objWebhook",
		"a_objAttempt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebhookEzsignEzsignsignerAcceptclause := _WebhookEzsignEzsignsignerAcceptclause{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWebhookEzsignEzsignsignerAcceptclause)

	if err != nil {
		return err
	}

	*o = WebhookEzsignEzsignsignerAcceptclause(varWebhookEzsignEzsignsignerAcceptclause)

	return err
}

type NullableWebhookEzsignEzsignsignerAcceptclause struct {
	value *WebhookEzsignEzsignsignerAcceptclause
	isSet bool
}

func (v NullableWebhookEzsignEzsignsignerAcceptclause) Get() *WebhookEzsignEzsignsignerAcceptclause {
	return v.value
}

func (v *NullableWebhookEzsignEzsignsignerAcceptclause) Set(val *WebhookEzsignEzsignsignerAcceptclause) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookEzsignEzsignsignerAcceptclause) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookEzsignEzsignsignerAcceptclause) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookEzsignEzsignsignerAcceptclause(val *WebhookEzsignEzsignsignerAcceptclause) *NullableWebhookEzsignEzsignsignerAcceptclause {
	return &NullableWebhookEzsignEzsignsignerAcceptclause{value: val, isSet: true}
}

func (v NullableWebhookEzsignEzsignsignerAcceptclause) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookEzsignEzsignsignerAcceptclause) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


