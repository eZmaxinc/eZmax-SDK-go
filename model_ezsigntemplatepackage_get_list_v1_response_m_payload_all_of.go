/*
eZmax API Definition

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.1.4
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// EzsigntemplatepackageGetListV1ResponseMPayloadAllOf struct for EzsigntemplatepackageGetListV1ResponseMPayloadAllOf
type EzsigntemplatepackageGetListV1ResponseMPayloadAllOf struct {
	AObjEzsigntemplatepackage []EzsigntemplatepackageListElement `json:"a_objEzsigntemplatepackage"`
}

// NewEzsigntemplatepackageGetListV1ResponseMPayloadAllOf instantiates a new EzsigntemplatepackageGetListV1ResponseMPayloadAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsigntemplatepackageGetListV1ResponseMPayloadAllOf(aObjEzsigntemplatepackage []EzsigntemplatepackageListElement) *EzsigntemplatepackageGetListV1ResponseMPayloadAllOf {
	this := EzsigntemplatepackageGetListV1ResponseMPayloadAllOf{}
	this.AObjEzsigntemplatepackage = aObjEzsigntemplatepackage
	return &this
}

// NewEzsigntemplatepackageGetListV1ResponseMPayloadAllOfWithDefaults instantiates a new EzsigntemplatepackageGetListV1ResponseMPayloadAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsigntemplatepackageGetListV1ResponseMPayloadAllOfWithDefaults() *EzsigntemplatepackageGetListV1ResponseMPayloadAllOf {
	this := EzsigntemplatepackageGetListV1ResponseMPayloadAllOf{}
	return &this
}

// GetAObjEzsigntemplatepackage returns the AObjEzsigntemplatepackage field value
func (o *EzsigntemplatepackageGetListV1ResponseMPayloadAllOf) GetAObjEzsigntemplatepackage() []EzsigntemplatepackageListElement {
	if o == nil {
		var ret []EzsigntemplatepackageListElement
		return ret
	}

	return o.AObjEzsigntemplatepackage
}

// GetAObjEzsigntemplatepackageOk returns a tuple with the AObjEzsigntemplatepackage field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplatepackageGetListV1ResponseMPayloadAllOf) GetAObjEzsigntemplatepackageOk() (*[]EzsigntemplatepackageListElement, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AObjEzsigntemplatepackage, true
}

// SetAObjEzsigntemplatepackage sets field value
func (o *EzsigntemplatepackageGetListV1ResponseMPayloadAllOf) SetAObjEzsigntemplatepackage(v []EzsigntemplatepackageListElement) {
	o.AObjEzsigntemplatepackage = v
}

func (o EzsigntemplatepackageGetListV1ResponseMPayloadAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["a_objEzsigntemplatepackage"] = o.AObjEzsigntemplatepackage
	}
	return json.Marshal(toSerialize)
}

type NullableEzsigntemplatepackageGetListV1ResponseMPayloadAllOf struct {
	value *EzsigntemplatepackageGetListV1ResponseMPayloadAllOf
	isSet bool
}

func (v NullableEzsigntemplatepackageGetListV1ResponseMPayloadAllOf) Get() *EzsigntemplatepackageGetListV1ResponseMPayloadAllOf {
	return v.value
}

func (v *NullableEzsigntemplatepackageGetListV1ResponseMPayloadAllOf) Set(val *EzsigntemplatepackageGetListV1ResponseMPayloadAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsigntemplatepackageGetListV1ResponseMPayloadAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsigntemplatepackageGetListV1ResponseMPayloadAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsigntemplatepackageGetListV1ResponseMPayloadAllOf(val *EzsigntemplatepackageGetListV1ResponseMPayloadAllOf) *NullableEzsigntemplatepackageGetListV1ResponseMPayloadAllOf {
	return &NullableEzsigntemplatepackageGetListV1ResponseMPayloadAllOf{value: val, isSet: true}
}

func (v NullableEzsigntemplatepackageGetListV1ResponseMPayloadAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsigntemplatepackageGetListV1ResponseMPayloadAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


