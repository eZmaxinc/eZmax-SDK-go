/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsignfolderImportEzsigntemplatepackageV1Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsignfolderImportEzsigntemplatepackageV1Request{}

// EzsignfolderImportEzsigntemplatepackageV1Request Request for POST /1/object/ezsignfolder/{pkiEzsignfolderID}/importEzsigntemplatepackage
type EzsignfolderImportEzsigntemplatepackageV1Request struct {
	// The unique ID of the Ezsigntemplatepackage
	FkiEzsigntemplatepackageID int32 `json:"fkiEzsigntemplatepackageID"`
	// The maximum date and time at which the Ezsigndocument can be signed.
	DtEzsigndocumentDuedate string `json:"dtEzsigndocumentDuedate"`
	AObjImportEzsigntemplatepackageRelation []CustomImportEzsigntemplatepackageRelationRequest `json:"a_objImportEzsigntemplatepackageRelation"`
}

type _EzsignfolderImportEzsigntemplatepackageV1Request EzsignfolderImportEzsigntemplatepackageV1Request

// NewEzsignfolderImportEzsigntemplatepackageV1Request instantiates a new EzsignfolderImportEzsigntemplatepackageV1Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsignfolderImportEzsigntemplatepackageV1Request(fkiEzsigntemplatepackageID int32, dtEzsigndocumentDuedate string, aObjImportEzsigntemplatepackageRelation []CustomImportEzsigntemplatepackageRelationRequest) *EzsignfolderImportEzsigntemplatepackageV1Request {
	this := EzsignfolderImportEzsigntemplatepackageV1Request{}
	this.FkiEzsigntemplatepackageID = fkiEzsigntemplatepackageID
	this.DtEzsigndocumentDuedate = dtEzsigndocumentDuedate
	this.AObjImportEzsigntemplatepackageRelation = aObjImportEzsigntemplatepackageRelation
	return &this
}

// NewEzsignfolderImportEzsigntemplatepackageV1RequestWithDefaults instantiates a new EzsignfolderImportEzsigntemplatepackageV1Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsignfolderImportEzsigntemplatepackageV1RequestWithDefaults() *EzsignfolderImportEzsigntemplatepackageV1Request {
	this := EzsignfolderImportEzsigntemplatepackageV1Request{}
	return &this
}

// GetFkiEzsigntemplatepackageID returns the FkiEzsigntemplatepackageID field value
func (o *EzsignfolderImportEzsigntemplatepackageV1Request) GetFkiEzsigntemplatepackageID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiEzsigntemplatepackageID
}

// GetFkiEzsigntemplatepackageIDOk returns a tuple with the FkiEzsigntemplatepackageID field value
// and a boolean to check if the value has been set.
func (o *EzsignfolderImportEzsigntemplatepackageV1Request) GetFkiEzsigntemplatepackageIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiEzsigntemplatepackageID, true
}

// SetFkiEzsigntemplatepackageID sets field value
func (o *EzsignfolderImportEzsigntemplatepackageV1Request) SetFkiEzsigntemplatepackageID(v int32) {
	o.FkiEzsigntemplatepackageID = v
}

// GetDtEzsigndocumentDuedate returns the DtEzsigndocumentDuedate field value
func (o *EzsignfolderImportEzsigntemplatepackageV1Request) GetDtEzsigndocumentDuedate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DtEzsigndocumentDuedate
}

// GetDtEzsigndocumentDuedateOk returns a tuple with the DtEzsigndocumentDuedate field value
// and a boolean to check if the value has been set.
func (o *EzsignfolderImportEzsigntemplatepackageV1Request) GetDtEzsigndocumentDuedateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DtEzsigndocumentDuedate, true
}

// SetDtEzsigndocumentDuedate sets field value
func (o *EzsignfolderImportEzsigntemplatepackageV1Request) SetDtEzsigndocumentDuedate(v string) {
	o.DtEzsigndocumentDuedate = v
}

// GetAObjImportEzsigntemplatepackageRelation returns the AObjImportEzsigntemplatepackageRelation field value
func (o *EzsignfolderImportEzsigntemplatepackageV1Request) GetAObjImportEzsigntemplatepackageRelation() []CustomImportEzsigntemplatepackageRelationRequest {
	if o == nil {
		var ret []CustomImportEzsigntemplatepackageRelationRequest
		return ret
	}

	return o.AObjImportEzsigntemplatepackageRelation
}

// GetAObjImportEzsigntemplatepackageRelationOk returns a tuple with the AObjImportEzsigntemplatepackageRelation field value
// and a boolean to check if the value has been set.
func (o *EzsignfolderImportEzsigntemplatepackageV1Request) GetAObjImportEzsigntemplatepackageRelationOk() ([]CustomImportEzsigntemplatepackageRelationRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.AObjImportEzsigntemplatepackageRelation, true
}

// SetAObjImportEzsigntemplatepackageRelation sets field value
func (o *EzsignfolderImportEzsigntemplatepackageV1Request) SetAObjImportEzsigntemplatepackageRelation(v []CustomImportEzsigntemplatepackageRelationRequest) {
	o.AObjImportEzsigntemplatepackageRelation = v
}

func (o EzsignfolderImportEzsigntemplatepackageV1Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsignfolderImportEzsigntemplatepackageV1Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["fkiEzsigntemplatepackageID"] = o.FkiEzsigntemplatepackageID
	toSerialize["dtEzsigndocumentDuedate"] = o.DtEzsigndocumentDuedate
	toSerialize["a_objImportEzsigntemplatepackageRelation"] = o.AObjImportEzsigntemplatepackageRelation
	return toSerialize, nil
}

func (o *EzsignfolderImportEzsigntemplatepackageV1Request) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"fkiEzsigntemplatepackageID",
		"dtEzsigndocumentDuedate",
		"a_objImportEzsigntemplatepackageRelation",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsignfolderImportEzsigntemplatepackageV1Request := _EzsignfolderImportEzsigntemplatepackageV1Request{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsignfolderImportEzsigntemplatepackageV1Request)

	if err != nil {
		return err
	}

	*o = EzsignfolderImportEzsigntemplatepackageV1Request(varEzsignfolderImportEzsigntemplatepackageV1Request)

	return err
}

type NullableEzsignfolderImportEzsigntemplatepackageV1Request struct {
	value *EzsignfolderImportEzsigntemplatepackageV1Request
	isSet bool
}

func (v NullableEzsignfolderImportEzsigntemplatepackageV1Request) Get() *EzsignfolderImportEzsigntemplatepackageV1Request {
	return v.value
}

func (v *NullableEzsignfolderImportEzsigntemplatepackageV1Request) Set(val *EzsignfolderImportEzsigntemplatepackageV1Request) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsignfolderImportEzsigntemplatepackageV1Request) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsignfolderImportEzsigntemplatepackageV1Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsignfolderImportEzsigntemplatepackageV1Request(val *EzsignfolderImportEzsigntemplatepackageV1Request) *NullableEzsignfolderImportEzsigntemplatepackageV1Request {
	return &NullableEzsignfolderImportEzsigntemplatepackageV1Request{value: val, isSet: true}
}

func (v NullableEzsignfolderImportEzsigntemplatepackageV1Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsignfolderImportEzsigntemplatepackageV1Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


