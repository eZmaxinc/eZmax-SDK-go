/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsigndocumentdependencyRequestCompound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsigndocumentdependencyRequestCompound{}

// EzsigndocumentdependencyRequestCompound An Ezsigndocumentdependency Object
type EzsigndocumentdependencyRequestCompound struct {
	// The unique ID of the Ezsigndocumentdependency
	PkiEzsigndocumentdependencyID *int32 `json:"pkiEzsigndocumentdependencyID,omitempty"`
	// The unique ID of the Ezsigndocument
	FkiEzsigndocumentIDdependency int32 `json:"fkiEzsigndocumentIDdependency"`
}

type _EzsigndocumentdependencyRequestCompound EzsigndocumentdependencyRequestCompound

// NewEzsigndocumentdependencyRequestCompound instantiates a new EzsigndocumentdependencyRequestCompound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsigndocumentdependencyRequestCompound(fkiEzsigndocumentIDdependency int32) *EzsigndocumentdependencyRequestCompound {
	this := EzsigndocumentdependencyRequestCompound{}
	this.FkiEzsigndocumentIDdependency = fkiEzsigndocumentIDdependency
	return &this
}

// NewEzsigndocumentdependencyRequestCompoundWithDefaults instantiates a new EzsigndocumentdependencyRequestCompound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsigndocumentdependencyRequestCompoundWithDefaults() *EzsigndocumentdependencyRequestCompound {
	this := EzsigndocumentdependencyRequestCompound{}
	return &this
}

// GetPkiEzsigndocumentdependencyID returns the PkiEzsigndocumentdependencyID field value if set, zero value otherwise.
func (o *EzsigndocumentdependencyRequestCompound) GetPkiEzsigndocumentdependencyID() int32 {
	if o == nil || IsNil(o.PkiEzsigndocumentdependencyID) {
		var ret int32
		return ret
	}
	return *o.PkiEzsigndocumentdependencyID
}

// GetPkiEzsigndocumentdependencyIDOk returns a tuple with the PkiEzsigndocumentdependencyID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigndocumentdependencyRequestCompound) GetPkiEzsigndocumentdependencyIDOk() (*int32, bool) {
	if o == nil || IsNil(o.PkiEzsigndocumentdependencyID) {
		return nil, false
	}
	return o.PkiEzsigndocumentdependencyID, true
}

// HasPkiEzsigndocumentdependencyID returns a boolean if a field has been set.
func (o *EzsigndocumentdependencyRequestCompound) HasPkiEzsigndocumentdependencyID() bool {
	if o != nil && !IsNil(o.PkiEzsigndocumentdependencyID) {
		return true
	}

	return false
}

// SetPkiEzsigndocumentdependencyID gets a reference to the given int32 and assigns it to the PkiEzsigndocumentdependencyID field.
func (o *EzsigndocumentdependencyRequestCompound) SetPkiEzsigndocumentdependencyID(v int32) {
	o.PkiEzsigndocumentdependencyID = &v
}

// GetFkiEzsigndocumentIDdependency returns the FkiEzsigndocumentIDdependency field value
func (o *EzsigndocumentdependencyRequestCompound) GetFkiEzsigndocumentIDdependency() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiEzsigndocumentIDdependency
}

// GetFkiEzsigndocumentIDdependencyOk returns a tuple with the FkiEzsigndocumentIDdependency field value
// and a boolean to check if the value has been set.
func (o *EzsigndocumentdependencyRequestCompound) GetFkiEzsigndocumentIDdependencyOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiEzsigndocumentIDdependency, true
}

// SetFkiEzsigndocumentIDdependency sets field value
func (o *EzsigndocumentdependencyRequestCompound) SetFkiEzsigndocumentIDdependency(v int32) {
	o.FkiEzsigndocumentIDdependency = v
}

func (o EzsigndocumentdependencyRequestCompound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsigndocumentdependencyRequestCompound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PkiEzsigndocumentdependencyID) {
		toSerialize["pkiEzsigndocumentdependencyID"] = o.PkiEzsigndocumentdependencyID
	}
	toSerialize["fkiEzsigndocumentIDdependency"] = o.FkiEzsigndocumentIDdependency
	return toSerialize, nil
}

func (o *EzsigndocumentdependencyRequestCompound) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"fkiEzsigndocumentIDdependency",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsigndocumentdependencyRequestCompound := _EzsigndocumentdependencyRequestCompound{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsigndocumentdependencyRequestCompound)

	if err != nil {
		return err
	}

	*o = EzsigndocumentdependencyRequestCompound(varEzsigndocumentdependencyRequestCompound)

	return err
}

type NullableEzsigndocumentdependencyRequestCompound struct {
	value *EzsigndocumentdependencyRequestCompound
	isSet bool
}

func (v NullableEzsigndocumentdependencyRequestCompound) Get() *EzsigndocumentdependencyRequestCompound {
	return v.value
}

func (v *NullableEzsigndocumentdependencyRequestCompound) Set(val *EzsigndocumentdependencyRequestCompound) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsigndocumentdependencyRequestCompound) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsigndocumentdependencyRequestCompound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsigndocumentdependencyRequestCompound(val *EzsigndocumentdependencyRequestCompound) *NullableEzsigndocumentdependencyRequestCompound {
	return &NullableEzsigndocumentdependencyRequestCompound{value: val, isSet: true}
}

func (v NullableEzsigndocumentdependencyRequestCompound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsigndocumentdependencyRequestCompound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


