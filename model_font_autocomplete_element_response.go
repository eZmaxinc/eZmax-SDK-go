/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// checks if the FontAutocompleteElementResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FontAutocompleteElementResponse{}

// FontAutocompleteElementResponse A Font AutocompleteElement Response
type FontAutocompleteElementResponse struct {
	// The name of the Font
	SFontName string `json:"sFontName"`
	// The unique ID of the Font
	PkiFontID int32 `json:"pkiFontID"`
	// Whether the Font is active or not
	BFontIsactive bool `json:"bFontIsactive"`
}

// NewFontAutocompleteElementResponse instantiates a new FontAutocompleteElementResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFontAutocompleteElementResponse(sFontName string, pkiFontID int32, bFontIsactive bool) *FontAutocompleteElementResponse {
	this := FontAutocompleteElementResponse{}
	this.SFontName = sFontName
	this.PkiFontID = pkiFontID
	this.BFontIsactive = bFontIsactive
	return &this
}

// NewFontAutocompleteElementResponseWithDefaults instantiates a new FontAutocompleteElementResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFontAutocompleteElementResponseWithDefaults() *FontAutocompleteElementResponse {
	this := FontAutocompleteElementResponse{}
	return &this
}

// GetSFontName returns the SFontName field value
func (o *FontAutocompleteElementResponse) GetSFontName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SFontName
}

// GetSFontNameOk returns a tuple with the SFontName field value
// and a boolean to check if the value has been set.
func (o *FontAutocompleteElementResponse) GetSFontNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SFontName, true
}

// SetSFontName sets field value
func (o *FontAutocompleteElementResponse) SetSFontName(v string) {
	o.SFontName = v
}

// GetPkiFontID returns the PkiFontID field value
func (o *FontAutocompleteElementResponse) GetPkiFontID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PkiFontID
}

// GetPkiFontIDOk returns a tuple with the PkiFontID field value
// and a boolean to check if the value has been set.
func (o *FontAutocompleteElementResponse) GetPkiFontIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkiFontID, true
}

// SetPkiFontID sets field value
func (o *FontAutocompleteElementResponse) SetPkiFontID(v int32) {
	o.PkiFontID = v
}

// GetBFontIsactive returns the BFontIsactive field value
func (o *FontAutocompleteElementResponse) GetBFontIsactive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BFontIsactive
}

// GetBFontIsactiveOk returns a tuple with the BFontIsactive field value
// and a boolean to check if the value has been set.
func (o *FontAutocompleteElementResponse) GetBFontIsactiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BFontIsactive, true
}

// SetBFontIsactive sets field value
func (o *FontAutocompleteElementResponse) SetBFontIsactive(v bool) {
	o.BFontIsactive = v
}

func (o FontAutocompleteElementResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FontAutocompleteElementResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sFontName"] = o.SFontName
	toSerialize["pkiFontID"] = o.PkiFontID
	toSerialize["bFontIsactive"] = o.BFontIsactive
	return toSerialize, nil
}

type NullableFontAutocompleteElementResponse struct {
	value *FontAutocompleteElementResponse
	isSet bool
}

func (v NullableFontAutocompleteElementResponse) Get() *FontAutocompleteElementResponse {
	return v.value
}

func (v *NullableFontAutocompleteElementResponse) Set(val *FontAutocompleteElementResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFontAutocompleteElementResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFontAutocompleteElementResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFontAutocompleteElementResponse(val *FontAutocompleteElementResponse) *NullableFontAutocompleteElementResponse {
	return &NullableFontAutocompleteElementResponse{value: val, isSet: true}
}

func (v NullableFontAutocompleteElementResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFontAutocompleteElementResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


