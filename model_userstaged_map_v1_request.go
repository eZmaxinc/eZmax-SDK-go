/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UserstagedMapV1Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserstagedMapV1Request{}

// UserstagedMapV1Request Request for POST /1/object/userstaged/{pkiUserstagedID}/map
type UserstagedMapV1Request struct {
	// The unique ID of the User
	FkiUserID int32 `json:"fkiUserID"`
}

type _UserstagedMapV1Request UserstagedMapV1Request

// NewUserstagedMapV1Request instantiates a new UserstagedMapV1Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserstagedMapV1Request(fkiUserID int32) *UserstagedMapV1Request {
	this := UserstagedMapV1Request{}
	this.FkiUserID = fkiUserID
	return &this
}

// NewUserstagedMapV1RequestWithDefaults instantiates a new UserstagedMapV1Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserstagedMapV1RequestWithDefaults() *UserstagedMapV1Request {
	this := UserstagedMapV1Request{}
	return &this
}

// GetFkiUserID returns the FkiUserID field value
func (o *UserstagedMapV1Request) GetFkiUserID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiUserID
}

// GetFkiUserIDOk returns a tuple with the FkiUserID field value
// and a boolean to check if the value has been set.
func (o *UserstagedMapV1Request) GetFkiUserIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiUserID, true
}

// SetFkiUserID sets field value
func (o *UserstagedMapV1Request) SetFkiUserID(v int32) {
	o.FkiUserID = v
}

func (o UserstagedMapV1Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserstagedMapV1Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["fkiUserID"] = o.FkiUserID
	return toSerialize, nil
}

func (o *UserstagedMapV1Request) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"fkiUserID",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUserstagedMapV1Request := _UserstagedMapV1Request{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUserstagedMapV1Request)

	if err != nil {
		return err
	}

	*o = UserstagedMapV1Request(varUserstagedMapV1Request)

	return err
}

type NullableUserstagedMapV1Request struct {
	value *UserstagedMapV1Request
	isSet bool
}

func (v NullableUserstagedMapV1Request) Get() *UserstagedMapV1Request {
	return v.value
}

func (v *NullableUserstagedMapV1Request) Set(val *UserstagedMapV1Request) {
	v.value = val
	v.isSet = true
}

func (v NullableUserstagedMapV1Request) IsSet() bool {
	return v.isSet
}

func (v *NullableUserstagedMapV1Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserstagedMapV1Request(val *UserstagedMapV1Request) *NullableUserstagedMapV1Request {
	return &NullableUserstagedMapV1Request{value: val, isSet: true}
}

func (v NullableUserstagedMapV1Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserstagedMapV1Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


