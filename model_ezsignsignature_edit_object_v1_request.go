/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsignsignatureEditObjectV1Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsignsignatureEditObjectV1Request{}

// EzsignsignatureEditObjectV1Request Request for PUT /1/object/ezsignsignature/{pkiEzsignsignatureID}
type EzsignsignatureEditObjectV1Request struct {
	ObjEzsignsignature EzsignsignatureRequestCompound `json:"objEzsignsignature"`
}

type _EzsignsignatureEditObjectV1Request EzsignsignatureEditObjectV1Request

// NewEzsignsignatureEditObjectV1Request instantiates a new EzsignsignatureEditObjectV1Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsignsignatureEditObjectV1Request(objEzsignsignature EzsignsignatureRequestCompound) *EzsignsignatureEditObjectV1Request {
	this := EzsignsignatureEditObjectV1Request{}
	this.ObjEzsignsignature = objEzsignsignature
	return &this
}

// NewEzsignsignatureEditObjectV1RequestWithDefaults instantiates a new EzsignsignatureEditObjectV1Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsignsignatureEditObjectV1RequestWithDefaults() *EzsignsignatureEditObjectV1Request {
	this := EzsignsignatureEditObjectV1Request{}
	return &this
}

// GetObjEzsignsignature returns the ObjEzsignsignature field value
func (o *EzsignsignatureEditObjectV1Request) GetObjEzsignsignature() EzsignsignatureRequestCompound {
	if o == nil {
		var ret EzsignsignatureRequestCompound
		return ret
	}

	return o.ObjEzsignsignature
}

// GetObjEzsignsignatureOk returns a tuple with the ObjEzsignsignature field value
// and a boolean to check if the value has been set.
func (o *EzsignsignatureEditObjectV1Request) GetObjEzsignsignatureOk() (*EzsignsignatureRequestCompound, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjEzsignsignature, true
}

// SetObjEzsignsignature sets field value
func (o *EzsignsignatureEditObjectV1Request) SetObjEzsignsignature(v EzsignsignatureRequestCompound) {
	o.ObjEzsignsignature = v
}

func (o EzsignsignatureEditObjectV1Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsignsignatureEditObjectV1Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["objEzsignsignature"] = o.ObjEzsignsignature
	return toSerialize, nil
}

func (o *EzsignsignatureEditObjectV1Request) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"objEzsignsignature",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsignsignatureEditObjectV1Request := _EzsignsignatureEditObjectV1Request{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsignsignatureEditObjectV1Request)

	if err != nil {
		return err
	}

	*o = EzsignsignatureEditObjectV1Request(varEzsignsignatureEditObjectV1Request)

	return err
}

type NullableEzsignsignatureEditObjectV1Request struct {
	value *EzsignsignatureEditObjectV1Request
	isSet bool
}

func (v NullableEzsignsignatureEditObjectV1Request) Get() *EzsignsignatureEditObjectV1Request {
	return v.value
}

func (v *NullableEzsignsignatureEditObjectV1Request) Set(val *EzsignsignatureEditObjectV1Request) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsignsignatureEditObjectV1Request) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsignsignatureEditObjectV1Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsignsignatureEditObjectV1Request(val *EzsignsignatureEditObjectV1Request) *NullableEzsignsignatureEditObjectV1Request {
	return &NullableEzsignsignatureEditObjectV1Request{value: val, isSet: true}
}

func (v NullableEzsignsignatureEditObjectV1Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsignsignatureEditObjectV1Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


