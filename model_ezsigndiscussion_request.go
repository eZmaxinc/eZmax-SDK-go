/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.2
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsigndiscussionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsigndiscussionRequest{}

// EzsigndiscussionRequest An Ezsigndiscussion Object
type EzsigndiscussionRequest struct {
	// The unique ID of the Ezsigndiscussion
	PkiEzsigndiscussionID *int32 `json:"pkiEzsigndiscussionID,omitempty"`
	// The unique ID of the Ezsigndocument
	FkiEzsigndocumentID int32 `json:"fkiEzsigndocumentID"`
	// The page number in the Ezsigndocument for the Ezsigndiscussion
	IEzsigndiscussionPagenumber int32 `json:"iEzsigndiscussionPagenumber"`
	// The x of the Ezsigndiscussion
	IEzsigndiscussionX int32 `json:"iEzsigndiscussionX"`
	// The y of the Ezsigndiscussion
	IEzsigndiscussionY int32 `json:"iEzsigndiscussionY"`
	ObjDiscussion DiscussionRequest `json:"objDiscussion"`
}

type _EzsigndiscussionRequest EzsigndiscussionRequest

// NewEzsigndiscussionRequest instantiates a new EzsigndiscussionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsigndiscussionRequest(fkiEzsigndocumentID int32, iEzsigndiscussionPagenumber int32, iEzsigndiscussionX int32, iEzsigndiscussionY int32, objDiscussion DiscussionRequest) *EzsigndiscussionRequest {
	this := EzsigndiscussionRequest{}
	this.FkiEzsigndocumentID = fkiEzsigndocumentID
	this.IEzsigndiscussionPagenumber = iEzsigndiscussionPagenumber
	this.IEzsigndiscussionX = iEzsigndiscussionX
	this.IEzsigndiscussionY = iEzsigndiscussionY
	this.ObjDiscussion = objDiscussion
	return &this
}

// NewEzsigndiscussionRequestWithDefaults instantiates a new EzsigndiscussionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsigndiscussionRequestWithDefaults() *EzsigndiscussionRequest {
	this := EzsigndiscussionRequest{}
	return &this
}

// GetPkiEzsigndiscussionID returns the PkiEzsigndiscussionID field value if set, zero value otherwise.
func (o *EzsigndiscussionRequest) GetPkiEzsigndiscussionID() int32 {
	if o == nil || IsNil(o.PkiEzsigndiscussionID) {
		var ret int32
		return ret
	}
	return *o.PkiEzsigndiscussionID
}

// GetPkiEzsigndiscussionIDOk returns a tuple with the PkiEzsigndiscussionID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigndiscussionRequest) GetPkiEzsigndiscussionIDOk() (*int32, bool) {
	if o == nil || IsNil(o.PkiEzsigndiscussionID) {
		return nil, false
	}
	return o.PkiEzsigndiscussionID, true
}

// HasPkiEzsigndiscussionID returns a boolean if a field has been set.
func (o *EzsigndiscussionRequest) HasPkiEzsigndiscussionID() bool {
	if o != nil && !IsNil(o.PkiEzsigndiscussionID) {
		return true
	}

	return false
}

// SetPkiEzsigndiscussionID gets a reference to the given int32 and assigns it to the PkiEzsigndiscussionID field.
func (o *EzsigndiscussionRequest) SetPkiEzsigndiscussionID(v int32) {
	o.PkiEzsigndiscussionID = &v
}

// GetFkiEzsigndocumentID returns the FkiEzsigndocumentID field value
func (o *EzsigndiscussionRequest) GetFkiEzsigndocumentID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiEzsigndocumentID
}

// GetFkiEzsigndocumentIDOk returns a tuple with the FkiEzsigndocumentID field value
// and a boolean to check if the value has been set.
func (o *EzsigndiscussionRequest) GetFkiEzsigndocumentIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiEzsigndocumentID, true
}

// SetFkiEzsigndocumentID sets field value
func (o *EzsigndiscussionRequest) SetFkiEzsigndocumentID(v int32) {
	o.FkiEzsigndocumentID = v
}

// GetIEzsigndiscussionPagenumber returns the IEzsigndiscussionPagenumber field value
func (o *EzsigndiscussionRequest) GetIEzsigndiscussionPagenumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IEzsigndiscussionPagenumber
}

// GetIEzsigndiscussionPagenumberOk returns a tuple with the IEzsigndiscussionPagenumber field value
// and a boolean to check if the value has been set.
func (o *EzsigndiscussionRequest) GetIEzsigndiscussionPagenumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IEzsigndiscussionPagenumber, true
}

// SetIEzsigndiscussionPagenumber sets field value
func (o *EzsigndiscussionRequest) SetIEzsigndiscussionPagenumber(v int32) {
	o.IEzsigndiscussionPagenumber = v
}

// GetIEzsigndiscussionX returns the IEzsigndiscussionX field value
func (o *EzsigndiscussionRequest) GetIEzsigndiscussionX() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IEzsigndiscussionX
}

// GetIEzsigndiscussionXOk returns a tuple with the IEzsigndiscussionX field value
// and a boolean to check if the value has been set.
func (o *EzsigndiscussionRequest) GetIEzsigndiscussionXOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IEzsigndiscussionX, true
}

// SetIEzsigndiscussionX sets field value
func (o *EzsigndiscussionRequest) SetIEzsigndiscussionX(v int32) {
	o.IEzsigndiscussionX = v
}

// GetIEzsigndiscussionY returns the IEzsigndiscussionY field value
func (o *EzsigndiscussionRequest) GetIEzsigndiscussionY() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IEzsigndiscussionY
}

// GetIEzsigndiscussionYOk returns a tuple with the IEzsigndiscussionY field value
// and a boolean to check if the value has been set.
func (o *EzsigndiscussionRequest) GetIEzsigndiscussionYOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IEzsigndiscussionY, true
}

// SetIEzsigndiscussionY sets field value
func (o *EzsigndiscussionRequest) SetIEzsigndiscussionY(v int32) {
	o.IEzsigndiscussionY = v
}

// GetObjDiscussion returns the ObjDiscussion field value
func (o *EzsigndiscussionRequest) GetObjDiscussion() DiscussionRequest {
	if o == nil {
		var ret DiscussionRequest
		return ret
	}

	return o.ObjDiscussion
}

// GetObjDiscussionOk returns a tuple with the ObjDiscussion field value
// and a boolean to check if the value has been set.
func (o *EzsigndiscussionRequest) GetObjDiscussionOk() (*DiscussionRequest, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjDiscussion, true
}

// SetObjDiscussion sets field value
func (o *EzsigndiscussionRequest) SetObjDiscussion(v DiscussionRequest) {
	o.ObjDiscussion = v
}

func (o EzsigndiscussionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsigndiscussionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PkiEzsigndiscussionID) {
		toSerialize["pkiEzsigndiscussionID"] = o.PkiEzsigndiscussionID
	}
	toSerialize["fkiEzsigndocumentID"] = o.FkiEzsigndocumentID
	toSerialize["iEzsigndiscussionPagenumber"] = o.IEzsigndiscussionPagenumber
	toSerialize["iEzsigndiscussionX"] = o.IEzsigndiscussionX
	toSerialize["iEzsigndiscussionY"] = o.IEzsigndiscussionY
	toSerialize["objDiscussion"] = o.ObjDiscussion
	return toSerialize, nil
}

func (o *EzsigndiscussionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"fkiEzsigndocumentID",
		"iEzsigndiscussionPagenumber",
		"iEzsigndiscussionX",
		"iEzsigndiscussionY",
		"objDiscussion",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsigndiscussionRequest := _EzsigndiscussionRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsigndiscussionRequest)

	if err != nil {
		return err
	}

	*o = EzsigndiscussionRequest(varEzsigndiscussionRequest)

	return err
}

type NullableEzsigndiscussionRequest struct {
	value *EzsigndiscussionRequest
	isSet bool
}

func (v NullableEzsigndiscussionRequest) Get() *EzsigndiscussionRequest {
	return v.value
}

func (v *NullableEzsigndiscussionRequest) Set(val *EzsigndiscussionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsigndiscussionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsigndiscussionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsigndiscussionRequest(val *EzsigndiscussionRequest) *NullableEzsigndiscussionRequest {
	return &NullableEzsigndiscussionRequest{value: val, isSet: true}
}

func (v NullableEzsigndiscussionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsigndiscussionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


