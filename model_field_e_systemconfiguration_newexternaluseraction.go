/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"fmt"
)

// FieldESystemconfigurationNewexternaluseraction The action we do when a new external user connects itself
type FieldESystemconfigurationNewexternaluseraction string

// List of Field-eSystemconfigurationNewexternaluseraction
const (
	STAGE FieldESystemconfigurationNewexternaluseraction = "Stage"
	AUTO_CREATE FieldESystemconfigurationNewexternaluseraction = "AutoCreate"
)

// All allowed values of FieldESystemconfigurationNewexternaluseraction enum
var AllowedFieldESystemconfigurationNewexternaluseractionEnumValues = []FieldESystemconfigurationNewexternaluseraction{
	"Stage",
	"AutoCreate",
}

func (v *FieldESystemconfigurationNewexternaluseraction) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := FieldESystemconfigurationNewexternaluseraction(value)
	for _, existing := range AllowedFieldESystemconfigurationNewexternaluseractionEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid FieldESystemconfigurationNewexternaluseraction", value)
}

// NewFieldESystemconfigurationNewexternaluseractionFromValue returns a pointer to a valid FieldESystemconfigurationNewexternaluseraction
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewFieldESystemconfigurationNewexternaluseractionFromValue(v string) (*FieldESystemconfigurationNewexternaluseraction, error) {
	ev := FieldESystemconfigurationNewexternaluseraction(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for FieldESystemconfigurationNewexternaluseraction: valid values are %v", v, AllowedFieldESystemconfigurationNewexternaluseractionEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v FieldESystemconfigurationNewexternaluseraction) IsValid() bool {
	for _, existing := range AllowedFieldESystemconfigurationNewexternaluseractionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Field-eSystemconfigurationNewexternaluseraction value
func (v FieldESystemconfigurationNewexternaluseraction) Ptr() *FieldESystemconfigurationNewexternaluseraction {
	return &v
}

type NullableFieldESystemconfigurationNewexternaluseraction struct {
	value *FieldESystemconfigurationNewexternaluseraction
	isSet bool
}

func (v NullableFieldESystemconfigurationNewexternaluseraction) Get() *FieldESystemconfigurationNewexternaluseraction {
	return v.value
}

func (v *NullableFieldESystemconfigurationNewexternaluseraction) Set(val *FieldESystemconfigurationNewexternaluseraction) {
	v.value = val
	v.isSet = true
}

func (v NullableFieldESystemconfigurationNewexternaluseraction) IsSet() bool {
	return v.isSet
}

func (v *NullableFieldESystemconfigurationNewexternaluseraction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFieldESystemconfigurationNewexternaluseraction(val *FieldESystemconfigurationNewexternaluseraction) *NullableFieldESystemconfigurationNewexternaluseraction {
	return &NullableFieldESystemconfigurationNewexternaluseraction{value: val, isSet: true}
}

func (v NullableFieldESystemconfigurationNewexternaluseraction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFieldESystemconfigurationNewexternaluseraction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

