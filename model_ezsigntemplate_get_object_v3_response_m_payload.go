/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsigntemplateGetObjectV3ResponseMPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsigntemplateGetObjectV3ResponseMPayload{}

// EzsigntemplateGetObjectV3ResponseMPayload Payload for GET /3/object/ezsigntemplate/{pkiEzsigntemplateID}
type EzsigntemplateGetObjectV3ResponseMPayload struct {
	ObjEzsigntemplate EzsigntemplateResponseCompoundV3 `json:"objEzsigntemplate"`
}

type _EzsigntemplateGetObjectV3ResponseMPayload EzsigntemplateGetObjectV3ResponseMPayload

// NewEzsigntemplateGetObjectV3ResponseMPayload instantiates a new EzsigntemplateGetObjectV3ResponseMPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsigntemplateGetObjectV3ResponseMPayload(objEzsigntemplate EzsigntemplateResponseCompoundV3) *EzsigntemplateGetObjectV3ResponseMPayload {
	this := EzsigntemplateGetObjectV3ResponseMPayload{}
	this.ObjEzsigntemplate = objEzsigntemplate
	return &this
}

// NewEzsigntemplateGetObjectV3ResponseMPayloadWithDefaults instantiates a new EzsigntemplateGetObjectV3ResponseMPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsigntemplateGetObjectV3ResponseMPayloadWithDefaults() *EzsigntemplateGetObjectV3ResponseMPayload {
	this := EzsigntemplateGetObjectV3ResponseMPayload{}
	return &this
}

// GetObjEzsigntemplate returns the ObjEzsigntemplate field value
func (o *EzsigntemplateGetObjectV3ResponseMPayload) GetObjEzsigntemplate() EzsigntemplateResponseCompoundV3 {
	if o == nil {
		var ret EzsigntemplateResponseCompoundV3
		return ret
	}

	return o.ObjEzsigntemplate
}

// GetObjEzsigntemplateOk returns a tuple with the ObjEzsigntemplate field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplateGetObjectV3ResponseMPayload) GetObjEzsigntemplateOk() (*EzsigntemplateResponseCompoundV3, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjEzsigntemplate, true
}

// SetObjEzsigntemplate sets field value
func (o *EzsigntemplateGetObjectV3ResponseMPayload) SetObjEzsigntemplate(v EzsigntemplateResponseCompoundV3) {
	o.ObjEzsigntemplate = v
}

func (o EzsigntemplateGetObjectV3ResponseMPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsigntemplateGetObjectV3ResponseMPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["objEzsigntemplate"] = o.ObjEzsigntemplate
	return toSerialize, nil
}

func (o *EzsigntemplateGetObjectV3ResponseMPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"objEzsigntemplate",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsigntemplateGetObjectV3ResponseMPayload := _EzsigntemplateGetObjectV3ResponseMPayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsigntemplateGetObjectV3ResponseMPayload)

	if err != nil {
		return err
	}

	*o = EzsigntemplateGetObjectV3ResponseMPayload(varEzsigntemplateGetObjectV3ResponseMPayload)

	return err
}

type NullableEzsigntemplateGetObjectV3ResponseMPayload struct {
	value *EzsigntemplateGetObjectV3ResponseMPayload
	isSet bool
}

func (v NullableEzsigntemplateGetObjectV3ResponseMPayload) Get() *EzsigntemplateGetObjectV3ResponseMPayload {
	return v.value
}

func (v *NullableEzsigntemplateGetObjectV3ResponseMPayload) Set(val *EzsigntemplateGetObjectV3ResponseMPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsigntemplateGetObjectV3ResponseMPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsigntemplateGetObjectV3ResponseMPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsigntemplateGetObjectV3ResponseMPayload(val *EzsigntemplateGetObjectV3ResponseMPayload) *NullableEzsigntemplateGetObjectV3ResponseMPayload {
	return &NullableEzsigntemplateGetObjectV3ResponseMPayload{value: val, isSet: true}
}

func (v NullableEzsigntemplateGetObjectV3ResponseMPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsigntemplateGetObjectV3ResponseMPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


