/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.2
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsignimportfolderResponseCompound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsignimportfolderResponseCompound{}

// EzsignimportfolderResponseCompound A Ezsignimportfolder Object
type EzsignimportfolderResponseCompound struct {
	// The unique ID of the Ezsignimportfolder
	PkiEzsignimportfolderID int32 `json:"pkiEzsignimportfolderID"`
	// The name of the Ezsignimportfolder
	SEzsignimportfolderName string `json:"sEzsignimportfolderName" validate:"regexp=^.{0,150}$"`
	AObjEzsignimportdocument []CustomEzsignimportdocumentResponse `json:"a_objEzsignimportdocument,omitempty"`
}

type _EzsignimportfolderResponseCompound EzsignimportfolderResponseCompound

// NewEzsignimportfolderResponseCompound instantiates a new EzsignimportfolderResponseCompound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsignimportfolderResponseCompound(pkiEzsignimportfolderID int32, sEzsignimportfolderName string) *EzsignimportfolderResponseCompound {
	this := EzsignimportfolderResponseCompound{}
	this.PkiEzsignimportfolderID = pkiEzsignimportfolderID
	this.SEzsignimportfolderName = sEzsignimportfolderName
	return &this
}

// NewEzsignimportfolderResponseCompoundWithDefaults instantiates a new EzsignimportfolderResponseCompound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsignimportfolderResponseCompoundWithDefaults() *EzsignimportfolderResponseCompound {
	this := EzsignimportfolderResponseCompound{}
	return &this
}

// GetPkiEzsignimportfolderID returns the PkiEzsignimportfolderID field value
func (o *EzsignimportfolderResponseCompound) GetPkiEzsignimportfolderID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PkiEzsignimportfolderID
}

// GetPkiEzsignimportfolderIDOk returns a tuple with the PkiEzsignimportfolderID field value
// and a boolean to check if the value has been set.
func (o *EzsignimportfolderResponseCompound) GetPkiEzsignimportfolderIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkiEzsignimportfolderID, true
}

// SetPkiEzsignimportfolderID sets field value
func (o *EzsignimportfolderResponseCompound) SetPkiEzsignimportfolderID(v int32) {
	o.PkiEzsignimportfolderID = v
}

// GetSEzsignimportfolderName returns the SEzsignimportfolderName field value
func (o *EzsignimportfolderResponseCompound) GetSEzsignimportfolderName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SEzsignimportfolderName
}

// GetSEzsignimportfolderNameOk returns a tuple with the SEzsignimportfolderName field value
// and a boolean to check if the value has been set.
func (o *EzsignimportfolderResponseCompound) GetSEzsignimportfolderNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SEzsignimportfolderName, true
}

// SetSEzsignimportfolderName sets field value
func (o *EzsignimportfolderResponseCompound) SetSEzsignimportfolderName(v string) {
	o.SEzsignimportfolderName = v
}

// GetAObjEzsignimportdocument returns the AObjEzsignimportdocument field value if set, zero value otherwise.
func (o *EzsignimportfolderResponseCompound) GetAObjEzsignimportdocument() []CustomEzsignimportdocumentResponse {
	if o == nil || IsNil(o.AObjEzsignimportdocument) {
		var ret []CustomEzsignimportdocumentResponse
		return ret
	}
	return o.AObjEzsignimportdocument
}

// GetAObjEzsignimportdocumentOk returns a tuple with the AObjEzsignimportdocument field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignimportfolderResponseCompound) GetAObjEzsignimportdocumentOk() ([]CustomEzsignimportdocumentResponse, bool) {
	if o == nil || IsNil(o.AObjEzsignimportdocument) {
		return nil, false
	}
	return o.AObjEzsignimportdocument, true
}

// HasAObjEzsignimportdocument returns a boolean if a field has been set.
func (o *EzsignimportfolderResponseCompound) HasAObjEzsignimportdocument() bool {
	if o != nil && !IsNil(o.AObjEzsignimportdocument) {
		return true
	}

	return false
}

// SetAObjEzsignimportdocument gets a reference to the given []CustomEzsignimportdocumentResponse and assigns it to the AObjEzsignimportdocument field.
func (o *EzsignimportfolderResponseCompound) SetAObjEzsignimportdocument(v []CustomEzsignimportdocumentResponse) {
	o.AObjEzsignimportdocument = v
}

func (o EzsignimportfolderResponseCompound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsignimportfolderResponseCompound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pkiEzsignimportfolderID"] = o.PkiEzsignimportfolderID
	toSerialize["sEzsignimportfolderName"] = o.SEzsignimportfolderName
	if !IsNil(o.AObjEzsignimportdocument) {
		toSerialize["a_objEzsignimportdocument"] = o.AObjEzsignimportdocument
	}
	return toSerialize, nil
}

func (o *EzsignimportfolderResponseCompound) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pkiEzsignimportfolderID",
		"sEzsignimportfolderName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsignimportfolderResponseCompound := _EzsignimportfolderResponseCompound{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsignimportfolderResponseCompound)

	if err != nil {
		return err
	}

	*o = EzsignimportfolderResponseCompound(varEzsignimportfolderResponseCompound)

	return err
}

type NullableEzsignimportfolderResponseCompound struct {
	value *EzsignimportfolderResponseCompound
	isSet bool
}

func (v NullableEzsignimportfolderResponseCompound) Get() *EzsignimportfolderResponseCompound {
	return v.value
}

func (v *NullableEzsignimportfolderResponseCompound) Set(val *EzsignimportfolderResponseCompound) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsignimportfolderResponseCompound) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsignimportfolderResponseCompound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsignimportfolderResponseCompound(val *EzsignimportfolderResponseCompound) *NullableEzsignimportfolderResponseCompound {
	return &NullableEzsignimportfolderResponseCompound{value: val, isSet: true}
}

func (v NullableEzsignimportfolderResponseCompound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsignimportfolderResponseCompound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


