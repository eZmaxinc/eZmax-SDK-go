/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// checks if the VariableexpenseGetObjectV2ResponseMPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VariableexpenseGetObjectV2ResponseMPayload{}

// VariableexpenseGetObjectV2ResponseMPayload Payload for GET /2/object/variableexpense/{pkiVariableexpenseID}
type VariableexpenseGetObjectV2ResponseMPayload struct {
	ObjVariableexpense VariableexpenseResponseCompound `json:"objVariableexpense"`
}

// NewVariableexpenseGetObjectV2ResponseMPayload instantiates a new VariableexpenseGetObjectV2ResponseMPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVariableexpenseGetObjectV2ResponseMPayload(objVariableexpense VariableexpenseResponseCompound) *VariableexpenseGetObjectV2ResponseMPayload {
	this := VariableexpenseGetObjectV2ResponseMPayload{}
	this.ObjVariableexpense = objVariableexpense
	return &this
}

// NewVariableexpenseGetObjectV2ResponseMPayloadWithDefaults instantiates a new VariableexpenseGetObjectV2ResponseMPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVariableexpenseGetObjectV2ResponseMPayloadWithDefaults() *VariableexpenseGetObjectV2ResponseMPayload {
	this := VariableexpenseGetObjectV2ResponseMPayload{}
	return &this
}

// GetObjVariableexpense returns the ObjVariableexpense field value
func (o *VariableexpenseGetObjectV2ResponseMPayload) GetObjVariableexpense() VariableexpenseResponseCompound {
	if o == nil {
		var ret VariableexpenseResponseCompound
		return ret
	}

	return o.ObjVariableexpense
}

// GetObjVariableexpenseOk returns a tuple with the ObjVariableexpense field value
// and a boolean to check if the value has been set.
func (o *VariableexpenseGetObjectV2ResponseMPayload) GetObjVariableexpenseOk() (*VariableexpenseResponseCompound, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjVariableexpense, true
}

// SetObjVariableexpense sets field value
func (o *VariableexpenseGetObjectV2ResponseMPayload) SetObjVariableexpense(v VariableexpenseResponseCompound) {
	o.ObjVariableexpense = v
}

func (o VariableexpenseGetObjectV2ResponseMPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VariableexpenseGetObjectV2ResponseMPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["objVariableexpense"] = o.ObjVariableexpense
	return toSerialize, nil
}

type NullableVariableexpenseGetObjectV2ResponseMPayload struct {
	value *VariableexpenseGetObjectV2ResponseMPayload
	isSet bool
}

func (v NullableVariableexpenseGetObjectV2ResponseMPayload) Get() *VariableexpenseGetObjectV2ResponseMPayload {
	return v.value
}

func (v *NullableVariableexpenseGetObjectV2ResponseMPayload) Set(val *VariableexpenseGetObjectV2ResponseMPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableVariableexpenseGetObjectV2ResponseMPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableVariableexpenseGetObjectV2ResponseMPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVariableexpenseGetObjectV2ResponseMPayload(val *VariableexpenseGetObjectV2ResponseMPayload) *NullableVariableexpenseGetObjectV2ResponseMPayload {
	return &NullableVariableexpenseGetObjectV2ResponseMPayload{value: val, isSet: true}
}

func (v NullableVariableexpenseGetObjectV2ResponseMPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVariableexpenseGetObjectV2ResponseMPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


