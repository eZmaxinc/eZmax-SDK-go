/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// checks if the MultilingualEzsignsigningreasonDescription type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultilingualEzsignsigningreasonDescription{}

// MultilingualEzsignsigningreasonDescription The description of the Ezsignsigningreason
type MultilingualEzsignsigningreasonDescription struct {
	// The description of the Ezsignsigningreason in French
	SEzsignsigningreasonDescription1 *string `json:"sEzsignsigningreasonDescription1,omitempty"`
	// The description of the Ezsignsigningreason in English
	SEzsignsigningreasonDescription2 *string `json:"sEzsignsigningreasonDescription2,omitempty"`
}

// NewMultilingualEzsignsigningreasonDescription instantiates a new MultilingualEzsignsigningreasonDescription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultilingualEzsignsigningreasonDescription() *MultilingualEzsignsigningreasonDescription {
	this := MultilingualEzsignsigningreasonDescription{}
	return &this
}

// NewMultilingualEzsignsigningreasonDescriptionWithDefaults instantiates a new MultilingualEzsignsigningreasonDescription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultilingualEzsignsigningreasonDescriptionWithDefaults() *MultilingualEzsignsigningreasonDescription {
	this := MultilingualEzsignsigningreasonDescription{}
	return &this
}

// GetSEzsignsigningreasonDescription1 returns the SEzsignsigningreasonDescription1 field value if set, zero value otherwise.
func (o *MultilingualEzsignsigningreasonDescription) GetSEzsignsigningreasonDescription1() string {
	if o == nil || IsNil(o.SEzsignsigningreasonDescription1) {
		var ret string
		return ret
	}
	return *o.SEzsignsigningreasonDescription1
}

// GetSEzsignsigningreasonDescription1Ok returns a tuple with the SEzsignsigningreasonDescription1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultilingualEzsignsigningreasonDescription) GetSEzsignsigningreasonDescription1Ok() (*string, bool) {
	if o == nil || IsNil(o.SEzsignsigningreasonDescription1) {
		return nil, false
	}
	return o.SEzsignsigningreasonDescription1, true
}

// HasSEzsignsigningreasonDescription1 returns a boolean if a field has been set.
func (o *MultilingualEzsignsigningreasonDescription) HasSEzsignsigningreasonDescription1() bool {
	if o != nil && !IsNil(o.SEzsignsigningreasonDescription1) {
		return true
	}

	return false
}

// SetSEzsignsigningreasonDescription1 gets a reference to the given string and assigns it to the SEzsignsigningreasonDescription1 field.
func (o *MultilingualEzsignsigningreasonDescription) SetSEzsignsigningreasonDescription1(v string) {
	o.SEzsignsigningreasonDescription1 = &v
}

// GetSEzsignsigningreasonDescription2 returns the SEzsignsigningreasonDescription2 field value if set, zero value otherwise.
func (o *MultilingualEzsignsigningreasonDescription) GetSEzsignsigningreasonDescription2() string {
	if o == nil || IsNil(o.SEzsignsigningreasonDescription2) {
		var ret string
		return ret
	}
	return *o.SEzsignsigningreasonDescription2
}

// GetSEzsignsigningreasonDescription2Ok returns a tuple with the SEzsignsigningreasonDescription2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultilingualEzsignsigningreasonDescription) GetSEzsignsigningreasonDescription2Ok() (*string, bool) {
	if o == nil || IsNil(o.SEzsignsigningreasonDescription2) {
		return nil, false
	}
	return o.SEzsignsigningreasonDescription2, true
}

// HasSEzsignsigningreasonDescription2 returns a boolean if a field has been set.
func (o *MultilingualEzsignsigningreasonDescription) HasSEzsignsigningreasonDescription2() bool {
	if o != nil && !IsNil(o.SEzsignsigningreasonDescription2) {
		return true
	}

	return false
}

// SetSEzsignsigningreasonDescription2 gets a reference to the given string and assigns it to the SEzsignsigningreasonDescription2 field.
func (o *MultilingualEzsignsigningreasonDescription) SetSEzsignsigningreasonDescription2(v string) {
	o.SEzsignsigningreasonDescription2 = &v
}

func (o MultilingualEzsignsigningreasonDescription) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultilingualEzsignsigningreasonDescription) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SEzsignsigningreasonDescription1) {
		toSerialize["sEzsignsigningreasonDescription1"] = o.SEzsignsigningreasonDescription1
	}
	if !IsNil(o.SEzsignsigningreasonDescription2) {
		toSerialize["sEzsignsigningreasonDescription2"] = o.SEzsignsigningreasonDescription2
	}
	return toSerialize, nil
}

type NullableMultilingualEzsignsigningreasonDescription struct {
	value *MultilingualEzsignsigningreasonDescription
	isSet bool
}

func (v NullableMultilingualEzsignsigningreasonDescription) Get() *MultilingualEzsignsigningreasonDescription {
	return v.value
}

func (v *NullableMultilingualEzsignsigningreasonDescription) Set(val *MultilingualEzsignsigningreasonDescription) {
	v.value = val
	v.isSet = true
}

func (v NullableMultilingualEzsignsigningreasonDescription) IsSet() bool {
	return v.isSet
}

func (v *NullableMultilingualEzsignsigningreasonDescription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultilingualEzsignsigningreasonDescription(val *MultilingualEzsignsigningreasonDescription) *NullableMultilingualEzsignsigningreasonDescription {
	return &NullableMultilingualEzsignsigningreasonDescription{value: val, isSet: true}
}

func (v NullableMultilingualEzsignsigningreasonDescription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultilingualEzsignsigningreasonDescription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


