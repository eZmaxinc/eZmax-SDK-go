/*
eZmax API Definition

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.1.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// EzsigndocumentGetWordsPositionsV1Request Request for the /1/object/ezsigndocument/{pkiEzsigndocumentID}/getWordsPositions API Request
type EzsigndocumentGetWordsPositionsV1Request struct {
	ASWords []string `json:"a_sWords"`
}

// NewEzsigndocumentGetWordsPositionsV1Request instantiates a new EzsigndocumentGetWordsPositionsV1Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsigndocumentGetWordsPositionsV1Request(aSWords []string) *EzsigndocumentGetWordsPositionsV1Request {
	this := EzsigndocumentGetWordsPositionsV1Request{}
	this.ASWords = aSWords
	return &this
}

// NewEzsigndocumentGetWordsPositionsV1RequestWithDefaults instantiates a new EzsigndocumentGetWordsPositionsV1Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsigndocumentGetWordsPositionsV1RequestWithDefaults() *EzsigndocumentGetWordsPositionsV1Request {
	this := EzsigndocumentGetWordsPositionsV1Request{}
	return &this
}

// GetASWords returns the ASWords field value
func (o *EzsigndocumentGetWordsPositionsV1Request) GetASWords() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ASWords
}

// GetASWordsOk returns a tuple with the ASWords field value
// and a boolean to check if the value has been set.
func (o *EzsigndocumentGetWordsPositionsV1Request) GetASWordsOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ASWords, true
}

// SetASWords sets field value
func (o *EzsigndocumentGetWordsPositionsV1Request) SetASWords(v []string) {
	o.ASWords = v
}

func (o EzsigndocumentGetWordsPositionsV1Request) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["a_sWords"] = o.ASWords
	}
	return json.Marshal(toSerialize)
}

type NullableEzsigndocumentGetWordsPositionsV1Request struct {
	value *EzsigndocumentGetWordsPositionsV1Request
	isSet bool
}

func (v NullableEzsigndocumentGetWordsPositionsV1Request) Get() *EzsigndocumentGetWordsPositionsV1Request {
	return v.value
}

func (v *NullableEzsigndocumentGetWordsPositionsV1Request) Set(val *EzsigndocumentGetWordsPositionsV1Request) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsigndocumentGetWordsPositionsV1Request) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsigndocumentGetWordsPositionsV1Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsigndocumentGetWordsPositionsV1Request(val *EzsigndocumentGetWordsPositionsV1Request) *NullableEzsigndocumentGetWordsPositionsV1Request {
	return &NullableEzsigndocumentGetWordsPositionsV1Request{value: val, isSet: true}
}

func (v NullableEzsigndocumentGetWordsPositionsV1Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsigndocumentGetWordsPositionsV1Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


