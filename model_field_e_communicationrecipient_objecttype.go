/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"fmt"
)

// FieldECommunicationrecipientObjecttype The object type for the Communicationrecipient
type FieldECommunicationrecipientObjecttype string

// List of Field-eCommunicationrecipientObjecttype
const (
	AGENT FieldECommunicationrecipientObjecttype = "Agent"
	AGENTINCORPORATION FieldECommunicationrecipientObjecttype = "Agentincorporation"
	ASSISTANT FieldECommunicationrecipientObjecttype = "Assistant"
	BROKER FieldECommunicationrecipientObjecttype = "Broker"
	CONTACT FieldECommunicationrecipientObjecttype = "Contact"
	CUSTOMER FieldECommunicationrecipientObjecttype = "Customer"
	EMPLOYEE FieldECommunicationrecipientObjecttype = "Employee"
	EXTERNALBROKER FieldECommunicationrecipientObjecttype = "Externalbroker"
	EZCOMAGENT FieldECommunicationrecipientObjecttype = "Ezcomagent"
	EZCOMCOMPANY FieldECommunicationrecipientObjecttype = "Ezcomcompany"
	EZSIGNSIGNER FieldECommunicationrecipientObjecttype = "Ezsignsigner"
	FRANCHISEOFFICE FieldECommunicationrecipientObjecttype = "Franchiseoffice"
	NOTARY FieldECommunicationrecipientObjecttype = "Notary"
	REWARDMEMBER FieldECommunicationrecipientObjecttype = "Rewardmember"
	SUPPLIER FieldECommunicationrecipientObjecttype = "Supplier"
	USER FieldECommunicationrecipientObjecttype = "User"
)

// All allowed values of FieldECommunicationrecipientObjecttype enum
var AllowedFieldECommunicationrecipientObjecttypeEnumValues = []FieldECommunicationrecipientObjecttype{
	"Agent",
	"Agentincorporation",
	"Assistant",
	"Broker",
	"Contact",
	"Customer",
	"Employee",
	"Externalbroker",
	"Ezcomagent",
	"Ezcomcompany",
	"Ezsignsigner",
	"Franchiseoffice",
	"Notary",
	"Rewardmember",
	"Supplier",
	"User",
}

func (v *FieldECommunicationrecipientObjecttype) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := FieldECommunicationrecipientObjecttype(value)
	for _, existing := range AllowedFieldECommunicationrecipientObjecttypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid FieldECommunicationrecipientObjecttype", value)
}

// NewFieldECommunicationrecipientObjecttypeFromValue returns a pointer to a valid FieldECommunicationrecipientObjecttype
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewFieldECommunicationrecipientObjecttypeFromValue(v string) (*FieldECommunicationrecipientObjecttype, error) {
	ev := FieldECommunicationrecipientObjecttype(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for FieldECommunicationrecipientObjecttype: valid values are %v", v, AllowedFieldECommunicationrecipientObjecttypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v FieldECommunicationrecipientObjecttype) IsValid() bool {
	for _, existing := range AllowedFieldECommunicationrecipientObjecttypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Field-eCommunicationrecipientObjecttype value
func (v FieldECommunicationrecipientObjecttype) Ptr() *FieldECommunicationrecipientObjecttype {
	return &v
}

type NullableFieldECommunicationrecipientObjecttype struct {
	value *FieldECommunicationrecipientObjecttype
	isSet bool
}

func (v NullableFieldECommunicationrecipientObjecttype) Get() *FieldECommunicationrecipientObjecttype {
	return v.value
}

func (v *NullableFieldECommunicationrecipientObjecttype) Set(val *FieldECommunicationrecipientObjecttype) {
	v.value = val
	v.isSet = true
}

func (v NullableFieldECommunicationrecipientObjecttype) IsSet() bool {
	return v.isSet
}

func (v *NullableFieldECommunicationrecipientObjecttype) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFieldECommunicationrecipientObjecttype(val *FieldECommunicationrecipientObjecttype) *NullableFieldECommunicationrecipientObjecttype {
	return &NullableFieldECommunicationrecipientObjecttype{value: val, isSet: true}
}

func (v NullableFieldECommunicationrecipientObjecttype) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFieldECommunicationrecipientObjecttype) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

