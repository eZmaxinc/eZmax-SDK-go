/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.2
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"fmt"
)

// ComputedECommunicationDirection The direction of the Communication
type ComputedECommunicationDirection string

// List of Computed-eCommunicationDirection
const (
	OUTBOUND ComputedECommunicationDirection = "Outbound"
	INBOUND ComputedECommunicationDirection = "Inbound"
)

// All allowed values of ComputedECommunicationDirection enum
var AllowedComputedECommunicationDirectionEnumValues = []ComputedECommunicationDirection{
	"Outbound",
	"Inbound",
}

func (v *ComputedECommunicationDirection) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ComputedECommunicationDirection(value)
	for _, existing := range AllowedComputedECommunicationDirectionEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ComputedECommunicationDirection", value)
}

// NewComputedECommunicationDirectionFromValue returns a pointer to a valid ComputedECommunicationDirection
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewComputedECommunicationDirectionFromValue(v string) (*ComputedECommunicationDirection, error) {
	ev := ComputedECommunicationDirection(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ComputedECommunicationDirection: valid values are %v", v, AllowedComputedECommunicationDirectionEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ComputedECommunicationDirection) IsValid() bool {
	for _, existing := range AllowedComputedECommunicationDirectionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Computed-eCommunicationDirection value
func (v ComputedECommunicationDirection) Ptr() *ComputedECommunicationDirection {
	return &v
}

type NullableComputedECommunicationDirection struct {
	value *ComputedECommunicationDirection
	isSet bool
}

func (v NullableComputedECommunicationDirection) Get() *ComputedECommunicationDirection {
	return v.value
}

func (v *NullableComputedECommunicationDirection) Set(val *ComputedECommunicationDirection) {
	v.value = val
	v.isSet = true
}

func (v NullableComputedECommunicationDirection) IsSet() bool {
	return v.isSet
}

func (v *NullableComputedECommunicationDirection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComputedECommunicationDirection(val *ComputedECommunicationDirection) *NullableComputedECommunicationDirection {
	return &NullableComputedECommunicationDirection{value: val, isSet: true}
}

func (v NullableComputedECommunicationDirection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComputedECommunicationDirection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

