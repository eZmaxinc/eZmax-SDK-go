/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// checks if the EzsigntemplatepackageResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsigntemplatepackageResponse{}

// EzsigntemplatepackageResponse A Ezsigntemplatepackage Object
type EzsigntemplatepackageResponse struct {
	// The unique ID of the Ezsigntemplatepackage
	PkiEzsigntemplatepackageID int32 `json:"pkiEzsigntemplatepackageID"`
	// The unique ID of the Ezsignfoldertype.
	FkiEzsignfoldertypeID int32 `json:"fkiEzsignfoldertypeID"`
	// The unique ID of the Language.  Valid values:  |Value|Description| |-|-| |1|French| |2|English|
	FkiLanguageID int32 `json:"fkiLanguageID"`
	// The Name of the Language in the language of the requester
	SLanguageNameX string `json:"sLanguageNameX"`
	// The description of the Ezsigntemplatepackage
	SEzsigntemplatepackageDescription string `json:"sEzsigntemplatepackageDescription"`
	// Whether the Ezsigntemplatepackage can be accessed by admin users only (eUserType=Normal)
	BEzsigntemplatepackageAdminonly bool `json:"bEzsigntemplatepackageAdminonly"`
	// Whether the Ezsignbulksend was automatically modified and needs a manual validation
	BEzsigntemplatepackageNeedvalidation bool `json:"bEzsigntemplatepackageNeedvalidation"`
	// Whether the Ezsigntemplatepackage is active or not
	BEzsigntemplatepackageIsactive bool `json:"bEzsigntemplatepackageIsactive"`
	// The name of the Ezsignfoldertype in the language of the requester
	SEzsignfoldertypeNameX string `json:"sEzsignfoldertypeNameX"`
}

// NewEzsigntemplatepackageResponse instantiates a new EzsigntemplatepackageResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsigntemplatepackageResponse(pkiEzsigntemplatepackageID int32, fkiEzsignfoldertypeID int32, fkiLanguageID int32, sLanguageNameX string, sEzsigntemplatepackageDescription string, bEzsigntemplatepackageAdminonly bool, bEzsigntemplatepackageNeedvalidation bool, bEzsigntemplatepackageIsactive bool, sEzsignfoldertypeNameX string) *EzsigntemplatepackageResponse {
	this := EzsigntemplatepackageResponse{}
	this.PkiEzsigntemplatepackageID = pkiEzsigntemplatepackageID
	this.FkiEzsignfoldertypeID = fkiEzsignfoldertypeID
	this.FkiLanguageID = fkiLanguageID
	this.SLanguageNameX = sLanguageNameX
	this.SEzsigntemplatepackageDescription = sEzsigntemplatepackageDescription
	this.BEzsigntemplatepackageAdminonly = bEzsigntemplatepackageAdminonly
	this.BEzsigntemplatepackageNeedvalidation = bEzsigntemplatepackageNeedvalidation
	this.BEzsigntemplatepackageIsactive = bEzsigntemplatepackageIsactive
	this.SEzsignfoldertypeNameX = sEzsignfoldertypeNameX
	return &this
}

// NewEzsigntemplatepackageResponseWithDefaults instantiates a new EzsigntemplatepackageResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsigntemplatepackageResponseWithDefaults() *EzsigntemplatepackageResponse {
	this := EzsigntemplatepackageResponse{}
	return &this
}

// GetPkiEzsigntemplatepackageID returns the PkiEzsigntemplatepackageID field value
func (o *EzsigntemplatepackageResponse) GetPkiEzsigntemplatepackageID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PkiEzsigntemplatepackageID
}

// GetPkiEzsigntemplatepackageIDOk returns a tuple with the PkiEzsigntemplatepackageID field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplatepackageResponse) GetPkiEzsigntemplatepackageIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkiEzsigntemplatepackageID, true
}

// SetPkiEzsigntemplatepackageID sets field value
func (o *EzsigntemplatepackageResponse) SetPkiEzsigntemplatepackageID(v int32) {
	o.PkiEzsigntemplatepackageID = v
}

// GetFkiEzsignfoldertypeID returns the FkiEzsignfoldertypeID field value
func (o *EzsigntemplatepackageResponse) GetFkiEzsignfoldertypeID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiEzsignfoldertypeID
}

// GetFkiEzsignfoldertypeIDOk returns a tuple with the FkiEzsignfoldertypeID field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplatepackageResponse) GetFkiEzsignfoldertypeIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiEzsignfoldertypeID, true
}

// SetFkiEzsignfoldertypeID sets field value
func (o *EzsigntemplatepackageResponse) SetFkiEzsignfoldertypeID(v int32) {
	o.FkiEzsignfoldertypeID = v
}

// GetFkiLanguageID returns the FkiLanguageID field value
func (o *EzsigntemplatepackageResponse) GetFkiLanguageID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiLanguageID
}

// GetFkiLanguageIDOk returns a tuple with the FkiLanguageID field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplatepackageResponse) GetFkiLanguageIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiLanguageID, true
}

// SetFkiLanguageID sets field value
func (o *EzsigntemplatepackageResponse) SetFkiLanguageID(v int32) {
	o.FkiLanguageID = v
}

// GetSLanguageNameX returns the SLanguageNameX field value
func (o *EzsigntemplatepackageResponse) GetSLanguageNameX() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SLanguageNameX
}

// GetSLanguageNameXOk returns a tuple with the SLanguageNameX field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplatepackageResponse) GetSLanguageNameXOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SLanguageNameX, true
}

// SetSLanguageNameX sets field value
func (o *EzsigntemplatepackageResponse) SetSLanguageNameX(v string) {
	o.SLanguageNameX = v
}

// GetSEzsigntemplatepackageDescription returns the SEzsigntemplatepackageDescription field value
func (o *EzsigntemplatepackageResponse) GetSEzsigntemplatepackageDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SEzsigntemplatepackageDescription
}

// GetSEzsigntemplatepackageDescriptionOk returns a tuple with the SEzsigntemplatepackageDescription field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplatepackageResponse) GetSEzsigntemplatepackageDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SEzsigntemplatepackageDescription, true
}

// SetSEzsigntemplatepackageDescription sets field value
func (o *EzsigntemplatepackageResponse) SetSEzsigntemplatepackageDescription(v string) {
	o.SEzsigntemplatepackageDescription = v
}

// GetBEzsigntemplatepackageAdminonly returns the BEzsigntemplatepackageAdminonly field value
func (o *EzsigntemplatepackageResponse) GetBEzsigntemplatepackageAdminonly() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BEzsigntemplatepackageAdminonly
}

// GetBEzsigntemplatepackageAdminonlyOk returns a tuple with the BEzsigntemplatepackageAdminonly field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplatepackageResponse) GetBEzsigntemplatepackageAdminonlyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BEzsigntemplatepackageAdminonly, true
}

// SetBEzsigntemplatepackageAdminonly sets field value
func (o *EzsigntemplatepackageResponse) SetBEzsigntemplatepackageAdminonly(v bool) {
	o.BEzsigntemplatepackageAdminonly = v
}

// GetBEzsigntemplatepackageNeedvalidation returns the BEzsigntemplatepackageNeedvalidation field value
func (o *EzsigntemplatepackageResponse) GetBEzsigntemplatepackageNeedvalidation() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BEzsigntemplatepackageNeedvalidation
}

// GetBEzsigntemplatepackageNeedvalidationOk returns a tuple with the BEzsigntemplatepackageNeedvalidation field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplatepackageResponse) GetBEzsigntemplatepackageNeedvalidationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BEzsigntemplatepackageNeedvalidation, true
}

// SetBEzsigntemplatepackageNeedvalidation sets field value
func (o *EzsigntemplatepackageResponse) SetBEzsigntemplatepackageNeedvalidation(v bool) {
	o.BEzsigntemplatepackageNeedvalidation = v
}

// GetBEzsigntemplatepackageIsactive returns the BEzsigntemplatepackageIsactive field value
func (o *EzsigntemplatepackageResponse) GetBEzsigntemplatepackageIsactive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BEzsigntemplatepackageIsactive
}

// GetBEzsigntemplatepackageIsactiveOk returns a tuple with the BEzsigntemplatepackageIsactive field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplatepackageResponse) GetBEzsigntemplatepackageIsactiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BEzsigntemplatepackageIsactive, true
}

// SetBEzsigntemplatepackageIsactive sets field value
func (o *EzsigntemplatepackageResponse) SetBEzsigntemplatepackageIsactive(v bool) {
	o.BEzsigntemplatepackageIsactive = v
}

// GetSEzsignfoldertypeNameX returns the SEzsignfoldertypeNameX field value
func (o *EzsigntemplatepackageResponse) GetSEzsignfoldertypeNameX() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SEzsignfoldertypeNameX
}

// GetSEzsignfoldertypeNameXOk returns a tuple with the SEzsignfoldertypeNameX field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplatepackageResponse) GetSEzsignfoldertypeNameXOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SEzsignfoldertypeNameX, true
}

// SetSEzsignfoldertypeNameX sets field value
func (o *EzsigntemplatepackageResponse) SetSEzsignfoldertypeNameX(v string) {
	o.SEzsignfoldertypeNameX = v
}

func (o EzsigntemplatepackageResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsigntemplatepackageResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pkiEzsigntemplatepackageID"] = o.PkiEzsigntemplatepackageID
	toSerialize["fkiEzsignfoldertypeID"] = o.FkiEzsignfoldertypeID
	toSerialize["fkiLanguageID"] = o.FkiLanguageID
	toSerialize["sLanguageNameX"] = o.SLanguageNameX
	toSerialize["sEzsigntemplatepackageDescription"] = o.SEzsigntemplatepackageDescription
	toSerialize["bEzsigntemplatepackageAdminonly"] = o.BEzsigntemplatepackageAdminonly
	toSerialize["bEzsigntemplatepackageNeedvalidation"] = o.BEzsigntemplatepackageNeedvalidation
	toSerialize["bEzsigntemplatepackageIsactive"] = o.BEzsigntemplatepackageIsactive
	toSerialize["sEzsignfoldertypeNameX"] = o.SEzsignfoldertypeNameX
	return toSerialize, nil
}

type NullableEzsigntemplatepackageResponse struct {
	value *EzsigntemplatepackageResponse
	isSet bool
}

func (v NullableEzsigntemplatepackageResponse) Get() *EzsigntemplatepackageResponse {
	return v.value
}

func (v *NullableEzsigntemplatepackageResponse) Set(val *EzsigntemplatepackageResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsigntemplatepackageResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsigntemplatepackageResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsigntemplatepackageResponse(val *EzsigntemplatepackageResponse) *NullableEzsigntemplatepackageResponse {
	return &NullableEzsigntemplatepackageResponse{value: val, isSet: true}
}

func (v NullableEzsigntemplatepackageResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsigntemplatepackageResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


