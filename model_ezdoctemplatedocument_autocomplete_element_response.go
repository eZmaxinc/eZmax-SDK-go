/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzdoctemplatedocumentAutocompleteElementResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzdoctemplatedocumentAutocompleteElementResponse{}

// EzdoctemplatedocumentAutocompleteElementResponse A Ezdoctemplatedocument AutocompleteElement Response
type EzdoctemplatedocumentAutocompleteElementResponse struct {
	// The unique ID of the Ezdoctemplatedocument
	PkiEzdoctemplatedocumentID int32 `json:"pkiEzdoctemplatedocumentID"`
	// The name of the Ezdoctemplatedocument in the language of the requester
	SEzdoctemplatedocumentNameX string `json:"sEzdoctemplatedocumentNameX" validate:"regexp=^.{0,50}$"`
	// Whether the ezdoctemplatedocument is active or not
	BEzdoctemplatedocumentIsactive bool `json:"bEzdoctemplatedocumentIsactive"`
}

type _EzdoctemplatedocumentAutocompleteElementResponse EzdoctemplatedocumentAutocompleteElementResponse

// NewEzdoctemplatedocumentAutocompleteElementResponse instantiates a new EzdoctemplatedocumentAutocompleteElementResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzdoctemplatedocumentAutocompleteElementResponse(pkiEzdoctemplatedocumentID int32, sEzdoctemplatedocumentNameX string, bEzdoctemplatedocumentIsactive bool) *EzdoctemplatedocumentAutocompleteElementResponse {
	this := EzdoctemplatedocumentAutocompleteElementResponse{}
	this.PkiEzdoctemplatedocumentID = pkiEzdoctemplatedocumentID
	this.SEzdoctemplatedocumentNameX = sEzdoctemplatedocumentNameX
	this.BEzdoctemplatedocumentIsactive = bEzdoctemplatedocumentIsactive
	return &this
}

// NewEzdoctemplatedocumentAutocompleteElementResponseWithDefaults instantiates a new EzdoctemplatedocumentAutocompleteElementResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzdoctemplatedocumentAutocompleteElementResponseWithDefaults() *EzdoctemplatedocumentAutocompleteElementResponse {
	this := EzdoctemplatedocumentAutocompleteElementResponse{}
	return &this
}

// GetPkiEzdoctemplatedocumentID returns the PkiEzdoctemplatedocumentID field value
func (o *EzdoctemplatedocumentAutocompleteElementResponse) GetPkiEzdoctemplatedocumentID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PkiEzdoctemplatedocumentID
}

// GetPkiEzdoctemplatedocumentIDOk returns a tuple with the PkiEzdoctemplatedocumentID field value
// and a boolean to check if the value has been set.
func (o *EzdoctemplatedocumentAutocompleteElementResponse) GetPkiEzdoctemplatedocumentIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkiEzdoctemplatedocumentID, true
}

// SetPkiEzdoctemplatedocumentID sets field value
func (o *EzdoctemplatedocumentAutocompleteElementResponse) SetPkiEzdoctemplatedocumentID(v int32) {
	o.PkiEzdoctemplatedocumentID = v
}

// GetSEzdoctemplatedocumentNameX returns the SEzdoctemplatedocumentNameX field value
func (o *EzdoctemplatedocumentAutocompleteElementResponse) GetSEzdoctemplatedocumentNameX() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SEzdoctemplatedocumentNameX
}

// GetSEzdoctemplatedocumentNameXOk returns a tuple with the SEzdoctemplatedocumentNameX field value
// and a boolean to check if the value has been set.
func (o *EzdoctemplatedocumentAutocompleteElementResponse) GetSEzdoctemplatedocumentNameXOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SEzdoctemplatedocumentNameX, true
}

// SetSEzdoctemplatedocumentNameX sets field value
func (o *EzdoctemplatedocumentAutocompleteElementResponse) SetSEzdoctemplatedocumentNameX(v string) {
	o.SEzdoctemplatedocumentNameX = v
}

// GetBEzdoctemplatedocumentIsactive returns the BEzdoctemplatedocumentIsactive field value
func (o *EzdoctemplatedocumentAutocompleteElementResponse) GetBEzdoctemplatedocumentIsactive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BEzdoctemplatedocumentIsactive
}

// GetBEzdoctemplatedocumentIsactiveOk returns a tuple with the BEzdoctemplatedocumentIsactive field value
// and a boolean to check if the value has been set.
func (o *EzdoctemplatedocumentAutocompleteElementResponse) GetBEzdoctemplatedocumentIsactiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BEzdoctemplatedocumentIsactive, true
}

// SetBEzdoctemplatedocumentIsactive sets field value
func (o *EzdoctemplatedocumentAutocompleteElementResponse) SetBEzdoctemplatedocumentIsactive(v bool) {
	o.BEzdoctemplatedocumentIsactive = v
}

func (o EzdoctemplatedocumentAutocompleteElementResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzdoctemplatedocumentAutocompleteElementResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pkiEzdoctemplatedocumentID"] = o.PkiEzdoctemplatedocumentID
	toSerialize["sEzdoctemplatedocumentNameX"] = o.SEzdoctemplatedocumentNameX
	toSerialize["bEzdoctemplatedocumentIsactive"] = o.BEzdoctemplatedocumentIsactive
	return toSerialize, nil
}

func (o *EzdoctemplatedocumentAutocompleteElementResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pkiEzdoctemplatedocumentID",
		"sEzdoctemplatedocumentNameX",
		"bEzdoctemplatedocumentIsactive",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzdoctemplatedocumentAutocompleteElementResponse := _EzdoctemplatedocumentAutocompleteElementResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzdoctemplatedocumentAutocompleteElementResponse)

	if err != nil {
		return err
	}

	*o = EzdoctemplatedocumentAutocompleteElementResponse(varEzdoctemplatedocumentAutocompleteElementResponse)

	return err
}

type NullableEzdoctemplatedocumentAutocompleteElementResponse struct {
	value *EzdoctemplatedocumentAutocompleteElementResponse
	isSet bool
}

func (v NullableEzdoctemplatedocumentAutocompleteElementResponse) Get() *EzdoctemplatedocumentAutocompleteElementResponse {
	return v.value
}

func (v *NullableEzdoctemplatedocumentAutocompleteElementResponse) Set(val *EzdoctemplatedocumentAutocompleteElementResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableEzdoctemplatedocumentAutocompleteElementResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableEzdoctemplatedocumentAutocompleteElementResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzdoctemplatedocumentAutocompleteElementResponse(val *EzdoctemplatedocumentAutocompleteElementResponse) *NullableEzdoctemplatedocumentAutocompleteElementResponse {
	return &NullableEzdoctemplatedocumentAutocompleteElementResponse{value: val, isSet: true}
}

func (v NullableEzdoctemplatedocumentAutocompleteElementResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzdoctemplatedocumentAutocompleteElementResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


