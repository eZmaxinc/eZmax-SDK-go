/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UserRequestCompoundV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserRequestCompoundV2{}

// UserRequestCompoundV2 A User Object and children
type UserRequestCompoundV2 struct {
	UserRequestV2
}

type _UserRequestCompoundV2 UserRequestCompoundV2

// NewUserRequestCompoundV2 instantiates a new UserRequestCompoundV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserRequestCompoundV2(fkiCompanyIDDefault int32, fkiDepartmentIDDefault int32, fkiTimezoneID int32, fkiLanguageID int32, objEmail EmailRequest, fkiBillingentityinternalID int32, eUserType FieldEUserType, eUserLogintype FieldEUserLogintype, sUserFirstname string, sUserLastname string, sUserLoginname string, eUserEzsignaccess FieldEUserEzsignaccess, bUserIsactive bool) *UserRequestCompoundV2 {
	this := UserRequestCompoundV2{}
	this.FkiCompanyIDDefault = fkiCompanyIDDefault
	this.FkiDepartmentIDDefault = fkiDepartmentIDDefault
	this.FkiTimezoneID = fkiTimezoneID
	this.FkiLanguageID = fkiLanguageID
	this.ObjEmail = objEmail
	this.FkiBillingentityinternalID = fkiBillingentityinternalID
	this.EUserType = eUserType
	this.EUserLogintype = eUserLogintype
	this.SUserFirstname = sUserFirstname
	this.SUserLastname = sUserLastname
	this.SUserLoginname = sUserLoginname
	this.EUserEzsignaccess = eUserEzsignaccess
	this.BUserIsactive = bUserIsactive
	return &this
}

// NewUserRequestCompoundV2WithDefaults instantiates a new UserRequestCompoundV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserRequestCompoundV2WithDefaults() *UserRequestCompoundV2 {
	this := UserRequestCompoundV2{}
	return &this
}

func (o UserRequestCompoundV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserRequestCompoundV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	return toSerialize, nil
}

func (o *UserRequestCompoundV2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"fkiCompanyIDDefault",
		"fkiDepartmentIDDefault",
		"fkiTimezoneID",
		"fkiLanguageID",
		"objEmail",
		"fkiBillingentityinternalID",
		"eUserType",
		"eUserLogintype",
		"sUserFirstname",
		"sUserLastname",
		"sUserLoginname",
		"eUserEzsignaccess",
		"bUserIsactive",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUserRequestCompoundV2 := _UserRequestCompoundV2{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUserRequestCompoundV2)

	if err != nil {
		return err
	}

	*o = UserRequestCompoundV2(varUserRequestCompoundV2)

	return err
}

type NullableUserRequestCompoundV2 struct {
	value *UserRequestCompoundV2
	isSet bool
}

func (v NullableUserRequestCompoundV2) Get() *UserRequestCompoundV2 {
	return v.value
}

func (v *NullableUserRequestCompoundV2) Set(val *UserRequestCompoundV2) {
	v.value = val
	v.isSet = true
}

func (v NullableUserRequestCompoundV2) IsSet() bool {
	return v.isSet
}

func (v *NullableUserRequestCompoundV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserRequestCompoundV2(val *UserRequestCompoundV2) *NullableUserRequestCompoundV2 {
	return &NullableUserRequestCompoundV2{value: val, isSet: true}
}

func (v NullableUserRequestCompoundV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserRequestCompoundV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


