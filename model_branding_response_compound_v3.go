/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BrandingResponseCompoundV3 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BrandingResponseCompoundV3{}

// BrandingResponseCompoundV3 A Branding Object
type BrandingResponseCompoundV3 struct {
	BrandingResponseV3
	// The url of the picture used as logo in the Branding
	SBrandingLogourl *string `json:"sBrandingLogourl,omitempty" validate:"regexp=^(https|http):\\/\\/[^\\\\s\\/$.?#].[^\\\\s]*$"`
	// The url of the picture used in email as logo in the Branding
	SBrandingLogoemailurl *string `json:"sBrandingLogoemailurl,omitempty" validate:"regexp=^(https|http):\\/\\/[^\\\\s\\/$.?#].[^\\\\s]*$"`
	// The url of the picture used as logo in the Branding
	SBrandingLogointerfaceurl *string `json:"sBrandingLogointerfaceurl,omitempty" validate:"regexp=^(https|http):\\/\\/[^\\\\s\\/$.?#].[^\\\\s]*$"`
}

type _BrandingResponseCompoundV3 BrandingResponseCompoundV3

// NewBrandingResponseCompoundV3 instantiates a new BrandingResponseCompoundV3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBrandingResponseCompoundV3(pkiBrandingID int32, objBrandingDescription MultilingualBrandingDescription, sBrandingDescriptionX string, eBrandingLogo FieldEBrandingLogo, eBrandingAlignlogo FieldEBrandingAlignlogo, iBrandingColor int32, bBrandingIsactive bool) *BrandingResponseCompoundV3 {
	this := BrandingResponseCompoundV3{}
	this.PkiBrandingID = pkiBrandingID
	this.ObjBrandingDescription = objBrandingDescription
	this.SBrandingDescriptionX = sBrandingDescriptionX
	this.EBrandingLogo = eBrandingLogo
	this.EBrandingAlignlogo = eBrandingAlignlogo
	this.IBrandingColor = iBrandingColor
	this.BBrandingIsactive = bBrandingIsactive
	return &this
}

// NewBrandingResponseCompoundV3WithDefaults instantiates a new BrandingResponseCompoundV3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBrandingResponseCompoundV3WithDefaults() *BrandingResponseCompoundV3 {
	this := BrandingResponseCompoundV3{}
	return &this
}

// GetSBrandingLogourl returns the SBrandingLogourl field value if set, zero value otherwise.
func (o *BrandingResponseCompoundV3) GetSBrandingLogourl() string {
	if o == nil || IsNil(o.SBrandingLogourl) {
		var ret string
		return ret
	}
	return *o.SBrandingLogourl
}

// GetSBrandingLogourlOk returns a tuple with the SBrandingLogourl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandingResponseCompoundV3) GetSBrandingLogourlOk() (*string, bool) {
	if o == nil || IsNil(o.SBrandingLogourl) {
		return nil, false
	}
	return o.SBrandingLogourl, true
}

// HasSBrandingLogourl returns a boolean if a field has been set.
func (o *BrandingResponseCompoundV3) HasSBrandingLogourl() bool {
	if o != nil && !IsNil(o.SBrandingLogourl) {
		return true
	}

	return false
}

// SetSBrandingLogourl gets a reference to the given string and assigns it to the SBrandingLogourl field.
func (o *BrandingResponseCompoundV3) SetSBrandingLogourl(v string) {
	o.SBrandingLogourl = &v
}

// GetSBrandingLogoemailurl returns the SBrandingLogoemailurl field value if set, zero value otherwise.
func (o *BrandingResponseCompoundV3) GetSBrandingLogoemailurl() string {
	if o == nil || IsNil(o.SBrandingLogoemailurl) {
		var ret string
		return ret
	}
	return *o.SBrandingLogoemailurl
}

// GetSBrandingLogoemailurlOk returns a tuple with the SBrandingLogoemailurl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandingResponseCompoundV3) GetSBrandingLogoemailurlOk() (*string, bool) {
	if o == nil || IsNil(o.SBrandingLogoemailurl) {
		return nil, false
	}
	return o.SBrandingLogoemailurl, true
}

// HasSBrandingLogoemailurl returns a boolean if a field has been set.
func (o *BrandingResponseCompoundV3) HasSBrandingLogoemailurl() bool {
	if o != nil && !IsNil(o.SBrandingLogoemailurl) {
		return true
	}

	return false
}

// SetSBrandingLogoemailurl gets a reference to the given string and assigns it to the SBrandingLogoemailurl field.
func (o *BrandingResponseCompoundV3) SetSBrandingLogoemailurl(v string) {
	o.SBrandingLogoemailurl = &v
}

// GetSBrandingLogointerfaceurl returns the SBrandingLogointerfaceurl field value if set, zero value otherwise.
func (o *BrandingResponseCompoundV3) GetSBrandingLogointerfaceurl() string {
	if o == nil || IsNil(o.SBrandingLogointerfaceurl) {
		var ret string
		return ret
	}
	return *o.SBrandingLogointerfaceurl
}

// GetSBrandingLogointerfaceurlOk returns a tuple with the SBrandingLogointerfaceurl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandingResponseCompoundV3) GetSBrandingLogointerfaceurlOk() (*string, bool) {
	if o == nil || IsNil(o.SBrandingLogointerfaceurl) {
		return nil, false
	}
	return o.SBrandingLogointerfaceurl, true
}

// HasSBrandingLogointerfaceurl returns a boolean if a field has been set.
func (o *BrandingResponseCompoundV3) HasSBrandingLogointerfaceurl() bool {
	if o != nil && !IsNil(o.SBrandingLogointerfaceurl) {
		return true
	}

	return false
}

// SetSBrandingLogointerfaceurl gets a reference to the given string and assigns it to the SBrandingLogointerfaceurl field.
func (o *BrandingResponseCompoundV3) SetSBrandingLogointerfaceurl(v string) {
	o.SBrandingLogointerfaceurl = &v
}

func (o BrandingResponseCompoundV3) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BrandingResponseCompoundV3) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SBrandingLogourl) {
		toSerialize["sBrandingLogourl"] = o.SBrandingLogourl
	}
	if !IsNil(o.SBrandingLogoemailurl) {
		toSerialize["sBrandingLogoemailurl"] = o.SBrandingLogoemailurl
	}
	if !IsNil(o.SBrandingLogointerfaceurl) {
		toSerialize["sBrandingLogointerfaceurl"] = o.SBrandingLogointerfaceurl
	}
	return toSerialize, nil
}

func (o *BrandingResponseCompoundV3) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pkiBrandingID",
		"objBrandingDescription",
		"sBrandingDescriptionX",
		"eBrandingLogo",
		"eBrandingAlignlogo",
		"iBrandingColor",
		"bBrandingIsactive",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBrandingResponseCompoundV3 := _BrandingResponseCompoundV3{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBrandingResponseCompoundV3)

	if err != nil {
		return err
	}

	*o = BrandingResponseCompoundV3(varBrandingResponseCompoundV3)

	return err
}

type NullableBrandingResponseCompoundV3 struct {
	value *BrandingResponseCompoundV3
	isSet bool
}

func (v NullableBrandingResponseCompoundV3) Get() *BrandingResponseCompoundV3 {
	return v.value
}

func (v *NullableBrandingResponseCompoundV3) Set(val *BrandingResponseCompoundV3) {
	v.value = val
	v.isSet = true
}

func (v NullableBrandingResponseCompoundV3) IsSet() bool {
	return v.isSet
}

func (v *NullableBrandingResponseCompoundV3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBrandingResponseCompoundV3(val *BrandingResponseCompoundV3) *NullableBrandingResponseCompoundV3 {
	return &NullableBrandingResponseCompoundV3{value: val, isSet: true}
}

func (v NullableBrandingResponseCompoundV3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBrandingResponseCompoundV3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


