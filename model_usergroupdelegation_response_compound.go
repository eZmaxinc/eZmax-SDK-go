/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UsergroupdelegationResponseCompound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UsergroupdelegationResponseCompound{}

// UsergroupdelegationResponseCompound A Usergroupdelegation Object
type UsergroupdelegationResponseCompound struct {
	UsergroupdelegationResponse
}

type _UsergroupdelegationResponseCompound UsergroupdelegationResponseCompound

// NewUsergroupdelegationResponseCompound instantiates a new UsergroupdelegationResponseCompound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsergroupdelegationResponseCompound(pkiUsergroupdelegationID int32, fkiUsergroupID int32, fkiUserID int32, sUserFirstname string, sUserLastname string, sUserLoginname string, sUsergroupNameX string) *UsergroupdelegationResponseCompound {
	this := UsergroupdelegationResponseCompound{}
	this.PkiUsergroupdelegationID = pkiUsergroupdelegationID
	this.FkiUsergroupID = fkiUsergroupID
	this.FkiUserID = fkiUserID
	this.SUserFirstname = sUserFirstname
	this.SUserLastname = sUserLastname
	this.SUserLoginname = sUserLoginname
	this.SUsergroupNameX = sUsergroupNameX
	return &this
}

// NewUsergroupdelegationResponseCompoundWithDefaults instantiates a new UsergroupdelegationResponseCompound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsergroupdelegationResponseCompoundWithDefaults() *UsergroupdelegationResponseCompound {
	this := UsergroupdelegationResponseCompound{}
	return &this
}

func (o UsergroupdelegationResponseCompound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UsergroupdelegationResponseCompound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	return toSerialize, nil
}

func (o *UsergroupdelegationResponseCompound) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pkiUsergroupdelegationID",
		"fkiUsergroupID",
		"fkiUserID",
		"sUserFirstname",
		"sUserLastname",
		"sUserLoginname",
		"sUsergroupNameX",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUsergroupdelegationResponseCompound := _UsergroupdelegationResponseCompound{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUsergroupdelegationResponseCompound)

	if err != nil {
		return err
	}

	*o = UsergroupdelegationResponseCompound(varUsergroupdelegationResponseCompound)

	return err
}

type NullableUsergroupdelegationResponseCompound struct {
	value *UsergroupdelegationResponseCompound
	isSet bool
}

func (v NullableUsergroupdelegationResponseCompound) Get() *UsergroupdelegationResponseCompound {
	return v.value
}

func (v *NullableUsergroupdelegationResponseCompound) Set(val *UsergroupdelegationResponseCompound) {
	v.value = val
	v.isSet = true
}

func (v NullableUsergroupdelegationResponseCompound) IsSet() bool {
	return v.isSet
}

func (v *NullableUsergroupdelegationResponseCompound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsergroupdelegationResponseCompound(val *UsergroupdelegationResponseCompound) *NullableUsergroupdelegationResponseCompound {
	return &NullableUsergroupdelegationResponseCompound{value: val, isSet: true}
}

func (v NullableUsergroupdelegationResponseCompound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsergroupdelegationResponseCompound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


