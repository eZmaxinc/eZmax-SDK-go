/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsigntemplatepublicResponseCompound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsigntemplatepublicResponseCompound{}

// EzsigntemplatepublicResponseCompound A Ezsigntemplatepublic Object
type EzsigntemplatepublicResponseCompound struct {
	EzsigntemplatepublicResponse
	AObjEzsignfolderezsigntemplatepublic []CustomEzsignfolderezsigntemplatepublicResponse `json:"a_objEzsignfolderezsigntemplatepublic"`
}

type _EzsigntemplatepublicResponseCompound EzsigntemplatepublicResponseCompound

// NewEzsigntemplatepublicResponseCompound instantiates a new EzsigntemplatepublicResponseCompound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsigntemplatepublicResponseCompound(aObjEzsignfolderezsigntemplatepublic []CustomEzsignfolderezsigntemplatepublicResponse, pkiEzsigntemplatepublicID int32, fkiEzsignfoldertypeID int32, sEzsignfoldertypeNameX string, fkiUserlogintypeID int32, sUserlogintypeDescriptionX string, sEzsigntemplatepublicDescription string, sEzsigntemplatepublicReferenceid string, bEzsigntemplatepublicIsactive bool, tEzsigntemplatepublicNote string, eEzsigntemplatepublicLimittype FieldEEzsigntemplatepublicLimittype, iEzsigntemplatepublicLimit int32, iEzsigntemplatepublicLimitexceeded int32, dtEzsigntemplatepublicLimitexceededsince string, sEzsigntemplatepublicUrl string, sEzsigntemplatepublicEzsigntemplatedescription string) *EzsigntemplatepublicResponseCompound {
	this := EzsigntemplatepublicResponseCompound{}
	this.PkiEzsigntemplatepublicID = pkiEzsigntemplatepublicID
	this.FkiEzsignfoldertypeID = fkiEzsignfoldertypeID
	this.SEzsignfoldertypeNameX = sEzsignfoldertypeNameX
	this.FkiUserlogintypeID = fkiUserlogintypeID
	this.SUserlogintypeDescriptionX = sUserlogintypeDescriptionX
	this.SEzsigntemplatepublicDescription = sEzsigntemplatepublicDescription
	this.SEzsigntemplatepublicReferenceid = sEzsigntemplatepublicReferenceid
	this.BEzsigntemplatepublicIsactive = bEzsigntemplatepublicIsactive
	this.TEzsigntemplatepublicNote = tEzsigntemplatepublicNote
	this.EEzsigntemplatepublicLimittype = eEzsigntemplatepublicLimittype
	this.IEzsigntemplatepublicLimit = iEzsigntemplatepublicLimit
	this.IEzsigntemplatepublicLimitexceeded = iEzsigntemplatepublicLimitexceeded
	this.DtEzsigntemplatepublicLimitexceededsince = dtEzsigntemplatepublicLimitexceededsince
	this.SEzsigntemplatepublicUrl = sEzsigntemplatepublicUrl
	this.SEzsigntemplatepublicEzsigntemplatedescription = sEzsigntemplatepublicEzsigntemplatedescription
	this.AObjEzsignfolderezsigntemplatepublic = aObjEzsignfolderezsigntemplatepublic
	return &this
}

// NewEzsigntemplatepublicResponseCompoundWithDefaults instantiates a new EzsigntemplatepublicResponseCompound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsigntemplatepublicResponseCompoundWithDefaults() *EzsigntemplatepublicResponseCompound {
	this := EzsigntemplatepublicResponseCompound{}
	return &this
}

// GetAObjEzsignfolderezsigntemplatepublic returns the AObjEzsignfolderezsigntemplatepublic field value
func (o *EzsigntemplatepublicResponseCompound) GetAObjEzsignfolderezsigntemplatepublic() []CustomEzsignfolderezsigntemplatepublicResponse {
	if o == nil {
		var ret []CustomEzsignfolderezsigntemplatepublicResponse
		return ret
	}

	return o.AObjEzsignfolderezsigntemplatepublic
}

// GetAObjEzsignfolderezsigntemplatepublicOk returns a tuple with the AObjEzsignfolderezsigntemplatepublic field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplatepublicResponseCompound) GetAObjEzsignfolderezsigntemplatepublicOk() ([]CustomEzsignfolderezsigntemplatepublicResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.AObjEzsignfolderezsigntemplatepublic, true
}

// SetAObjEzsignfolderezsigntemplatepublic sets field value
func (o *EzsigntemplatepublicResponseCompound) SetAObjEzsignfolderezsigntemplatepublic(v []CustomEzsignfolderezsigntemplatepublicResponse) {
	o.AObjEzsignfolderezsigntemplatepublic = v
}

func (o EzsigntemplatepublicResponseCompound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsigntemplatepublicResponseCompound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["a_objEzsignfolderezsigntemplatepublic"] = o.AObjEzsignfolderezsigntemplatepublic
	return toSerialize, nil
}

func (o *EzsigntemplatepublicResponseCompound) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"a_objEzsignfolderezsigntemplatepublic",
		"pkiEzsigntemplatepublicID",
		"fkiEzsignfoldertypeID",
		"sEzsignfoldertypeNameX",
		"fkiUserlogintypeID",
		"sUserlogintypeDescriptionX",
		"sEzsigntemplatepublicDescription",
		"sEzsigntemplatepublicReferenceid",
		"bEzsigntemplatepublicIsactive",
		"tEzsigntemplatepublicNote",
		"eEzsigntemplatepublicLimittype",
		"iEzsigntemplatepublicLimit",
		"iEzsigntemplatepublicLimitexceeded",
		"dtEzsigntemplatepublicLimitexceededsince",
		"sEzsigntemplatepublicUrl",
		"sEzsigntemplatepublicEzsigntemplatedescription",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsigntemplatepublicResponseCompound := _EzsigntemplatepublicResponseCompound{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsigntemplatepublicResponseCompound)

	if err != nil {
		return err
	}

	*o = EzsigntemplatepublicResponseCompound(varEzsigntemplatepublicResponseCompound)

	return err
}

type NullableEzsigntemplatepublicResponseCompound struct {
	value *EzsigntemplatepublicResponseCompound
	isSet bool
}

func (v NullableEzsigntemplatepublicResponseCompound) Get() *EzsigntemplatepublicResponseCompound {
	return v.value
}

func (v *NullableEzsigntemplatepublicResponseCompound) Set(val *EzsigntemplatepublicResponseCompound) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsigntemplatepublicResponseCompound) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsigntemplatepublicResponseCompound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsigntemplatepublicResponseCompound(val *EzsigntemplatepublicResponseCompound) *NullableEzsigntemplatepublicResponseCompound {
	return &NullableEzsigntemplatepublicResponseCompound{value: val, isSet: true}
}

func (v NullableEzsigntemplatepublicResponseCompound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsigntemplatepublicResponseCompound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


