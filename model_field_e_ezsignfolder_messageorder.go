/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"fmt"
)

// FieldEEzsignfolderMessageorder Message order of the Ezsignfolder.
type FieldEEzsignfolderMessageorder string

// List of Field-eEzsignfolderMessageorder
const (
	GLOBAL_FIRST FieldEEzsignfolderMessageorder = "GlobalFirst"
	PRIVATE_FIRST FieldEEzsignfolderMessageorder = "PrivateFirst"
)

// All allowed values of FieldEEzsignfolderMessageorder enum
var AllowedFieldEEzsignfolderMessageorderEnumValues = []FieldEEzsignfolderMessageorder{
	"GlobalFirst",
	"PrivateFirst",
}

func (v *FieldEEzsignfolderMessageorder) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := FieldEEzsignfolderMessageorder(value)
	for _, existing := range AllowedFieldEEzsignfolderMessageorderEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid FieldEEzsignfolderMessageorder", value)
}

// NewFieldEEzsignfolderMessageorderFromValue returns a pointer to a valid FieldEEzsignfolderMessageorder
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewFieldEEzsignfolderMessageorderFromValue(v string) (*FieldEEzsignfolderMessageorder, error) {
	ev := FieldEEzsignfolderMessageorder(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for FieldEEzsignfolderMessageorder: valid values are %v", v, AllowedFieldEEzsignfolderMessageorderEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v FieldEEzsignfolderMessageorder) IsValid() bool {
	for _, existing := range AllowedFieldEEzsignfolderMessageorderEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Field-eEzsignfolderMessageorder value
func (v FieldEEzsignfolderMessageorder) Ptr() *FieldEEzsignfolderMessageorder {
	return &v
}

type NullableFieldEEzsignfolderMessageorder struct {
	value *FieldEEzsignfolderMessageorder
	isSet bool
}

func (v NullableFieldEEzsignfolderMessageorder) Get() *FieldEEzsignfolderMessageorder {
	return v.value
}

func (v *NullableFieldEEzsignfolderMessageorder) Set(val *FieldEEzsignfolderMessageorder) {
	v.value = val
	v.isSet = true
}

func (v NullableFieldEEzsignfolderMessageorder) IsSet() bool {
	return v.isSet
}

func (v *NullableFieldEEzsignfolderMessageorder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFieldEEzsignfolderMessageorder(val *FieldEEzsignfolderMessageorder) *NullableFieldEEzsignfolderMessageorder {
	return &NullableFieldEEzsignfolderMessageorder{value: val, isSet: true}
}

func (v NullableFieldEEzsignfolderMessageorder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFieldEEzsignfolderMessageorder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

