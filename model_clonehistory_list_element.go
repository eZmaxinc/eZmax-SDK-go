/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ClonehistoryListElement type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClonehistoryListElement{}

// ClonehistoryListElement A Clonehistory List Element
type ClonehistoryListElement struct {
	// The unique ID of the Clonehistory
	PkiClonehistoryID int32 `json:"pkiClonehistoryID"`
	// The unique ID of the User
	FkiUserIDCloning int32 `json:"fkiUserIDCloning"`
	// The unique ID of the User
	FkiUserIDCloned int32 `json:"fkiUserIDCloned"`
	// The firsthit of the Clonehistory
	DtClonehistoryFirsthit string `json:"dtClonehistoryFirsthit"`
	// The lasthit of the Clonehistory
	DtClonehistoryLasthit *string `json:"dtClonehistoryLasthit,omitempty"`
	// The login name of the User.
	SUserLoginnameCloning string `json:"sUserLoginnameCloning"`
	// The first name of the user
	SUserFirstnameCloning string `json:"sUserFirstnameCloning"`
	// The last name of the user
	SUserLastnameCloning string `json:"sUserLastnameCloning"`
	// The login name of the User.
	SUserLoginnameCloned string `json:"sUserLoginnameCloned"`
	// The first name of the user
	SUserFirstnameCloned string `json:"sUserFirstnameCloned"`
	// The last name of the user
	SUserLastnameCloned string `json:"sUserLastnameCloned"`
}

type _ClonehistoryListElement ClonehistoryListElement

// NewClonehistoryListElement instantiates a new ClonehistoryListElement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClonehistoryListElement(pkiClonehistoryID int32, fkiUserIDCloning int32, fkiUserIDCloned int32, dtClonehistoryFirsthit string, sUserLoginnameCloning string, sUserFirstnameCloning string, sUserLastnameCloning string, sUserLoginnameCloned string, sUserFirstnameCloned string, sUserLastnameCloned string) *ClonehistoryListElement {
	this := ClonehistoryListElement{}
	this.PkiClonehistoryID = pkiClonehistoryID
	this.FkiUserIDCloning = fkiUserIDCloning
	this.FkiUserIDCloned = fkiUserIDCloned
	this.DtClonehistoryFirsthit = dtClonehistoryFirsthit
	this.SUserLoginnameCloning = sUserLoginnameCloning
	this.SUserFirstnameCloning = sUserFirstnameCloning
	this.SUserLastnameCloning = sUserLastnameCloning
	this.SUserLoginnameCloned = sUserLoginnameCloned
	this.SUserFirstnameCloned = sUserFirstnameCloned
	this.SUserLastnameCloned = sUserLastnameCloned
	return &this
}

// NewClonehistoryListElementWithDefaults instantiates a new ClonehistoryListElement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClonehistoryListElementWithDefaults() *ClonehistoryListElement {
	this := ClonehistoryListElement{}
	return &this
}

// GetPkiClonehistoryID returns the PkiClonehistoryID field value
func (o *ClonehistoryListElement) GetPkiClonehistoryID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PkiClonehistoryID
}

// GetPkiClonehistoryIDOk returns a tuple with the PkiClonehistoryID field value
// and a boolean to check if the value has been set.
func (o *ClonehistoryListElement) GetPkiClonehistoryIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkiClonehistoryID, true
}

// SetPkiClonehistoryID sets field value
func (o *ClonehistoryListElement) SetPkiClonehistoryID(v int32) {
	o.PkiClonehistoryID = v
}

// GetFkiUserIDCloning returns the FkiUserIDCloning field value
func (o *ClonehistoryListElement) GetFkiUserIDCloning() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiUserIDCloning
}

// GetFkiUserIDCloningOk returns a tuple with the FkiUserIDCloning field value
// and a boolean to check if the value has been set.
func (o *ClonehistoryListElement) GetFkiUserIDCloningOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiUserIDCloning, true
}

// SetFkiUserIDCloning sets field value
func (o *ClonehistoryListElement) SetFkiUserIDCloning(v int32) {
	o.FkiUserIDCloning = v
}

// GetFkiUserIDCloned returns the FkiUserIDCloned field value
func (o *ClonehistoryListElement) GetFkiUserIDCloned() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiUserIDCloned
}

// GetFkiUserIDClonedOk returns a tuple with the FkiUserIDCloned field value
// and a boolean to check if the value has been set.
func (o *ClonehistoryListElement) GetFkiUserIDClonedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiUserIDCloned, true
}

// SetFkiUserIDCloned sets field value
func (o *ClonehistoryListElement) SetFkiUserIDCloned(v int32) {
	o.FkiUserIDCloned = v
}

// GetDtClonehistoryFirsthit returns the DtClonehistoryFirsthit field value
func (o *ClonehistoryListElement) GetDtClonehistoryFirsthit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DtClonehistoryFirsthit
}

// GetDtClonehistoryFirsthitOk returns a tuple with the DtClonehistoryFirsthit field value
// and a boolean to check if the value has been set.
func (o *ClonehistoryListElement) GetDtClonehistoryFirsthitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DtClonehistoryFirsthit, true
}

// SetDtClonehistoryFirsthit sets field value
func (o *ClonehistoryListElement) SetDtClonehistoryFirsthit(v string) {
	o.DtClonehistoryFirsthit = v
}

// GetDtClonehistoryLasthit returns the DtClonehistoryLasthit field value if set, zero value otherwise.
func (o *ClonehistoryListElement) GetDtClonehistoryLasthit() string {
	if o == nil || IsNil(o.DtClonehistoryLasthit) {
		var ret string
		return ret
	}
	return *o.DtClonehistoryLasthit
}

// GetDtClonehistoryLasthitOk returns a tuple with the DtClonehistoryLasthit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClonehistoryListElement) GetDtClonehistoryLasthitOk() (*string, bool) {
	if o == nil || IsNil(o.DtClonehistoryLasthit) {
		return nil, false
	}
	return o.DtClonehistoryLasthit, true
}

// HasDtClonehistoryLasthit returns a boolean if a field has been set.
func (o *ClonehistoryListElement) HasDtClonehistoryLasthit() bool {
	if o != nil && !IsNil(o.DtClonehistoryLasthit) {
		return true
	}

	return false
}

// SetDtClonehistoryLasthit gets a reference to the given string and assigns it to the DtClonehistoryLasthit field.
func (o *ClonehistoryListElement) SetDtClonehistoryLasthit(v string) {
	o.DtClonehistoryLasthit = &v
}

// GetSUserLoginnameCloning returns the SUserLoginnameCloning field value
func (o *ClonehistoryListElement) GetSUserLoginnameCloning() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SUserLoginnameCloning
}

// GetSUserLoginnameCloningOk returns a tuple with the SUserLoginnameCloning field value
// and a boolean to check if the value has been set.
func (o *ClonehistoryListElement) GetSUserLoginnameCloningOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SUserLoginnameCloning, true
}

// SetSUserLoginnameCloning sets field value
func (o *ClonehistoryListElement) SetSUserLoginnameCloning(v string) {
	o.SUserLoginnameCloning = v
}

// GetSUserFirstnameCloning returns the SUserFirstnameCloning field value
func (o *ClonehistoryListElement) GetSUserFirstnameCloning() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SUserFirstnameCloning
}

// GetSUserFirstnameCloningOk returns a tuple with the SUserFirstnameCloning field value
// and a boolean to check if the value has been set.
func (o *ClonehistoryListElement) GetSUserFirstnameCloningOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SUserFirstnameCloning, true
}

// SetSUserFirstnameCloning sets field value
func (o *ClonehistoryListElement) SetSUserFirstnameCloning(v string) {
	o.SUserFirstnameCloning = v
}

// GetSUserLastnameCloning returns the SUserLastnameCloning field value
func (o *ClonehistoryListElement) GetSUserLastnameCloning() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SUserLastnameCloning
}

// GetSUserLastnameCloningOk returns a tuple with the SUserLastnameCloning field value
// and a boolean to check if the value has been set.
func (o *ClonehistoryListElement) GetSUserLastnameCloningOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SUserLastnameCloning, true
}

// SetSUserLastnameCloning sets field value
func (o *ClonehistoryListElement) SetSUserLastnameCloning(v string) {
	o.SUserLastnameCloning = v
}

// GetSUserLoginnameCloned returns the SUserLoginnameCloned field value
func (o *ClonehistoryListElement) GetSUserLoginnameCloned() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SUserLoginnameCloned
}

// GetSUserLoginnameClonedOk returns a tuple with the SUserLoginnameCloned field value
// and a boolean to check if the value has been set.
func (o *ClonehistoryListElement) GetSUserLoginnameClonedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SUserLoginnameCloned, true
}

// SetSUserLoginnameCloned sets field value
func (o *ClonehistoryListElement) SetSUserLoginnameCloned(v string) {
	o.SUserLoginnameCloned = v
}

// GetSUserFirstnameCloned returns the SUserFirstnameCloned field value
func (o *ClonehistoryListElement) GetSUserFirstnameCloned() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SUserFirstnameCloned
}

// GetSUserFirstnameClonedOk returns a tuple with the SUserFirstnameCloned field value
// and a boolean to check if the value has been set.
func (o *ClonehistoryListElement) GetSUserFirstnameClonedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SUserFirstnameCloned, true
}

// SetSUserFirstnameCloned sets field value
func (o *ClonehistoryListElement) SetSUserFirstnameCloned(v string) {
	o.SUserFirstnameCloned = v
}

// GetSUserLastnameCloned returns the SUserLastnameCloned field value
func (o *ClonehistoryListElement) GetSUserLastnameCloned() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SUserLastnameCloned
}

// GetSUserLastnameClonedOk returns a tuple with the SUserLastnameCloned field value
// and a boolean to check if the value has been set.
func (o *ClonehistoryListElement) GetSUserLastnameClonedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SUserLastnameCloned, true
}

// SetSUserLastnameCloned sets field value
func (o *ClonehistoryListElement) SetSUserLastnameCloned(v string) {
	o.SUserLastnameCloned = v
}

func (o ClonehistoryListElement) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClonehistoryListElement) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pkiClonehistoryID"] = o.PkiClonehistoryID
	toSerialize["fkiUserIDCloning"] = o.FkiUserIDCloning
	toSerialize["fkiUserIDCloned"] = o.FkiUserIDCloned
	toSerialize["dtClonehistoryFirsthit"] = o.DtClonehistoryFirsthit
	if !IsNil(o.DtClonehistoryLasthit) {
		toSerialize["dtClonehistoryLasthit"] = o.DtClonehistoryLasthit
	}
	toSerialize["sUserLoginnameCloning"] = o.SUserLoginnameCloning
	toSerialize["sUserFirstnameCloning"] = o.SUserFirstnameCloning
	toSerialize["sUserLastnameCloning"] = o.SUserLastnameCloning
	toSerialize["sUserLoginnameCloned"] = o.SUserLoginnameCloned
	toSerialize["sUserFirstnameCloned"] = o.SUserFirstnameCloned
	toSerialize["sUserLastnameCloned"] = o.SUserLastnameCloned
	return toSerialize, nil
}

func (o *ClonehistoryListElement) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pkiClonehistoryID",
		"fkiUserIDCloning",
		"fkiUserIDCloned",
		"dtClonehistoryFirsthit",
		"sUserLoginnameCloning",
		"sUserFirstnameCloning",
		"sUserLastnameCloning",
		"sUserLoginnameCloned",
		"sUserFirstnameCloned",
		"sUserLastnameCloned",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClonehistoryListElement := _ClonehistoryListElement{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varClonehistoryListElement)

	if err != nil {
		return err
	}

	*o = ClonehistoryListElement(varClonehistoryListElement)

	return err
}

type NullableClonehistoryListElement struct {
	value *ClonehistoryListElement
	isSet bool
}

func (v NullableClonehistoryListElement) Get() *ClonehistoryListElement {
	return v.value
}

func (v *NullableClonehistoryListElement) Set(val *ClonehistoryListElement) {
	v.value = val
	v.isSet = true
}

func (v NullableClonehistoryListElement) IsSet() bool {
	return v.isSet
}

func (v *NullableClonehistoryListElement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClonehistoryListElement(val *ClonehistoryListElement) *NullableClonehistoryListElement {
	return &NullableClonehistoryListElement{value: val, isSet: true}
}

func (v NullableClonehistoryListElement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClonehistoryListElement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


