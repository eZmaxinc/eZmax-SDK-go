/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsigntemplatesignatureResponseCompound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsigntemplatesignatureResponseCompound{}

// EzsigntemplatesignatureResponseCompound A Ezsigntemplatesignature Object
type EzsigntemplatesignatureResponseCompound struct {
	EzsigntemplatesignatureResponse
	// Whether the Ezsigntemplatesignature has a custom date format or not. (Only possible when eEzsigntemplatesignatureType is **Name** or **Handwritten**)
	BEzsigntemplatesignatureCustomdate *bool `json:"bEzsigntemplatesignatureCustomdate,omitempty"`
	// An array of custom date blocks that will be filled at the time of signature.  Can only be used if bEzsigntemplatesignatureCustomdate is true.  Use an empty array if you don't want to have a date at all.
	AObjEzsigntemplatesignaturecustomdate []EzsigntemplatesignaturecustomdateResponseCompound `json:"a_objEzsigntemplatesignaturecustomdate,omitempty"`
	AObjEzsigntemplateelementdependency []EzsigntemplateelementdependencyResponseCompound `json:"a_objEzsigntemplateelementdependency,omitempty"`
}

type _EzsigntemplatesignatureResponseCompound EzsigntemplatesignatureResponseCompound

// NewEzsigntemplatesignatureResponseCompound instantiates a new EzsigntemplatesignatureResponseCompound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsigntemplatesignatureResponseCompound(pkiEzsigntemplatesignatureID int32, fkiEzsigntemplatedocumentID int32, fkiEzsigntemplatesignerID int32, iEzsigntemplatedocumentpagePagenumber int32, iEzsigntemplatesignatureStep int32, eEzsigntemplatesignatureType FieldEEzsigntemplatesignatureType) *EzsigntemplatesignatureResponseCompound {
	this := EzsigntemplatesignatureResponseCompound{}
	this.PkiEzsigntemplatesignatureID = pkiEzsigntemplatesignatureID
	this.FkiEzsigntemplatedocumentID = fkiEzsigntemplatedocumentID
	this.FkiEzsigntemplatesignerID = fkiEzsigntemplatesignerID
	this.IEzsigntemplatedocumentpagePagenumber = iEzsigntemplatedocumentpagePagenumber
	this.IEzsigntemplatesignatureStep = iEzsigntemplatesignatureStep
	this.EEzsigntemplatesignatureType = eEzsigntemplatesignatureType
	return &this
}

// NewEzsigntemplatesignatureResponseCompoundWithDefaults instantiates a new EzsigntemplatesignatureResponseCompound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsigntemplatesignatureResponseCompoundWithDefaults() *EzsigntemplatesignatureResponseCompound {
	this := EzsigntemplatesignatureResponseCompound{}
	return &this
}

// GetBEzsigntemplatesignatureCustomdate returns the BEzsigntemplatesignatureCustomdate field value if set, zero value otherwise.
func (o *EzsigntemplatesignatureResponseCompound) GetBEzsigntemplatesignatureCustomdate() bool {
	if o == nil || IsNil(o.BEzsigntemplatesignatureCustomdate) {
		var ret bool
		return ret
	}
	return *o.BEzsigntemplatesignatureCustomdate
}

// GetBEzsigntemplatesignatureCustomdateOk returns a tuple with the BEzsigntemplatesignatureCustomdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplatesignatureResponseCompound) GetBEzsigntemplatesignatureCustomdateOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsigntemplatesignatureCustomdate) {
		return nil, false
	}
	return o.BEzsigntemplatesignatureCustomdate, true
}

// HasBEzsigntemplatesignatureCustomdate returns a boolean if a field has been set.
func (o *EzsigntemplatesignatureResponseCompound) HasBEzsigntemplatesignatureCustomdate() bool {
	if o != nil && !IsNil(o.BEzsigntemplatesignatureCustomdate) {
		return true
	}

	return false
}

// SetBEzsigntemplatesignatureCustomdate gets a reference to the given bool and assigns it to the BEzsigntemplatesignatureCustomdate field.
func (o *EzsigntemplatesignatureResponseCompound) SetBEzsigntemplatesignatureCustomdate(v bool) {
	o.BEzsigntemplatesignatureCustomdate = &v
}

// GetAObjEzsigntemplatesignaturecustomdate returns the AObjEzsigntemplatesignaturecustomdate field value if set, zero value otherwise.
func (o *EzsigntemplatesignatureResponseCompound) GetAObjEzsigntemplatesignaturecustomdate() []EzsigntemplatesignaturecustomdateResponseCompound {
	if o == nil || IsNil(o.AObjEzsigntemplatesignaturecustomdate) {
		var ret []EzsigntemplatesignaturecustomdateResponseCompound
		return ret
	}
	return o.AObjEzsigntemplatesignaturecustomdate
}

// GetAObjEzsigntemplatesignaturecustomdateOk returns a tuple with the AObjEzsigntemplatesignaturecustomdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplatesignatureResponseCompound) GetAObjEzsigntemplatesignaturecustomdateOk() ([]EzsigntemplatesignaturecustomdateResponseCompound, bool) {
	if o == nil || IsNil(o.AObjEzsigntemplatesignaturecustomdate) {
		return nil, false
	}
	return o.AObjEzsigntemplatesignaturecustomdate, true
}

// HasAObjEzsigntemplatesignaturecustomdate returns a boolean if a field has been set.
func (o *EzsigntemplatesignatureResponseCompound) HasAObjEzsigntemplatesignaturecustomdate() bool {
	if o != nil && !IsNil(o.AObjEzsigntemplatesignaturecustomdate) {
		return true
	}

	return false
}

// SetAObjEzsigntemplatesignaturecustomdate gets a reference to the given []EzsigntemplatesignaturecustomdateResponseCompound and assigns it to the AObjEzsigntemplatesignaturecustomdate field.
func (o *EzsigntemplatesignatureResponseCompound) SetAObjEzsigntemplatesignaturecustomdate(v []EzsigntemplatesignaturecustomdateResponseCompound) {
	o.AObjEzsigntemplatesignaturecustomdate = v
}

// GetAObjEzsigntemplateelementdependency returns the AObjEzsigntemplateelementdependency field value if set, zero value otherwise.
func (o *EzsigntemplatesignatureResponseCompound) GetAObjEzsigntemplateelementdependency() []EzsigntemplateelementdependencyResponseCompound {
	if o == nil || IsNil(o.AObjEzsigntemplateelementdependency) {
		var ret []EzsigntemplateelementdependencyResponseCompound
		return ret
	}
	return o.AObjEzsigntemplateelementdependency
}

// GetAObjEzsigntemplateelementdependencyOk returns a tuple with the AObjEzsigntemplateelementdependency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplatesignatureResponseCompound) GetAObjEzsigntemplateelementdependencyOk() ([]EzsigntemplateelementdependencyResponseCompound, bool) {
	if o == nil || IsNil(o.AObjEzsigntemplateelementdependency) {
		return nil, false
	}
	return o.AObjEzsigntemplateelementdependency, true
}

// HasAObjEzsigntemplateelementdependency returns a boolean if a field has been set.
func (o *EzsigntemplatesignatureResponseCompound) HasAObjEzsigntemplateelementdependency() bool {
	if o != nil && !IsNil(o.AObjEzsigntemplateelementdependency) {
		return true
	}

	return false
}

// SetAObjEzsigntemplateelementdependency gets a reference to the given []EzsigntemplateelementdependencyResponseCompound and assigns it to the AObjEzsigntemplateelementdependency field.
func (o *EzsigntemplatesignatureResponseCompound) SetAObjEzsigntemplateelementdependency(v []EzsigntemplateelementdependencyResponseCompound) {
	o.AObjEzsigntemplateelementdependency = v
}

func (o EzsigntemplatesignatureResponseCompound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsigntemplatesignatureResponseCompound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BEzsigntemplatesignatureCustomdate) {
		toSerialize["bEzsigntemplatesignatureCustomdate"] = o.BEzsigntemplatesignatureCustomdate
	}
	if !IsNil(o.AObjEzsigntemplatesignaturecustomdate) {
		toSerialize["a_objEzsigntemplatesignaturecustomdate"] = o.AObjEzsigntemplatesignaturecustomdate
	}
	if !IsNil(o.AObjEzsigntemplateelementdependency) {
		toSerialize["a_objEzsigntemplateelementdependency"] = o.AObjEzsigntemplateelementdependency
	}
	return toSerialize, nil
}

func (o *EzsigntemplatesignatureResponseCompound) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pkiEzsigntemplatesignatureID",
		"fkiEzsigntemplatedocumentID",
		"fkiEzsigntemplatesignerID",
		"iEzsigntemplatedocumentpagePagenumber",
		"iEzsigntemplatesignatureStep",
		"eEzsigntemplatesignatureType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsigntemplatesignatureResponseCompound := _EzsigntemplatesignatureResponseCompound{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsigntemplatesignatureResponseCompound)

	if err != nil {
		return err
	}

	*o = EzsigntemplatesignatureResponseCompound(varEzsigntemplatesignatureResponseCompound)

	return err
}

type NullableEzsigntemplatesignatureResponseCompound struct {
	value *EzsigntemplatesignatureResponseCompound
	isSet bool
}

func (v NullableEzsigntemplatesignatureResponseCompound) Get() *EzsigntemplatesignatureResponseCompound {
	return v.value
}

func (v *NullableEzsigntemplatesignatureResponseCompound) Set(val *EzsigntemplatesignatureResponseCompound) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsigntemplatesignatureResponseCompound) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsigntemplatesignatureResponseCompound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsigntemplatesignatureResponseCompound(val *EzsigntemplatesignatureResponseCompound) *NullableEzsigntemplatesignatureResponseCompound {
	return &NullableEzsigntemplatesignatureResponseCompound{value: val, isSet: true}
}

func (v NullableEzsigntemplatesignatureResponseCompound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsigntemplatesignatureResponseCompound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


