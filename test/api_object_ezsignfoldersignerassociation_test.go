/*
eZmax API Definition (Full)

Testing ObjectEzsignfoldersignerassociationAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package eZmaxApi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/ezmaxinc/ezmax-sdk-go"
)

func Test_eZmaxApi_ObjectEzsignfoldersignerassociationAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ObjectEzsignfoldersignerassociationAPIService EzsignfoldersignerassociationCreateEmbeddedUrlV1", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pkiEzsignfoldersignerassociationID int32

		resp, httpRes, err := apiClient.ObjectEzsignfoldersignerassociationAPI.EzsignfoldersignerassociationCreateEmbeddedUrlV1(context.Background(), pkiEzsignfoldersignerassociationID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzsignfoldersignerassociationAPIService EzsignfoldersignerassociationCreateObjectV1", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ObjectEzsignfoldersignerassociationAPI.EzsignfoldersignerassociationCreateObjectV1(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzsignfoldersignerassociationAPIService EzsignfoldersignerassociationCreateObjectV2", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ObjectEzsignfoldersignerassociationAPI.EzsignfoldersignerassociationCreateObjectV2(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzsignfoldersignerassociationAPIService EzsignfoldersignerassociationDeleteObjectV1", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pkiEzsignfoldersignerassociationID int32

		resp, httpRes, err := apiClient.ObjectEzsignfoldersignerassociationAPI.EzsignfoldersignerassociationDeleteObjectV1(context.Background(), pkiEzsignfoldersignerassociationID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzsignfoldersignerassociationAPIService EzsignfoldersignerassociationEditObjectV1", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pkiEzsignfoldersignerassociationID int32

		resp, httpRes, err := apiClient.ObjectEzsignfoldersignerassociationAPI.EzsignfoldersignerassociationEditObjectV1(context.Background(), pkiEzsignfoldersignerassociationID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzsignfoldersignerassociationAPIService EzsignfoldersignerassociationForceDisconnectV1", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pkiEzsignfoldersignerassociationID int32

		resp, httpRes, err := apiClient.ObjectEzsignfoldersignerassociationAPI.EzsignfoldersignerassociationForceDisconnectV1(context.Background(), pkiEzsignfoldersignerassociationID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzsignfoldersignerassociationAPIService EzsignfoldersignerassociationGetInPersonLoginUrlV1", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pkiEzsignfoldersignerassociationID int32

		resp, httpRes, err := apiClient.ObjectEzsignfoldersignerassociationAPI.EzsignfoldersignerassociationGetInPersonLoginUrlV1(context.Background(), pkiEzsignfoldersignerassociationID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzsignfoldersignerassociationAPIService EzsignfoldersignerassociationGetObjectV1", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pkiEzsignfoldersignerassociationID int32

		resp, httpRes, err := apiClient.ObjectEzsignfoldersignerassociationAPI.EzsignfoldersignerassociationGetObjectV1(context.Background(), pkiEzsignfoldersignerassociationID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzsignfoldersignerassociationAPIService EzsignfoldersignerassociationGetObjectV2", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pkiEzsignfoldersignerassociationID int32

		resp, httpRes, err := apiClient.ObjectEzsignfoldersignerassociationAPI.EzsignfoldersignerassociationGetObjectV2(context.Background(), pkiEzsignfoldersignerassociationID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzsignfoldersignerassociationAPIService EzsignfoldersignerassociationPatchObjectV1", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pkiEzsignfoldersignerassociationID int32

		resp, httpRes, err := apiClient.ObjectEzsignfoldersignerassociationAPI.EzsignfoldersignerassociationPatchObjectV1(context.Background(), pkiEzsignfoldersignerassociationID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzsignfoldersignerassociationAPIService EzsignfoldersignerassociationReassignV1", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pkiEzsignfoldersignerassociationID int32

		resp, httpRes, err := apiClient.ObjectEzsignfoldersignerassociationAPI.EzsignfoldersignerassociationReassignV1(context.Background(), pkiEzsignfoldersignerassociationID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
