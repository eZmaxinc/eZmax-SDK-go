/*
eZmax API Definition (Full)

Testing ObjectEzdoctemplatedocumentAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package eZmaxApi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/ezmaxinc/ezmax-sdk-go"
)

func Test_eZmaxApi_ObjectEzdoctemplatedocumentAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ObjectEzdoctemplatedocumentAPIService EzdoctemplatedocumentCreateObjectV1", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ObjectEzdoctemplatedocumentAPI.EzdoctemplatedocumentCreateObjectV1(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzdoctemplatedocumentAPIService EzdoctemplatedocumentDownloadV1", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pkiEzdoctemplatedocumentID int32

		httpRes, err := apiClient.ObjectEzdoctemplatedocumentAPI.EzdoctemplatedocumentDownloadV1(context.Background(), pkiEzdoctemplatedocumentID).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzdoctemplatedocumentAPIService EzdoctemplatedocumentEditObjectV1", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pkiEzdoctemplatedocumentID int32

		resp, httpRes, err := apiClient.ObjectEzdoctemplatedocumentAPI.EzdoctemplatedocumentEditObjectV1(context.Background(), pkiEzdoctemplatedocumentID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzdoctemplatedocumentAPIService EzdoctemplatedocumentGetAutocompleteV2", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var sSelector string

		resp, httpRes, err := apiClient.ObjectEzdoctemplatedocumentAPI.EzdoctemplatedocumentGetAutocompleteV2(context.Background(), sSelector).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzdoctemplatedocumentAPIService EzdoctemplatedocumentGetListV1", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ObjectEzdoctemplatedocumentAPI.EzdoctemplatedocumentGetListV1(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzdoctemplatedocumentAPIService EzdoctemplatedocumentGetObjectV2", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pkiEzdoctemplatedocumentID int32

		resp, httpRes, err := apiClient.ObjectEzdoctemplatedocumentAPI.EzdoctemplatedocumentGetObjectV2(context.Background(), pkiEzdoctemplatedocumentID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzdoctemplatedocumentAPIService EzdoctemplatedocumentPatchObjectV1", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pkiEzdoctemplatedocumentID int32

		resp, httpRes, err := apiClient.ObjectEzdoctemplatedocumentAPI.EzdoctemplatedocumentPatchObjectV1(context.Background(), pkiEzdoctemplatedocumentID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
