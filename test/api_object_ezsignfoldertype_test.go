/*
eZmax API Definition (Full)

Testing ObjectEzsignfoldertypeAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package eZmaxApi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/ezmaxinc/ezmax-sdk-go"
)

func Test_eZmaxApi_ObjectEzsignfoldertypeAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ObjectEzsignfoldertypeAPIService EzsignfoldertypeCreateObjectV3", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ObjectEzsignfoldertypeAPI.EzsignfoldertypeCreateObjectV3(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzsignfoldertypeAPIService EzsignfoldertypeEditObjectV3", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pkiEzsignfoldertypeID int32

		resp, httpRes, err := apiClient.ObjectEzsignfoldertypeAPI.EzsignfoldertypeEditObjectV3(context.Background(), pkiEzsignfoldertypeID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzsignfoldertypeAPIService EzsignfoldertypeGetAutocompleteV2", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var sSelector string

		resp, httpRes, err := apiClient.ObjectEzsignfoldertypeAPI.EzsignfoldertypeGetAutocompleteV2(context.Background(), sSelector).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzsignfoldertypeAPIService EzsignfoldertypeGetListV1", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ObjectEzsignfoldertypeAPI.EzsignfoldertypeGetListV1(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzsignfoldertypeAPIService EzsignfoldertypeGetObjectV2", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pkiEzsignfoldertypeID int32

		resp, httpRes, err := apiClient.ObjectEzsignfoldertypeAPI.EzsignfoldertypeGetObjectV2(context.Background(), pkiEzsignfoldertypeID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzsignfoldertypeAPIService EzsignfoldertypeGetObjectV4", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pkiEzsignfoldertypeID int32

		resp, httpRes, err := apiClient.ObjectEzsignfoldertypeAPI.EzsignfoldertypeGetObjectV4(context.Background(), pkiEzsignfoldertypeID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
