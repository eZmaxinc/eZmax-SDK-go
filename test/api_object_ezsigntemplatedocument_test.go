/*
eZmax API Definition (Full)

Testing ObjectEzsigntemplatedocumentAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package eZmaxApi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/ezmaxinc/ezmax-sdk-go"
)

func Test_eZmaxApi_ObjectEzsigntemplatedocumentAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ObjectEzsigntemplatedocumentAPIService EzsigntemplatedocumentCreateObjectV1", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ObjectEzsigntemplatedocumentAPI.EzsigntemplatedocumentCreateObjectV1(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzsigntemplatedocumentAPIService EzsigntemplatedocumentEditEzsigntemplateformfieldgroupsV1", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pkiEzsigntemplatedocumentID int32

		resp, httpRes, err := apiClient.ObjectEzsigntemplatedocumentAPI.EzsigntemplatedocumentEditEzsigntemplateformfieldgroupsV1(context.Background(), pkiEzsigntemplatedocumentID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzsigntemplatedocumentAPIService EzsigntemplatedocumentEditEzsigntemplatesignaturesV1", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pkiEzsigntemplatedocumentID int32

		resp, httpRes, err := apiClient.ObjectEzsigntemplatedocumentAPI.EzsigntemplatedocumentEditEzsigntemplatesignaturesV1(context.Background(), pkiEzsigntemplatedocumentID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzsigntemplatedocumentAPIService EzsigntemplatedocumentEditObjectV1", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pkiEzsigntemplatedocumentID int32

		resp, httpRes, err := apiClient.ObjectEzsigntemplatedocumentAPI.EzsigntemplatedocumentEditObjectV1(context.Background(), pkiEzsigntemplatedocumentID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzsigntemplatedocumentAPIService EzsigntemplatedocumentFlattenV1", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pkiEzsigntemplatedocumentID int32

		resp, httpRes, err := apiClient.ObjectEzsigntemplatedocumentAPI.EzsigntemplatedocumentFlattenV1(context.Background(), pkiEzsigntemplatedocumentID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzsigntemplatedocumentAPIService EzsigntemplatedocumentGetEzsigntemplatedocumentpagesV1", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pkiEzsigntemplatedocumentID int32

		resp, httpRes, err := apiClient.ObjectEzsigntemplatedocumentAPI.EzsigntemplatedocumentGetEzsigntemplatedocumentpagesV1(context.Background(), pkiEzsigntemplatedocumentID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzsigntemplatedocumentAPIService EzsigntemplatedocumentGetEzsigntemplateformfieldgroupsV1", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pkiEzsigntemplatedocumentID int32

		resp, httpRes, err := apiClient.ObjectEzsigntemplatedocumentAPI.EzsigntemplatedocumentGetEzsigntemplateformfieldgroupsV1(context.Background(), pkiEzsigntemplatedocumentID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzsigntemplatedocumentAPIService EzsigntemplatedocumentGetEzsigntemplatesignaturesV1", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pkiEzsigntemplatedocumentID int32

		resp, httpRes, err := apiClient.ObjectEzsigntemplatedocumentAPI.EzsigntemplatedocumentGetEzsigntemplatesignaturesV1(context.Background(), pkiEzsigntemplatedocumentID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzsigntemplatedocumentAPIService EzsigntemplatedocumentGetObjectV2", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pkiEzsigntemplatedocumentID int32

		resp, httpRes, err := apiClient.ObjectEzsigntemplatedocumentAPI.EzsigntemplatedocumentGetObjectV2(context.Background(), pkiEzsigntemplatedocumentID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzsigntemplatedocumentAPIService EzsigntemplatedocumentGetWordsPositionsV1", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pkiEzsigntemplatedocumentID int32

		resp, httpRes, err := apiClient.ObjectEzsigntemplatedocumentAPI.EzsigntemplatedocumentGetWordsPositionsV1(context.Background(), pkiEzsigntemplatedocumentID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzsigntemplatedocumentAPIService EzsigntemplatedocumentPatchObjectV1", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pkiEzsigntemplatedocumentID int32

		resp, httpRes, err := apiClient.ObjectEzsigntemplatedocumentAPI.EzsigntemplatedocumentPatchObjectV1(context.Background(), pkiEzsigntemplatedocumentID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
