/*
eZmax API Definition (Full)

Testing ObjectEzsignsigningreasonAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package eZmaxApi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/ezmaxinc/ezmax-sdk-go"
)

func Test_eZmaxApi_ObjectEzsignsigningreasonAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ObjectEzsignsigningreasonAPIService EzsignsigningreasonCreateObjectV1", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ObjectEzsignsigningreasonAPI.EzsignsigningreasonCreateObjectV1(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzsignsigningreasonAPIService EzsignsigningreasonEditObjectV1", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pkiEzsignsigningreasonID int32

		resp, httpRes, err := apiClient.ObjectEzsignsigningreasonAPI.EzsignsigningreasonEditObjectV1(context.Background(), pkiEzsignsigningreasonID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzsignsigningreasonAPIService EzsignsigningreasonGetAutocompleteV2", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var sSelector string

		resp, httpRes, err := apiClient.ObjectEzsignsigningreasonAPI.EzsignsigningreasonGetAutocompleteV2(context.Background(), sSelector).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzsignsigningreasonAPIService EzsignsigningreasonGetListV1", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ObjectEzsignsigningreasonAPI.EzsignsigningreasonGetListV1(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ObjectEzsignsigningreasonAPIService EzsignsigningreasonGetObjectV2", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pkiEzsignsigningreasonID int32

		resp, httpRes, err := apiClient.ObjectEzsignsigningreasonAPI.EzsignsigningreasonGetObjectV2(context.Background(), pkiEzsignsigningreasonID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
