/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsignfoldersignerassociationRequestCompound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsignfoldersignerassociationRequestCompound{}

// EzsignfoldersignerassociationRequestCompound An Ezsignfoldersignerassociation Object and children to create a complete structure
type EzsignfoldersignerassociationRequestCompound struct {
	EzsignfoldersignerassociationRequest
	ObjEzsignsigner *EzsignsignerRequestCompound `json:"objEzsignsigner,omitempty"`
}

type _EzsignfoldersignerassociationRequestCompound EzsignfoldersignerassociationRequestCompound

// NewEzsignfoldersignerassociationRequestCompound instantiates a new EzsignfoldersignerassociationRequestCompound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsignfoldersignerassociationRequestCompound(fkiEzsignfolderID int32) *EzsignfoldersignerassociationRequestCompound {
	this := EzsignfoldersignerassociationRequestCompound{}
	this.FkiEzsignfolderID = fkiEzsignfolderID
	return &this
}

// NewEzsignfoldersignerassociationRequestCompoundWithDefaults instantiates a new EzsignfoldersignerassociationRequestCompound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsignfoldersignerassociationRequestCompoundWithDefaults() *EzsignfoldersignerassociationRequestCompound {
	this := EzsignfoldersignerassociationRequestCompound{}
	return &this
}

// GetObjEzsignsigner returns the ObjEzsignsigner field value if set, zero value otherwise.
func (o *EzsignfoldersignerassociationRequestCompound) GetObjEzsignsigner() EzsignsignerRequestCompound {
	if o == nil || IsNil(o.ObjEzsignsigner) {
		var ret EzsignsignerRequestCompound
		return ret
	}
	return *o.ObjEzsignsigner
}

// GetObjEzsignsignerOk returns a tuple with the ObjEzsignsigner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldersignerassociationRequestCompound) GetObjEzsignsignerOk() (*EzsignsignerRequestCompound, bool) {
	if o == nil || IsNil(o.ObjEzsignsigner) {
		return nil, false
	}
	return o.ObjEzsignsigner, true
}

// HasObjEzsignsigner returns a boolean if a field has been set.
func (o *EzsignfoldersignerassociationRequestCompound) HasObjEzsignsigner() bool {
	if o != nil && !IsNil(o.ObjEzsignsigner) {
		return true
	}

	return false
}

// SetObjEzsignsigner gets a reference to the given EzsignsignerRequestCompound and assigns it to the ObjEzsignsigner field.
func (o *EzsignfoldersignerassociationRequestCompound) SetObjEzsignsigner(v EzsignsignerRequestCompound) {
	o.ObjEzsignsigner = &v
}

func (o EzsignfoldersignerassociationRequestCompound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsignfoldersignerassociationRequestCompound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ObjEzsignsigner) {
		toSerialize["objEzsignsigner"] = o.ObjEzsignsigner
	}
	return toSerialize, nil
}

func (o *EzsignfoldersignerassociationRequestCompound) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"fkiEzsignfolderID",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsignfoldersignerassociationRequestCompound := _EzsignfoldersignerassociationRequestCompound{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsignfoldersignerassociationRequestCompound)

	if err != nil {
		return err
	}

	*o = EzsignfoldersignerassociationRequestCompound(varEzsignfoldersignerassociationRequestCompound)

	return err
}

type NullableEzsignfoldersignerassociationRequestCompound struct {
	value *EzsignfoldersignerassociationRequestCompound
	isSet bool
}

func (v NullableEzsignfoldersignerassociationRequestCompound) Get() *EzsignfoldersignerassociationRequestCompound {
	return v.value
}

func (v *NullableEzsignfoldersignerassociationRequestCompound) Set(val *EzsignfoldersignerassociationRequestCompound) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsignfoldersignerassociationRequestCompound) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsignfoldersignerassociationRequestCompound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsignfoldersignerassociationRequestCompound(val *EzsignfoldersignerassociationRequestCompound) *NullableEzsignfoldersignerassociationRequestCompound {
	return &NullableEzsignfoldersignerassociationRequestCompound{value: val, isSet: true}
}

func (v NullableEzsignfoldersignerassociationRequestCompound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsignfoldersignerassociationRequestCompound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


