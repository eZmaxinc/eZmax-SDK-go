/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CustomEzsignsignaturestatusResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomEzsignsignaturestatusResponse{}

// CustomEzsignsignaturestatusResponse A Ezsignsignaturestatus Object and children to create a complete structure
type CustomEzsignsignaturestatusResponse struct {
	// Type of step
	EEzsignsignaturestatusSteptype string `json:"eEzsignsignaturestatusSteptype"`
	// The step at which the Ezsignsigner will be invited to sign or fill the form fields
	IEzsignsignaturestatusStep int32 `json:"iEzsignsignaturestatusStep"`
	// The total number of signature or form fields the Ezsignsigner must process at the current step
	IEzsignsignaturestatusTotal int32 `json:"iEzsignsignaturestatusTotal"`
	// The number of signature or form fields the Ezsignsigner has already processed at the current step
	IEzsignsignaturestatusSigned int32 `json:"iEzsignsignaturestatusSigned"`
	// The number of signature or form fields the Ezsignsigner need to sign or fill under current conditions.
	IEzsignsignaturestatusConditional int32 `json:"iEzsignsignaturestatusConditional"`
}

type _CustomEzsignsignaturestatusResponse CustomEzsignsignaturestatusResponse

// NewCustomEzsignsignaturestatusResponse instantiates a new CustomEzsignsignaturestatusResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomEzsignsignaturestatusResponse(eEzsignsignaturestatusSteptype string, iEzsignsignaturestatusStep int32, iEzsignsignaturestatusTotal int32, iEzsignsignaturestatusSigned int32, iEzsignsignaturestatusConditional int32) *CustomEzsignsignaturestatusResponse {
	this := CustomEzsignsignaturestatusResponse{}
	this.EEzsignsignaturestatusSteptype = eEzsignsignaturestatusSteptype
	this.IEzsignsignaturestatusStep = iEzsignsignaturestatusStep
	this.IEzsignsignaturestatusTotal = iEzsignsignaturestatusTotal
	this.IEzsignsignaturestatusSigned = iEzsignsignaturestatusSigned
	this.IEzsignsignaturestatusConditional = iEzsignsignaturestatusConditional
	return &this
}

// NewCustomEzsignsignaturestatusResponseWithDefaults instantiates a new CustomEzsignsignaturestatusResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomEzsignsignaturestatusResponseWithDefaults() *CustomEzsignsignaturestatusResponse {
	this := CustomEzsignsignaturestatusResponse{}
	return &this
}

// GetEEzsignsignaturestatusSteptype returns the EEzsignsignaturestatusSteptype field value
func (o *CustomEzsignsignaturestatusResponse) GetEEzsignsignaturestatusSteptype() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EEzsignsignaturestatusSteptype
}

// GetEEzsignsignaturestatusSteptypeOk returns a tuple with the EEzsignsignaturestatusSteptype field value
// and a boolean to check if the value has been set.
func (o *CustomEzsignsignaturestatusResponse) GetEEzsignsignaturestatusSteptypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EEzsignsignaturestatusSteptype, true
}

// SetEEzsignsignaturestatusSteptype sets field value
func (o *CustomEzsignsignaturestatusResponse) SetEEzsignsignaturestatusSteptype(v string) {
	o.EEzsignsignaturestatusSteptype = v
}

// GetIEzsignsignaturestatusStep returns the IEzsignsignaturestatusStep field value
func (o *CustomEzsignsignaturestatusResponse) GetIEzsignsignaturestatusStep() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IEzsignsignaturestatusStep
}

// GetIEzsignsignaturestatusStepOk returns a tuple with the IEzsignsignaturestatusStep field value
// and a boolean to check if the value has been set.
func (o *CustomEzsignsignaturestatusResponse) GetIEzsignsignaturestatusStepOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IEzsignsignaturestatusStep, true
}

// SetIEzsignsignaturestatusStep sets field value
func (o *CustomEzsignsignaturestatusResponse) SetIEzsignsignaturestatusStep(v int32) {
	o.IEzsignsignaturestatusStep = v
}

// GetIEzsignsignaturestatusTotal returns the IEzsignsignaturestatusTotal field value
func (o *CustomEzsignsignaturestatusResponse) GetIEzsignsignaturestatusTotal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IEzsignsignaturestatusTotal
}

// GetIEzsignsignaturestatusTotalOk returns a tuple with the IEzsignsignaturestatusTotal field value
// and a boolean to check if the value has been set.
func (o *CustomEzsignsignaturestatusResponse) GetIEzsignsignaturestatusTotalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IEzsignsignaturestatusTotal, true
}

// SetIEzsignsignaturestatusTotal sets field value
func (o *CustomEzsignsignaturestatusResponse) SetIEzsignsignaturestatusTotal(v int32) {
	o.IEzsignsignaturestatusTotal = v
}

// GetIEzsignsignaturestatusSigned returns the IEzsignsignaturestatusSigned field value
func (o *CustomEzsignsignaturestatusResponse) GetIEzsignsignaturestatusSigned() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IEzsignsignaturestatusSigned
}

// GetIEzsignsignaturestatusSignedOk returns a tuple with the IEzsignsignaturestatusSigned field value
// and a boolean to check if the value has been set.
func (o *CustomEzsignsignaturestatusResponse) GetIEzsignsignaturestatusSignedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IEzsignsignaturestatusSigned, true
}

// SetIEzsignsignaturestatusSigned sets field value
func (o *CustomEzsignsignaturestatusResponse) SetIEzsignsignaturestatusSigned(v int32) {
	o.IEzsignsignaturestatusSigned = v
}

// GetIEzsignsignaturestatusConditional returns the IEzsignsignaturestatusConditional field value
func (o *CustomEzsignsignaturestatusResponse) GetIEzsignsignaturestatusConditional() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IEzsignsignaturestatusConditional
}

// GetIEzsignsignaturestatusConditionalOk returns a tuple with the IEzsignsignaturestatusConditional field value
// and a boolean to check if the value has been set.
func (o *CustomEzsignsignaturestatusResponse) GetIEzsignsignaturestatusConditionalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IEzsignsignaturestatusConditional, true
}

// SetIEzsignsignaturestatusConditional sets field value
func (o *CustomEzsignsignaturestatusResponse) SetIEzsignsignaturestatusConditional(v int32) {
	o.IEzsignsignaturestatusConditional = v
}

func (o CustomEzsignsignaturestatusResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomEzsignsignaturestatusResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["eEzsignsignaturestatusSteptype"] = o.EEzsignsignaturestatusSteptype
	toSerialize["iEzsignsignaturestatusStep"] = o.IEzsignsignaturestatusStep
	toSerialize["iEzsignsignaturestatusTotal"] = o.IEzsignsignaturestatusTotal
	toSerialize["iEzsignsignaturestatusSigned"] = o.IEzsignsignaturestatusSigned
	toSerialize["iEzsignsignaturestatusConditional"] = o.IEzsignsignaturestatusConditional
	return toSerialize, nil
}

func (o *CustomEzsignsignaturestatusResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"eEzsignsignaturestatusSteptype",
		"iEzsignsignaturestatusStep",
		"iEzsignsignaturestatusTotal",
		"iEzsignsignaturestatusSigned",
		"iEzsignsignaturestatusConditional",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomEzsignsignaturestatusResponse := _CustomEzsignsignaturestatusResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCustomEzsignsignaturestatusResponse)

	if err != nil {
		return err
	}

	*o = CustomEzsignsignaturestatusResponse(varCustomEzsignsignaturestatusResponse)

	return err
}

type NullableCustomEzsignsignaturestatusResponse struct {
	value *CustomEzsignsignaturestatusResponse
	isSet bool
}

func (v NullableCustomEzsignsignaturestatusResponse) Get() *CustomEzsignsignaturestatusResponse {
	return v.value
}

func (v *NullableCustomEzsignsignaturestatusResponse) Set(val *CustomEzsignsignaturestatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomEzsignsignaturestatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomEzsignsignaturestatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomEzsignsignaturestatusResponse(val *CustomEzsignsignaturestatusResponse) *NullableCustomEzsignsignaturestatusResponse {
	return &NullableCustomEzsignsignaturestatusResponse{value: val, isSet: true}
}

func (v NullableCustomEzsignsignaturestatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomEzsignsignaturestatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


