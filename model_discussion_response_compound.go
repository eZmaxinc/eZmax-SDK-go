/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DiscussionResponseCompound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DiscussionResponseCompound{}

// DiscussionResponseCompound A Discussion Object
type DiscussionResponseCompound struct {
	DiscussionResponse
	AObjDiscussionmembership []DiscussionmembershipResponseCompound `json:"a_objDiscussionmembership"`
	AObjDiscussionmessage []DiscussionmessageResponseCompound `json:"a_objDiscussionmessage"`
}

type _DiscussionResponseCompound DiscussionResponseCompound

// NewDiscussionResponseCompound instantiates a new DiscussionResponseCompound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiscussionResponseCompound(aObjDiscussionmembership []DiscussionmembershipResponseCompound, aObjDiscussionmessage []DiscussionmessageResponseCompound, pkiDiscussionID int32, sDiscussionDescription string, bDiscussionClosed bool, iDiscussionmessageCount int32, iDiscussionmessageCountunread int32) *DiscussionResponseCompound {
	this := DiscussionResponseCompound{}
	this.PkiDiscussionID = pkiDiscussionID
	this.SDiscussionDescription = sDiscussionDescription
	this.BDiscussionClosed = bDiscussionClosed
	this.IDiscussionmessageCount = iDiscussionmessageCount
	this.IDiscussionmessageCountunread = iDiscussionmessageCountunread
	this.AObjDiscussionmembership = aObjDiscussionmembership
	this.AObjDiscussionmessage = aObjDiscussionmessage
	return &this
}

// NewDiscussionResponseCompoundWithDefaults instantiates a new DiscussionResponseCompound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiscussionResponseCompoundWithDefaults() *DiscussionResponseCompound {
	this := DiscussionResponseCompound{}
	return &this
}

// GetAObjDiscussionmembership returns the AObjDiscussionmembership field value
func (o *DiscussionResponseCompound) GetAObjDiscussionmembership() []DiscussionmembershipResponseCompound {
	if o == nil {
		var ret []DiscussionmembershipResponseCompound
		return ret
	}

	return o.AObjDiscussionmembership
}

// GetAObjDiscussionmembershipOk returns a tuple with the AObjDiscussionmembership field value
// and a boolean to check if the value has been set.
func (o *DiscussionResponseCompound) GetAObjDiscussionmembershipOk() ([]DiscussionmembershipResponseCompound, bool) {
	if o == nil {
		return nil, false
	}
	return o.AObjDiscussionmembership, true
}

// SetAObjDiscussionmembership sets field value
func (o *DiscussionResponseCompound) SetAObjDiscussionmembership(v []DiscussionmembershipResponseCompound) {
	o.AObjDiscussionmembership = v
}

// GetAObjDiscussionmessage returns the AObjDiscussionmessage field value
func (o *DiscussionResponseCompound) GetAObjDiscussionmessage() []DiscussionmessageResponseCompound {
	if o == nil {
		var ret []DiscussionmessageResponseCompound
		return ret
	}

	return o.AObjDiscussionmessage
}

// GetAObjDiscussionmessageOk returns a tuple with the AObjDiscussionmessage field value
// and a boolean to check if the value has been set.
func (o *DiscussionResponseCompound) GetAObjDiscussionmessageOk() ([]DiscussionmessageResponseCompound, bool) {
	if o == nil {
		return nil, false
	}
	return o.AObjDiscussionmessage, true
}

// SetAObjDiscussionmessage sets field value
func (o *DiscussionResponseCompound) SetAObjDiscussionmessage(v []DiscussionmessageResponseCompound) {
	o.AObjDiscussionmessage = v
}

func (o DiscussionResponseCompound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DiscussionResponseCompound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["a_objDiscussionmembership"] = o.AObjDiscussionmembership
	toSerialize["a_objDiscussionmessage"] = o.AObjDiscussionmessage
	return toSerialize, nil
}

func (o *DiscussionResponseCompound) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"a_objDiscussionmembership",
		"a_objDiscussionmessage",
		"pkiDiscussionID",
		"sDiscussionDescription",
		"bDiscussionClosed",
		"iDiscussionmessageCount",
		"iDiscussionmessageCountunread",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDiscussionResponseCompound := _DiscussionResponseCompound{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDiscussionResponseCompound)

	if err != nil {
		return err
	}

	*o = DiscussionResponseCompound(varDiscussionResponseCompound)

	return err
}

type NullableDiscussionResponseCompound struct {
	value *DiscussionResponseCompound
	isSet bool
}

func (v NullableDiscussionResponseCompound) Get() *DiscussionResponseCompound {
	return v.value
}

func (v *NullableDiscussionResponseCompound) Set(val *DiscussionResponseCompound) {
	v.value = val
	v.isSet = true
}

func (v NullableDiscussionResponseCompound) IsSet() bool {
	return v.isSet
}

func (v *NullableDiscussionResponseCompound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiscussionResponseCompound(val *DiscussionResponseCompound) *NullableDiscussionResponseCompound {
	return &NullableDiscussionResponseCompound{value: val, isSet: true}
}

func (v NullableDiscussionResponseCompound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiscussionResponseCompound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


