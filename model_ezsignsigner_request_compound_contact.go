/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.2
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsignsignerRequestCompoundContact type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsignsignerRequestCompoundContact{}

// EzsignsignerRequestCompoundContact A Ezsignsigner->Contact Object and children to create a complete structure
type EzsignsignerRequestCompoundContact struct {
	// The First name of the contact
	SContactFirstname string `json:"sContactFirstname" validate:"regexp=^.{1,20}$"`
	// The Last name of the contact
	SContactLastname string `json:"sContactLastname" validate:"regexp=^.{1,25}$"`
	// The unique ID of the Language.  Valid values:  |Value|Description| |-|-| |1|French| |2|English|
	FkiLanguageID int32 `json:"fkiLanguageID"`
	// The email address.
	SEmailAddress *string "json:\"sEmailAddress,omitempty\" validate:\"regexp=^[\\\\w.%+\\\\-!#$%&'*+\\/=?^`{|}~]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,20}$\""
	// A phone number in E.164 Format
	SPhoneE164 *string `json:"sPhoneE164,omitempty" validate:"regexp=^\\\\+[1-9]\\\\d{1,14}$"`
	// The extension of the phone number.  The extension is the \"123\" section in this sample phone number: (514) 990-1516 x123.  It can also be used with international phone numbers
	SPhoneExtension *string `json:"sPhoneExtension,omitempty"`
	// A phone number in E.164 Format
	SPhoneE164Cell *string `json:"sPhoneE164Cell,omitempty" validate:"regexp=^\\\\+[1-9]\\\\d{1,14}$"`
	// Deprecated
	SPhoneNumber *string `json:"sPhoneNumber,omitempty"`
	// Deprecated
	SPhoneNumberCell *string `json:"sPhoneNumberCell,omitempty"`
}

type _EzsignsignerRequestCompoundContact EzsignsignerRequestCompoundContact

// NewEzsignsignerRequestCompoundContact instantiates a new EzsignsignerRequestCompoundContact object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsignsignerRequestCompoundContact(sContactFirstname string, sContactLastname string, fkiLanguageID int32) *EzsignsignerRequestCompoundContact {
	this := EzsignsignerRequestCompoundContact{}
	this.SContactFirstname = sContactFirstname
	this.SContactLastname = sContactLastname
	this.FkiLanguageID = fkiLanguageID
	return &this
}

// NewEzsignsignerRequestCompoundContactWithDefaults instantiates a new EzsignsignerRequestCompoundContact object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsignsignerRequestCompoundContactWithDefaults() *EzsignsignerRequestCompoundContact {
	this := EzsignsignerRequestCompoundContact{}
	return &this
}

// GetSContactFirstname returns the SContactFirstname field value
func (o *EzsignsignerRequestCompoundContact) GetSContactFirstname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SContactFirstname
}

// GetSContactFirstnameOk returns a tuple with the SContactFirstname field value
// and a boolean to check if the value has been set.
func (o *EzsignsignerRequestCompoundContact) GetSContactFirstnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SContactFirstname, true
}

// SetSContactFirstname sets field value
func (o *EzsignsignerRequestCompoundContact) SetSContactFirstname(v string) {
	o.SContactFirstname = v
}

// GetSContactLastname returns the SContactLastname field value
func (o *EzsignsignerRequestCompoundContact) GetSContactLastname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SContactLastname
}

// GetSContactLastnameOk returns a tuple with the SContactLastname field value
// and a boolean to check if the value has been set.
func (o *EzsignsignerRequestCompoundContact) GetSContactLastnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SContactLastname, true
}

// SetSContactLastname sets field value
func (o *EzsignsignerRequestCompoundContact) SetSContactLastname(v string) {
	o.SContactLastname = v
}

// GetFkiLanguageID returns the FkiLanguageID field value
func (o *EzsignsignerRequestCompoundContact) GetFkiLanguageID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiLanguageID
}

// GetFkiLanguageIDOk returns a tuple with the FkiLanguageID field value
// and a boolean to check if the value has been set.
func (o *EzsignsignerRequestCompoundContact) GetFkiLanguageIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiLanguageID, true
}

// SetFkiLanguageID sets field value
func (o *EzsignsignerRequestCompoundContact) SetFkiLanguageID(v int32) {
	o.FkiLanguageID = v
}

// GetSEmailAddress returns the SEmailAddress field value if set, zero value otherwise.
func (o *EzsignsignerRequestCompoundContact) GetSEmailAddress() string {
	if o == nil || IsNil(o.SEmailAddress) {
		var ret string
		return ret
	}
	return *o.SEmailAddress
}

// GetSEmailAddressOk returns a tuple with the SEmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignsignerRequestCompoundContact) GetSEmailAddressOk() (*string, bool) {
	if o == nil || IsNil(o.SEmailAddress) {
		return nil, false
	}
	return o.SEmailAddress, true
}

// HasSEmailAddress returns a boolean if a field has been set.
func (o *EzsignsignerRequestCompoundContact) HasSEmailAddress() bool {
	if o != nil && !IsNil(o.SEmailAddress) {
		return true
	}

	return false
}

// SetSEmailAddress gets a reference to the given string and assigns it to the SEmailAddress field.
func (o *EzsignsignerRequestCompoundContact) SetSEmailAddress(v string) {
	o.SEmailAddress = &v
}

// GetSPhoneE164 returns the SPhoneE164 field value if set, zero value otherwise.
func (o *EzsignsignerRequestCompoundContact) GetSPhoneE164() string {
	if o == nil || IsNil(o.SPhoneE164) {
		var ret string
		return ret
	}
	return *o.SPhoneE164
}

// GetSPhoneE164Ok returns a tuple with the SPhoneE164 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignsignerRequestCompoundContact) GetSPhoneE164Ok() (*string, bool) {
	if o == nil || IsNil(o.SPhoneE164) {
		return nil, false
	}
	return o.SPhoneE164, true
}

// HasSPhoneE164 returns a boolean if a field has been set.
func (o *EzsignsignerRequestCompoundContact) HasSPhoneE164() bool {
	if o != nil && !IsNil(o.SPhoneE164) {
		return true
	}

	return false
}

// SetSPhoneE164 gets a reference to the given string and assigns it to the SPhoneE164 field.
func (o *EzsignsignerRequestCompoundContact) SetSPhoneE164(v string) {
	o.SPhoneE164 = &v
}

// GetSPhoneExtension returns the SPhoneExtension field value if set, zero value otherwise.
func (o *EzsignsignerRequestCompoundContact) GetSPhoneExtension() string {
	if o == nil || IsNil(o.SPhoneExtension) {
		var ret string
		return ret
	}
	return *o.SPhoneExtension
}

// GetSPhoneExtensionOk returns a tuple with the SPhoneExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignsignerRequestCompoundContact) GetSPhoneExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.SPhoneExtension) {
		return nil, false
	}
	return o.SPhoneExtension, true
}

// HasSPhoneExtension returns a boolean if a field has been set.
func (o *EzsignsignerRequestCompoundContact) HasSPhoneExtension() bool {
	if o != nil && !IsNil(o.SPhoneExtension) {
		return true
	}

	return false
}

// SetSPhoneExtension gets a reference to the given string and assigns it to the SPhoneExtension field.
func (o *EzsignsignerRequestCompoundContact) SetSPhoneExtension(v string) {
	o.SPhoneExtension = &v
}

// GetSPhoneE164Cell returns the SPhoneE164Cell field value if set, zero value otherwise.
func (o *EzsignsignerRequestCompoundContact) GetSPhoneE164Cell() string {
	if o == nil || IsNil(o.SPhoneE164Cell) {
		var ret string
		return ret
	}
	return *o.SPhoneE164Cell
}

// GetSPhoneE164CellOk returns a tuple with the SPhoneE164Cell field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignsignerRequestCompoundContact) GetSPhoneE164CellOk() (*string, bool) {
	if o == nil || IsNil(o.SPhoneE164Cell) {
		return nil, false
	}
	return o.SPhoneE164Cell, true
}

// HasSPhoneE164Cell returns a boolean if a field has been set.
func (o *EzsignsignerRequestCompoundContact) HasSPhoneE164Cell() bool {
	if o != nil && !IsNil(o.SPhoneE164Cell) {
		return true
	}

	return false
}

// SetSPhoneE164Cell gets a reference to the given string and assigns it to the SPhoneE164Cell field.
func (o *EzsignsignerRequestCompoundContact) SetSPhoneE164Cell(v string) {
	o.SPhoneE164Cell = &v
}

// GetSPhoneNumber returns the SPhoneNumber field value if set, zero value otherwise.
// Deprecated
func (o *EzsignsignerRequestCompoundContact) GetSPhoneNumber() string {
	if o == nil || IsNil(o.SPhoneNumber) {
		var ret string
		return ret
	}
	return *o.SPhoneNumber
}

// GetSPhoneNumberOk returns a tuple with the SPhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *EzsignsignerRequestCompoundContact) GetSPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SPhoneNumber) {
		return nil, false
	}
	return o.SPhoneNumber, true
}

// HasSPhoneNumber returns a boolean if a field has been set.
func (o *EzsignsignerRequestCompoundContact) HasSPhoneNumber() bool {
	if o != nil && !IsNil(o.SPhoneNumber) {
		return true
	}

	return false
}

// SetSPhoneNumber gets a reference to the given string and assigns it to the SPhoneNumber field.
// Deprecated
func (o *EzsignsignerRequestCompoundContact) SetSPhoneNumber(v string) {
	o.SPhoneNumber = &v
}

// GetSPhoneNumberCell returns the SPhoneNumberCell field value if set, zero value otherwise.
// Deprecated
func (o *EzsignsignerRequestCompoundContact) GetSPhoneNumberCell() string {
	if o == nil || IsNil(o.SPhoneNumberCell) {
		var ret string
		return ret
	}
	return *o.SPhoneNumberCell
}

// GetSPhoneNumberCellOk returns a tuple with the SPhoneNumberCell field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *EzsignsignerRequestCompoundContact) GetSPhoneNumberCellOk() (*string, bool) {
	if o == nil || IsNil(o.SPhoneNumberCell) {
		return nil, false
	}
	return o.SPhoneNumberCell, true
}

// HasSPhoneNumberCell returns a boolean if a field has been set.
func (o *EzsignsignerRequestCompoundContact) HasSPhoneNumberCell() bool {
	if o != nil && !IsNil(o.SPhoneNumberCell) {
		return true
	}

	return false
}

// SetSPhoneNumberCell gets a reference to the given string and assigns it to the SPhoneNumberCell field.
// Deprecated
func (o *EzsignsignerRequestCompoundContact) SetSPhoneNumberCell(v string) {
	o.SPhoneNumberCell = &v
}

func (o EzsignsignerRequestCompoundContact) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsignsignerRequestCompoundContact) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sContactFirstname"] = o.SContactFirstname
	toSerialize["sContactLastname"] = o.SContactLastname
	toSerialize["fkiLanguageID"] = o.FkiLanguageID
	if !IsNil(o.SEmailAddress) {
		toSerialize["sEmailAddress"] = o.SEmailAddress
	}
	if !IsNil(o.SPhoneE164) {
		toSerialize["sPhoneE164"] = o.SPhoneE164
	}
	if !IsNil(o.SPhoneExtension) {
		toSerialize["sPhoneExtension"] = o.SPhoneExtension
	}
	if !IsNil(o.SPhoneE164Cell) {
		toSerialize["sPhoneE164Cell"] = o.SPhoneE164Cell
	}
	if !IsNil(o.SPhoneNumber) {
		toSerialize["sPhoneNumber"] = o.SPhoneNumber
	}
	if !IsNil(o.SPhoneNumberCell) {
		toSerialize["sPhoneNumberCell"] = o.SPhoneNumberCell
	}
	return toSerialize, nil
}

func (o *EzsignsignerRequestCompoundContact) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sContactFirstname",
		"sContactLastname",
		"fkiLanguageID",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsignsignerRequestCompoundContact := _EzsignsignerRequestCompoundContact{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsignsignerRequestCompoundContact)

	if err != nil {
		return err
	}

	*o = EzsignsignerRequestCompoundContact(varEzsignsignerRequestCompoundContact)

	return err
}

type NullableEzsignsignerRequestCompoundContact struct {
	value *EzsignsignerRequestCompoundContact
	isSet bool
}

func (v NullableEzsignsignerRequestCompoundContact) Get() *EzsignsignerRequestCompoundContact {
	return v.value
}

func (v *NullableEzsignsignerRequestCompoundContact) Set(val *EzsignsignerRequestCompoundContact) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsignsignerRequestCompoundContact) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsignsignerRequestCompoundContact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsignsignerRequestCompoundContact(val *EzsignsignerRequestCompoundContact) *NullableEzsignsignerRequestCompoundContact {
	return &NullableEzsignsignerRequestCompoundContact{value: val, isSet: true}
}

func (v NullableEzsignsignerRequestCompoundContact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsignsignerRequestCompoundContact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


