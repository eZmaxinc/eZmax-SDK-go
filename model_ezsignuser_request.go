/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsignuserRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsignuserRequest{}

// EzsignuserRequest A Ezsignuser Object
type EzsignuserRequest struct {
	// The unique ID of the Ezsignuser
	PkiEzsignuserID *int32 `json:"pkiEzsignuserID,omitempty"`
	// The unique ID of the Contact
	FkiContactID int32 `json:"fkiContactID"`
	ObjContact ContactRequestCompoundV2 `json:"objContact"`
}

type _EzsignuserRequest EzsignuserRequest

// NewEzsignuserRequest instantiates a new EzsignuserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsignuserRequest(fkiContactID int32, objContact ContactRequestCompoundV2) *EzsignuserRequest {
	this := EzsignuserRequest{}
	this.FkiContactID = fkiContactID
	this.ObjContact = objContact
	return &this
}

// NewEzsignuserRequestWithDefaults instantiates a new EzsignuserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsignuserRequestWithDefaults() *EzsignuserRequest {
	this := EzsignuserRequest{}
	return &this
}

// GetPkiEzsignuserID returns the PkiEzsignuserID field value if set, zero value otherwise.
func (o *EzsignuserRequest) GetPkiEzsignuserID() int32 {
	if o == nil || IsNil(o.PkiEzsignuserID) {
		var ret int32
		return ret
	}
	return *o.PkiEzsignuserID
}

// GetPkiEzsignuserIDOk returns a tuple with the PkiEzsignuserID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignuserRequest) GetPkiEzsignuserIDOk() (*int32, bool) {
	if o == nil || IsNil(o.PkiEzsignuserID) {
		return nil, false
	}
	return o.PkiEzsignuserID, true
}

// HasPkiEzsignuserID returns a boolean if a field has been set.
func (o *EzsignuserRequest) HasPkiEzsignuserID() bool {
	if o != nil && !IsNil(o.PkiEzsignuserID) {
		return true
	}

	return false
}

// SetPkiEzsignuserID gets a reference to the given int32 and assigns it to the PkiEzsignuserID field.
func (o *EzsignuserRequest) SetPkiEzsignuserID(v int32) {
	o.PkiEzsignuserID = &v
}

// GetFkiContactID returns the FkiContactID field value
func (o *EzsignuserRequest) GetFkiContactID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiContactID
}

// GetFkiContactIDOk returns a tuple with the FkiContactID field value
// and a boolean to check if the value has been set.
func (o *EzsignuserRequest) GetFkiContactIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiContactID, true
}

// SetFkiContactID sets field value
func (o *EzsignuserRequest) SetFkiContactID(v int32) {
	o.FkiContactID = v
}

// GetObjContact returns the ObjContact field value
func (o *EzsignuserRequest) GetObjContact() ContactRequestCompoundV2 {
	if o == nil {
		var ret ContactRequestCompoundV2
		return ret
	}

	return o.ObjContact
}

// GetObjContactOk returns a tuple with the ObjContact field value
// and a boolean to check if the value has been set.
func (o *EzsignuserRequest) GetObjContactOk() (*ContactRequestCompoundV2, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjContact, true
}

// SetObjContact sets field value
func (o *EzsignuserRequest) SetObjContact(v ContactRequestCompoundV2) {
	o.ObjContact = v
}

func (o EzsignuserRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsignuserRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PkiEzsignuserID) {
		toSerialize["pkiEzsignuserID"] = o.PkiEzsignuserID
	}
	toSerialize["fkiContactID"] = o.FkiContactID
	toSerialize["objContact"] = o.ObjContact
	return toSerialize, nil
}

func (o *EzsignuserRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"fkiContactID",
		"objContact",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsignuserRequest := _EzsignuserRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsignuserRequest)

	if err != nil {
		return err
	}

	*o = EzsignuserRequest(varEzsignuserRequest)

	return err
}

type NullableEzsignuserRequest struct {
	value *EzsignuserRequest
	isSet bool
}

func (v NullableEzsignuserRequest) Get() *EzsignuserRequest {
	return v.value
}

func (v *NullableEzsignuserRequest) Set(val *EzsignuserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsignuserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsignuserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsignuserRequest(val *EzsignuserRequest) *NullableEzsignuserRequest {
	return &NullableEzsignuserRequest{value: val, isSet: true}
}

func (v NullableEzsignuserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsignuserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


