/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CustomUserResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomUserResponse{}

// CustomUserResponse A User Object
type CustomUserResponse struct {
	// The unique ID of the User
	PkiUserID int32 `json:"pkiUserID"`
	// The last name of the user
	SUserLastname string `json:"sUserLastname"`
	// The first name of the user
	SUserFirstname string `json:"sUserFirstname"`
	// The email address.
	SEmailAddress string `json:"sEmailAddress"`
}

type _CustomUserResponse CustomUserResponse

// NewCustomUserResponse instantiates a new CustomUserResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomUserResponse(pkiUserID int32, sUserLastname string, sUserFirstname string, sEmailAddress string) *CustomUserResponse {
	this := CustomUserResponse{}
	this.PkiUserID = pkiUserID
	this.SUserLastname = sUserLastname
	this.SUserFirstname = sUserFirstname
	this.SEmailAddress = sEmailAddress
	return &this
}

// NewCustomUserResponseWithDefaults instantiates a new CustomUserResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomUserResponseWithDefaults() *CustomUserResponse {
	this := CustomUserResponse{}
	return &this
}

// GetPkiUserID returns the PkiUserID field value
func (o *CustomUserResponse) GetPkiUserID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PkiUserID
}

// GetPkiUserIDOk returns a tuple with the PkiUserID field value
// and a boolean to check if the value has been set.
func (o *CustomUserResponse) GetPkiUserIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkiUserID, true
}

// SetPkiUserID sets field value
func (o *CustomUserResponse) SetPkiUserID(v int32) {
	o.PkiUserID = v
}

// GetSUserLastname returns the SUserLastname field value
func (o *CustomUserResponse) GetSUserLastname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SUserLastname
}

// GetSUserLastnameOk returns a tuple with the SUserLastname field value
// and a boolean to check if the value has been set.
func (o *CustomUserResponse) GetSUserLastnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SUserLastname, true
}

// SetSUserLastname sets field value
func (o *CustomUserResponse) SetSUserLastname(v string) {
	o.SUserLastname = v
}

// GetSUserFirstname returns the SUserFirstname field value
func (o *CustomUserResponse) GetSUserFirstname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SUserFirstname
}

// GetSUserFirstnameOk returns a tuple with the SUserFirstname field value
// and a boolean to check if the value has been set.
func (o *CustomUserResponse) GetSUserFirstnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SUserFirstname, true
}

// SetSUserFirstname sets field value
func (o *CustomUserResponse) SetSUserFirstname(v string) {
	o.SUserFirstname = v
}

// GetSEmailAddress returns the SEmailAddress field value
func (o *CustomUserResponse) GetSEmailAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SEmailAddress
}

// GetSEmailAddressOk returns a tuple with the SEmailAddress field value
// and a boolean to check if the value has been set.
func (o *CustomUserResponse) GetSEmailAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SEmailAddress, true
}

// SetSEmailAddress sets field value
func (o *CustomUserResponse) SetSEmailAddress(v string) {
	o.SEmailAddress = v
}

func (o CustomUserResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomUserResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pkiUserID"] = o.PkiUserID
	toSerialize["sUserLastname"] = o.SUserLastname
	toSerialize["sUserFirstname"] = o.SUserFirstname
	toSerialize["sEmailAddress"] = o.SEmailAddress
	return toSerialize, nil
}

func (o *CustomUserResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pkiUserID",
		"sUserLastname",
		"sUserFirstname",
		"sEmailAddress",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomUserResponse := _CustomUserResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCustomUserResponse)

	if err != nil {
		return err
	}

	*o = CustomUserResponse(varCustomUserResponse)

	return err
}

type NullableCustomUserResponse struct {
	value *CustomUserResponse
	isSet bool
}

func (v NullableCustomUserResponse) Get() *CustomUserResponse {
	return v.value
}

func (v *NullableCustomUserResponse) Set(val *CustomUserResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomUserResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomUserResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomUserResponse(val *CustomUserResponse) *NullableCustomUserResponse {
	return &NullableCustomUserResponse{value: val, isSet: true}
}

func (v NullableCustomUserResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomUserResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


