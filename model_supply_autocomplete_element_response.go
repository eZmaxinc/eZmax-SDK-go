/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SupplyAutocompleteElementResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SupplyAutocompleteElementResponse{}

// SupplyAutocompleteElementResponse A Supply AutocompleteElement Response
type SupplyAutocompleteElementResponse struct {
	// The unique ID of the Supply
	PkiSupplyID int32 `json:"pkiSupplyID"`
	// The description of the Supply in the language of the requester
	SSupplyDescriptionX string `json:"sSupplyDescriptionX" validate:"regexp=^.{0,50}$"`
	// Whether the supply is active or not
	BSupplyIsactive bool `json:"bSupplyIsactive"`
}

type _SupplyAutocompleteElementResponse SupplyAutocompleteElementResponse

// NewSupplyAutocompleteElementResponse instantiates a new SupplyAutocompleteElementResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSupplyAutocompleteElementResponse(pkiSupplyID int32, sSupplyDescriptionX string, bSupplyIsactive bool) *SupplyAutocompleteElementResponse {
	this := SupplyAutocompleteElementResponse{}
	this.PkiSupplyID = pkiSupplyID
	this.SSupplyDescriptionX = sSupplyDescriptionX
	this.BSupplyIsactive = bSupplyIsactive
	return &this
}

// NewSupplyAutocompleteElementResponseWithDefaults instantiates a new SupplyAutocompleteElementResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSupplyAutocompleteElementResponseWithDefaults() *SupplyAutocompleteElementResponse {
	this := SupplyAutocompleteElementResponse{}
	return &this
}

// GetPkiSupplyID returns the PkiSupplyID field value
func (o *SupplyAutocompleteElementResponse) GetPkiSupplyID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PkiSupplyID
}

// GetPkiSupplyIDOk returns a tuple with the PkiSupplyID field value
// and a boolean to check if the value has been set.
func (o *SupplyAutocompleteElementResponse) GetPkiSupplyIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkiSupplyID, true
}

// SetPkiSupplyID sets field value
func (o *SupplyAutocompleteElementResponse) SetPkiSupplyID(v int32) {
	o.PkiSupplyID = v
}

// GetSSupplyDescriptionX returns the SSupplyDescriptionX field value
func (o *SupplyAutocompleteElementResponse) GetSSupplyDescriptionX() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SSupplyDescriptionX
}

// GetSSupplyDescriptionXOk returns a tuple with the SSupplyDescriptionX field value
// and a boolean to check if the value has been set.
func (o *SupplyAutocompleteElementResponse) GetSSupplyDescriptionXOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SSupplyDescriptionX, true
}

// SetSSupplyDescriptionX sets field value
func (o *SupplyAutocompleteElementResponse) SetSSupplyDescriptionX(v string) {
	o.SSupplyDescriptionX = v
}

// GetBSupplyIsactive returns the BSupplyIsactive field value
func (o *SupplyAutocompleteElementResponse) GetBSupplyIsactive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BSupplyIsactive
}

// GetBSupplyIsactiveOk returns a tuple with the BSupplyIsactive field value
// and a boolean to check if the value has been set.
func (o *SupplyAutocompleteElementResponse) GetBSupplyIsactiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BSupplyIsactive, true
}

// SetBSupplyIsactive sets field value
func (o *SupplyAutocompleteElementResponse) SetBSupplyIsactive(v bool) {
	o.BSupplyIsactive = v
}

func (o SupplyAutocompleteElementResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SupplyAutocompleteElementResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pkiSupplyID"] = o.PkiSupplyID
	toSerialize["sSupplyDescriptionX"] = o.SSupplyDescriptionX
	toSerialize["bSupplyIsactive"] = o.BSupplyIsactive
	return toSerialize, nil
}

func (o *SupplyAutocompleteElementResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pkiSupplyID",
		"sSupplyDescriptionX",
		"bSupplyIsactive",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSupplyAutocompleteElementResponse := _SupplyAutocompleteElementResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSupplyAutocompleteElementResponse)

	if err != nil {
		return err
	}

	*o = SupplyAutocompleteElementResponse(varSupplyAutocompleteElementResponse)

	return err
}

type NullableSupplyAutocompleteElementResponse struct {
	value *SupplyAutocompleteElementResponse
	isSet bool
}

func (v NullableSupplyAutocompleteElementResponse) Get() *SupplyAutocompleteElementResponse {
	return v.value
}

func (v *NullableSupplyAutocompleteElementResponse) Set(val *SupplyAutocompleteElementResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSupplyAutocompleteElementResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSupplyAutocompleteElementResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSupplyAutocompleteElementResponse(val *SupplyAutocompleteElementResponse) *NullableSupplyAutocompleteElementResponse {
	return &NullableSupplyAutocompleteElementResponse{value: val, isSet: true}
}

func (v NullableSupplyAutocompleteElementResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSupplyAutocompleteElementResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


