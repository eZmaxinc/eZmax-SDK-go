/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsignsignatureRequestCompound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsignsignatureRequestCompound{}

// EzsignsignatureRequestCompound An Ezsignsignature Object and children to create a complete structure
type EzsignsignatureRequestCompound struct {
	EzsignsignatureRequest
	// Whether the Ezsignsignature has a custom date format or not. (Only possible when eEzsignsignatureType is **Name** or **Handwritten**)
	BEzsignsignatureCustomdate *bool `json:"bEzsignsignatureCustomdate,omitempty"`
	// An array of custom date blocks that will be filled at the time of signature.  Can only be used if bEzsignsignatureCustomdate is true.  Use an empty array if you don't want to have a date at all.
	AObjEzsignsignaturecustomdate []EzsignsignaturecustomdateRequestCompound `json:"a_objEzsignsignaturecustomdate,omitempty"`
	AObjEzsignelementdependency []EzsignelementdependencyRequestCompound `json:"a_objEzsignelementdependency,omitempty"`
}

type _EzsignsignatureRequestCompound EzsignsignatureRequestCompound

// NewEzsignsignatureRequestCompound instantiates a new EzsignsignatureRequestCompound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsignsignatureRequestCompound(fkiEzsignfoldersignerassociationID int32, iEzsignpagePagenumber int32, iEzsignsignatureX int32, iEzsignsignatureY int32, iEzsignsignatureStep int32, eEzsignsignatureType FieldEEzsignsignatureType, fkiEzsigndocumentID int32) *EzsignsignatureRequestCompound {
	this := EzsignsignatureRequestCompound{}
	this.FkiEzsignfoldersignerassociationID = fkiEzsignfoldersignerassociationID
	this.IEzsignpagePagenumber = iEzsignpagePagenumber
	this.IEzsignsignatureX = iEzsignsignatureX
	this.IEzsignsignatureY = iEzsignsignatureY
	this.IEzsignsignatureStep = iEzsignsignatureStep
	this.EEzsignsignatureType = eEzsignsignatureType
	this.FkiEzsigndocumentID = fkiEzsigndocumentID
	return &this
}

// NewEzsignsignatureRequestCompoundWithDefaults instantiates a new EzsignsignatureRequestCompound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsignsignatureRequestCompoundWithDefaults() *EzsignsignatureRequestCompound {
	this := EzsignsignatureRequestCompound{}
	return &this
}

// GetBEzsignsignatureCustomdate returns the BEzsignsignatureCustomdate field value if set, zero value otherwise.
func (o *EzsignsignatureRequestCompound) GetBEzsignsignatureCustomdate() bool {
	if o == nil || IsNil(o.BEzsignsignatureCustomdate) {
		var ret bool
		return ret
	}
	return *o.BEzsignsignatureCustomdate
}

// GetBEzsignsignatureCustomdateOk returns a tuple with the BEzsignsignatureCustomdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignsignatureRequestCompound) GetBEzsignsignatureCustomdateOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignsignatureCustomdate) {
		return nil, false
	}
	return o.BEzsignsignatureCustomdate, true
}

// HasBEzsignsignatureCustomdate returns a boolean if a field has been set.
func (o *EzsignsignatureRequestCompound) HasBEzsignsignatureCustomdate() bool {
	if o != nil && !IsNil(o.BEzsignsignatureCustomdate) {
		return true
	}

	return false
}

// SetBEzsignsignatureCustomdate gets a reference to the given bool and assigns it to the BEzsignsignatureCustomdate field.
func (o *EzsignsignatureRequestCompound) SetBEzsignsignatureCustomdate(v bool) {
	o.BEzsignsignatureCustomdate = &v
}

// GetAObjEzsignsignaturecustomdate returns the AObjEzsignsignaturecustomdate field value if set, zero value otherwise.
func (o *EzsignsignatureRequestCompound) GetAObjEzsignsignaturecustomdate() []EzsignsignaturecustomdateRequestCompound {
	if o == nil || IsNil(o.AObjEzsignsignaturecustomdate) {
		var ret []EzsignsignaturecustomdateRequestCompound
		return ret
	}
	return o.AObjEzsignsignaturecustomdate
}

// GetAObjEzsignsignaturecustomdateOk returns a tuple with the AObjEzsignsignaturecustomdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignsignatureRequestCompound) GetAObjEzsignsignaturecustomdateOk() ([]EzsignsignaturecustomdateRequestCompound, bool) {
	if o == nil || IsNil(o.AObjEzsignsignaturecustomdate) {
		return nil, false
	}
	return o.AObjEzsignsignaturecustomdate, true
}

// HasAObjEzsignsignaturecustomdate returns a boolean if a field has been set.
func (o *EzsignsignatureRequestCompound) HasAObjEzsignsignaturecustomdate() bool {
	if o != nil && !IsNil(o.AObjEzsignsignaturecustomdate) {
		return true
	}

	return false
}

// SetAObjEzsignsignaturecustomdate gets a reference to the given []EzsignsignaturecustomdateRequestCompound and assigns it to the AObjEzsignsignaturecustomdate field.
func (o *EzsignsignatureRequestCompound) SetAObjEzsignsignaturecustomdate(v []EzsignsignaturecustomdateRequestCompound) {
	o.AObjEzsignsignaturecustomdate = v
}

// GetAObjEzsignelementdependency returns the AObjEzsignelementdependency field value if set, zero value otherwise.
func (o *EzsignsignatureRequestCompound) GetAObjEzsignelementdependency() []EzsignelementdependencyRequestCompound {
	if o == nil || IsNil(o.AObjEzsignelementdependency) {
		var ret []EzsignelementdependencyRequestCompound
		return ret
	}
	return o.AObjEzsignelementdependency
}

// GetAObjEzsignelementdependencyOk returns a tuple with the AObjEzsignelementdependency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignsignatureRequestCompound) GetAObjEzsignelementdependencyOk() ([]EzsignelementdependencyRequestCompound, bool) {
	if o == nil || IsNil(o.AObjEzsignelementdependency) {
		return nil, false
	}
	return o.AObjEzsignelementdependency, true
}

// HasAObjEzsignelementdependency returns a boolean if a field has been set.
func (o *EzsignsignatureRequestCompound) HasAObjEzsignelementdependency() bool {
	if o != nil && !IsNil(o.AObjEzsignelementdependency) {
		return true
	}

	return false
}

// SetAObjEzsignelementdependency gets a reference to the given []EzsignelementdependencyRequestCompound and assigns it to the AObjEzsignelementdependency field.
func (o *EzsignsignatureRequestCompound) SetAObjEzsignelementdependency(v []EzsignelementdependencyRequestCompound) {
	o.AObjEzsignelementdependency = v
}

func (o EzsignsignatureRequestCompound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsignsignatureRequestCompound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BEzsignsignatureCustomdate) {
		toSerialize["bEzsignsignatureCustomdate"] = o.BEzsignsignatureCustomdate
	}
	if !IsNil(o.AObjEzsignsignaturecustomdate) {
		toSerialize["a_objEzsignsignaturecustomdate"] = o.AObjEzsignsignaturecustomdate
	}
	if !IsNil(o.AObjEzsignelementdependency) {
		toSerialize["a_objEzsignelementdependency"] = o.AObjEzsignelementdependency
	}
	return toSerialize, nil
}

func (o *EzsignsignatureRequestCompound) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"fkiEzsignfoldersignerassociationID",
		"iEzsignpagePagenumber",
		"iEzsignsignatureX",
		"iEzsignsignatureY",
		"iEzsignsignatureStep",
		"eEzsignsignatureType",
		"fkiEzsigndocumentID",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsignsignatureRequestCompound := _EzsignsignatureRequestCompound{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsignsignatureRequestCompound)

	if err != nil {
		return err
	}

	*o = EzsignsignatureRequestCompound(varEzsignsignatureRequestCompound)

	return err
}

type NullableEzsignsignatureRequestCompound struct {
	value *EzsignsignatureRequestCompound
	isSet bool
}

func (v NullableEzsignsignatureRequestCompound) Get() *EzsignsignatureRequestCompound {
	return v.value
}

func (v *NullableEzsignsignatureRequestCompound) Set(val *EzsignsignatureRequestCompound) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsignsignatureRequestCompound) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsignsignatureRequestCompound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsignsignatureRequestCompound(val *EzsignsignatureRequestCompound) *NullableEzsignsignatureRequestCompound {
	return &NullableEzsignsignatureRequestCompound{value: val, isSet: true}
}

func (v NullableEzsignsignatureRequestCompound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsignsignatureRequestCompound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


