/*
eZmax API Definition

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.1.4
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// CommonResponseErrorSTemporaryFileUrlAllOf struct for CommonResponseErrorSTemporaryFileUrlAllOf
type CommonResponseErrorSTemporaryFileUrlAllOf struct {
	// The Temporary File Url of the document that was uploaded. That url can be reused instead of uploading the file again.
	STemporaryFileUrl *string `json:"sTemporaryFileUrl,omitempty"`
}

// NewCommonResponseErrorSTemporaryFileUrlAllOf instantiates a new CommonResponseErrorSTemporaryFileUrlAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonResponseErrorSTemporaryFileUrlAllOf() *CommonResponseErrorSTemporaryFileUrlAllOf {
	this := CommonResponseErrorSTemporaryFileUrlAllOf{}
	return &this
}

// NewCommonResponseErrorSTemporaryFileUrlAllOfWithDefaults instantiates a new CommonResponseErrorSTemporaryFileUrlAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonResponseErrorSTemporaryFileUrlAllOfWithDefaults() *CommonResponseErrorSTemporaryFileUrlAllOf {
	this := CommonResponseErrorSTemporaryFileUrlAllOf{}
	return &this
}

// GetSTemporaryFileUrl returns the STemporaryFileUrl field value if set, zero value otherwise.
func (o *CommonResponseErrorSTemporaryFileUrlAllOf) GetSTemporaryFileUrl() string {
	if o == nil || o.STemporaryFileUrl == nil {
		var ret string
		return ret
	}
	return *o.STemporaryFileUrl
}

// GetSTemporaryFileUrlOk returns a tuple with the STemporaryFileUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonResponseErrorSTemporaryFileUrlAllOf) GetSTemporaryFileUrlOk() (*string, bool) {
	if o == nil || o.STemporaryFileUrl == nil {
		return nil, false
	}
	return o.STemporaryFileUrl, true
}

// HasSTemporaryFileUrl returns a boolean if a field has been set.
func (o *CommonResponseErrorSTemporaryFileUrlAllOf) HasSTemporaryFileUrl() bool {
	if o != nil && o.STemporaryFileUrl != nil {
		return true
	}

	return false
}

// SetSTemporaryFileUrl gets a reference to the given string and assigns it to the STemporaryFileUrl field.
func (o *CommonResponseErrorSTemporaryFileUrlAllOf) SetSTemporaryFileUrl(v string) {
	o.STemporaryFileUrl = &v
}

func (o CommonResponseErrorSTemporaryFileUrlAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.STemporaryFileUrl != nil {
		toSerialize["sTemporaryFileUrl"] = o.STemporaryFileUrl
	}
	return json.Marshal(toSerialize)
}

type NullableCommonResponseErrorSTemporaryFileUrlAllOf struct {
	value *CommonResponseErrorSTemporaryFileUrlAllOf
	isSet bool
}

func (v NullableCommonResponseErrorSTemporaryFileUrlAllOf) Get() *CommonResponseErrorSTemporaryFileUrlAllOf {
	return v.value
}

func (v *NullableCommonResponseErrorSTemporaryFileUrlAllOf) Set(val *CommonResponseErrorSTemporaryFileUrlAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonResponseErrorSTemporaryFileUrlAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonResponseErrorSTemporaryFileUrlAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonResponseErrorSTemporaryFileUrlAllOf(val *CommonResponseErrorSTemporaryFileUrlAllOf) *NullableCommonResponseErrorSTemporaryFileUrlAllOf {
	return &NullableCommonResponseErrorSTemporaryFileUrlAllOf{value: val, isSet: true}
}

func (v NullableCommonResponseErrorSTemporaryFileUrlAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonResponseErrorSTemporaryFileUrlAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


