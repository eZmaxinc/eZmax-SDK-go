/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CustomEzsignfoldertypeResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomEzsignfoldertypeResponse{}

// CustomEzsignfoldertypeResponse A Custom Ezsignfoldertype Object
type CustomEzsignfoldertypeResponse struct {
	// The unique ID of the Ezsignfoldertype.
	PkiEzsignfoldertypeID int32 `json:"pkiEzsignfoldertypeID"`
	// The name of the Ezsignfoldertype in the language of the requester
	SEzsignfoldertypeNameX *string `json:"sEzsignfoldertypeNameX,omitempty"`
	// Whether we send the proof in the email to Ezsignsigner
	BEzsignfoldertypeSendproofezsignsigner *bool `json:"bEzsignfoldertypeSendproofezsignsigner,omitempty"`
	// Whether we allow the Ezsigndocument to be downloaded by an Ezsignsigner
	BEzsignfoldertypeAllowdownloadattachmentezsignsigner *bool `json:"bEzsignfoldertypeAllowdownloadattachmentezsignsigner,omitempty"`
	// Whether we allow the proof to be downloaded by an Ezsignsigner
	BEzsignfoldertypeAllowdownloadproofezsignsigner *bool `json:"bEzsignfoldertypeAllowdownloadproofezsignsigner,omitempty"`
	// Wheter if delegation of signature is allowed to another user or not
	BEzsignfoldertypeDelegate *bool `json:"bEzsignfoldertypeDelegate,omitempty"`
	// Wheter if creating a new Discussion is allowed or not
	BEzsignfoldertypeDiscussion *bool `json:"bEzsignfoldertypeDiscussion,omitempty"`
	// Wheter if Reassignment of signature is allowed by a signatory to another signatory or not
	BEzsignfoldertypeReassignezsignsigner *bool `json:"bEzsignfoldertypeReassignezsignsigner,omitempty"`
	// Wheter if Reassignment of signature is allowed by a user to a signatory or another user or not
	BEzsignfoldertypeReassignuser *bool `json:"bEzsignfoldertypeReassignuser,omitempty"`
}

type _CustomEzsignfoldertypeResponse CustomEzsignfoldertypeResponse

// NewCustomEzsignfoldertypeResponse instantiates a new CustomEzsignfoldertypeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomEzsignfoldertypeResponse(pkiEzsignfoldertypeID int32) *CustomEzsignfoldertypeResponse {
	this := CustomEzsignfoldertypeResponse{}
	this.PkiEzsignfoldertypeID = pkiEzsignfoldertypeID
	return &this
}

// NewCustomEzsignfoldertypeResponseWithDefaults instantiates a new CustomEzsignfoldertypeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomEzsignfoldertypeResponseWithDefaults() *CustomEzsignfoldertypeResponse {
	this := CustomEzsignfoldertypeResponse{}
	return &this
}

// GetPkiEzsignfoldertypeID returns the PkiEzsignfoldertypeID field value
func (o *CustomEzsignfoldertypeResponse) GetPkiEzsignfoldertypeID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PkiEzsignfoldertypeID
}

// GetPkiEzsignfoldertypeIDOk returns a tuple with the PkiEzsignfoldertypeID field value
// and a boolean to check if the value has been set.
func (o *CustomEzsignfoldertypeResponse) GetPkiEzsignfoldertypeIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkiEzsignfoldertypeID, true
}

// SetPkiEzsignfoldertypeID sets field value
func (o *CustomEzsignfoldertypeResponse) SetPkiEzsignfoldertypeID(v int32) {
	o.PkiEzsignfoldertypeID = v
}

// GetSEzsignfoldertypeNameX returns the SEzsignfoldertypeNameX field value if set, zero value otherwise.
func (o *CustomEzsignfoldertypeResponse) GetSEzsignfoldertypeNameX() string {
	if o == nil || IsNil(o.SEzsignfoldertypeNameX) {
		var ret string
		return ret
	}
	return *o.SEzsignfoldertypeNameX
}

// GetSEzsignfoldertypeNameXOk returns a tuple with the SEzsignfoldertypeNameX field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomEzsignfoldertypeResponse) GetSEzsignfoldertypeNameXOk() (*string, bool) {
	if o == nil || IsNil(o.SEzsignfoldertypeNameX) {
		return nil, false
	}
	return o.SEzsignfoldertypeNameX, true
}

// HasSEzsignfoldertypeNameX returns a boolean if a field has been set.
func (o *CustomEzsignfoldertypeResponse) HasSEzsignfoldertypeNameX() bool {
	if o != nil && !IsNil(o.SEzsignfoldertypeNameX) {
		return true
	}

	return false
}

// SetSEzsignfoldertypeNameX gets a reference to the given string and assigns it to the SEzsignfoldertypeNameX field.
func (o *CustomEzsignfoldertypeResponse) SetSEzsignfoldertypeNameX(v string) {
	o.SEzsignfoldertypeNameX = &v
}

// GetBEzsignfoldertypeSendproofezsignsigner returns the BEzsignfoldertypeSendproofezsignsigner field value if set, zero value otherwise.
func (o *CustomEzsignfoldertypeResponse) GetBEzsignfoldertypeSendproofezsignsigner() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeSendproofezsignsigner) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeSendproofezsignsigner
}

// GetBEzsignfoldertypeSendproofezsignsignerOk returns a tuple with the BEzsignfoldertypeSendproofezsignsigner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomEzsignfoldertypeResponse) GetBEzsignfoldertypeSendproofezsignsignerOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeSendproofezsignsigner) {
		return nil, false
	}
	return o.BEzsignfoldertypeSendproofezsignsigner, true
}

// HasBEzsignfoldertypeSendproofezsignsigner returns a boolean if a field has been set.
func (o *CustomEzsignfoldertypeResponse) HasBEzsignfoldertypeSendproofezsignsigner() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeSendproofezsignsigner) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeSendproofezsignsigner gets a reference to the given bool and assigns it to the BEzsignfoldertypeSendproofezsignsigner field.
func (o *CustomEzsignfoldertypeResponse) SetBEzsignfoldertypeSendproofezsignsigner(v bool) {
	o.BEzsignfoldertypeSendproofezsignsigner = &v
}

// GetBEzsignfoldertypeAllowdownloadattachmentezsignsigner returns the BEzsignfoldertypeAllowdownloadattachmentezsignsigner field value if set, zero value otherwise.
func (o *CustomEzsignfoldertypeResponse) GetBEzsignfoldertypeAllowdownloadattachmentezsignsigner() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeAllowdownloadattachmentezsignsigner) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeAllowdownloadattachmentezsignsigner
}

// GetBEzsignfoldertypeAllowdownloadattachmentezsignsignerOk returns a tuple with the BEzsignfoldertypeAllowdownloadattachmentezsignsigner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomEzsignfoldertypeResponse) GetBEzsignfoldertypeAllowdownloadattachmentezsignsignerOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeAllowdownloadattachmentezsignsigner) {
		return nil, false
	}
	return o.BEzsignfoldertypeAllowdownloadattachmentezsignsigner, true
}

// HasBEzsignfoldertypeAllowdownloadattachmentezsignsigner returns a boolean if a field has been set.
func (o *CustomEzsignfoldertypeResponse) HasBEzsignfoldertypeAllowdownloadattachmentezsignsigner() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeAllowdownloadattachmentezsignsigner) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeAllowdownloadattachmentezsignsigner gets a reference to the given bool and assigns it to the BEzsignfoldertypeAllowdownloadattachmentezsignsigner field.
func (o *CustomEzsignfoldertypeResponse) SetBEzsignfoldertypeAllowdownloadattachmentezsignsigner(v bool) {
	o.BEzsignfoldertypeAllowdownloadattachmentezsignsigner = &v
}

// GetBEzsignfoldertypeAllowdownloadproofezsignsigner returns the BEzsignfoldertypeAllowdownloadproofezsignsigner field value if set, zero value otherwise.
func (o *CustomEzsignfoldertypeResponse) GetBEzsignfoldertypeAllowdownloadproofezsignsigner() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeAllowdownloadproofezsignsigner) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeAllowdownloadproofezsignsigner
}

// GetBEzsignfoldertypeAllowdownloadproofezsignsignerOk returns a tuple with the BEzsignfoldertypeAllowdownloadproofezsignsigner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomEzsignfoldertypeResponse) GetBEzsignfoldertypeAllowdownloadproofezsignsignerOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeAllowdownloadproofezsignsigner) {
		return nil, false
	}
	return o.BEzsignfoldertypeAllowdownloadproofezsignsigner, true
}

// HasBEzsignfoldertypeAllowdownloadproofezsignsigner returns a boolean if a field has been set.
func (o *CustomEzsignfoldertypeResponse) HasBEzsignfoldertypeAllowdownloadproofezsignsigner() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeAllowdownloadproofezsignsigner) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeAllowdownloadproofezsignsigner gets a reference to the given bool and assigns it to the BEzsignfoldertypeAllowdownloadproofezsignsigner field.
func (o *CustomEzsignfoldertypeResponse) SetBEzsignfoldertypeAllowdownloadproofezsignsigner(v bool) {
	o.BEzsignfoldertypeAllowdownloadproofezsignsigner = &v
}

// GetBEzsignfoldertypeDelegate returns the BEzsignfoldertypeDelegate field value if set, zero value otherwise.
func (o *CustomEzsignfoldertypeResponse) GetBEzsignfoldertypeDelegate() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeDelegate) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeDelegate
}

// GetBEzsignfoldertypeDelegateOk returns a tuple with the BEzsignfoldertypeDelegate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomEzsignfoldertypeResponse) GetBEzsignfoldertypeDelegateOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeDelegate) {
		return nil, false
	}
	return o.BEzsignfoldertypeDelegate, true
}

// HasBEzsignfoldertypeDelegate returns a boolean if a field has been set.
func (o *CustomEzsignfoldertypeResponse) HasBEzsignfoldertypeDelegate() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeDelegate) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeDelegate gets a reference to the given bool and assigns it to the BEzsignfoldertypeDelegate field.
func (o *CustomEzsignfoldertypeResponse) SetBEzsignfoldertypeDelegate(v bool) {
	o.BEzsignfoldertypeDelegate = &v
}

// GetBEzsignfoldertypeDiscussion returns the BEzsignfoldertypeDiscussion field value if set, zero value otherwise.
func (o *CustomEzsignfoldertypeResponse) GetBEzsignfoldertypeDiscussion() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeDiscussion) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeDiscussion
}

// GetBEzsignfoldertypeDiscussionOk returns a tuple with the BEzsignfoldertypeDiscussion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomEzsignfoldertypeResponse) GetBEzsignfoldertypeDiscussionOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeDiscussion) {
		return nil, false
	}
	return o.BEzsignfoldertypeDiscussion, true
}

// HasBEzsignfoldertypeDiscussion returns a boolean if a field has been set.
func (o *CustomEzsignfoldertypeResponse) HasBEzsignfoldertypeDiscussion() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeDiscussion) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeDiscussion gets a reference to the given bool and assigns it to the BEzsignfoldertypeDiscussion field.
func (o *CustomEzsignfoldertypeResponse) SetBEzsignfoldertypeDiscussion(v bool) {
	o.BEzsignfoldertypeDiscussion = &v
}

// GetBEzsignfoldertypeReassignezsignsigner returns the BEzsignfoldertypeReassignezsignsigner field value if set, zero value otherwise.
func (o *CustomEzsignfoldertypeResponse) GetBEzsignfoldertypeReassignezsignsigner() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeReassignezsignsigner) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeReassignezsignsigner
}

// GetBEzsignfoldertypeReassignezsignsignerOk returns a tuple with the BEzsignfoldertypeReassignezsignsigner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomEzsignfoldertypeResponse) GetBEzsignfoldertypeReassignezsignsignerOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeReassignezsignsigner) {
		return nil, false
	}
	return o.BEzsignfoldertypeReassignezsignsigner, true
}

// HasBEzsignfoldertypeReassignezsignsigner returns a boolean if a field has been set.
func (o *CustomEzsignfoldertypeResponse) HasBEzsignfoldertypeReassignezsignsigner() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeReassignezsignsigner) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeReassignezsignsigner gets a reference to the given bool and assigns it to the BEzsignfoldertypeReassignezsignsigner field.
func (o *CustomEzsignfoldertypeResponse) SetBEzsignfoldertypeReassignezsignsigner(v bool) {
	o.BEzsignfoldertypeReassignezsignsigner = &v
}

// GetBEzsignfoldertypeReassignuser returns the BEzsignfoldertypeReassignuser field value if set, zero value otherwise.
func (o *CustomEzsignfoldertypeResponse) GetBEzsignfoldertypeReassignuser() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeReassignuser) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeReassignuser
}

// GetBEzsignfoldertypeReassignuserOk returns a tuple with the BEzsignfoldertypeReassignuser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomEzsignfoldertypeResponse) GetBEzsignfoldertypeReassignuserOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeReassignuser) {
		return nil, false
	}
	return o.BEzsignfoldertypeReassignuser, true
}

// HasBEzsignfoldertypeReassignuser returns a boolean if a field has been set.
func (o *CustomEzsignfoldertypeResponse) HasBEzsignfoldertypeReassignuser() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeReassignuser) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeReassignuser gets a reference to the given bool and assigns it to the BEzsignfoldertypeReassignuser field.
func (o *CustomEzsignfoldertypeResponse) SetBEzsignfoldertypeReassignuser(v bool) {
	o.BEzsignfoldertypeReassignuser = &v
}

func (o CustomEzsignfoldertypeResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomEzsignfoldertypeResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pkiEzsignfoldertypeID"] = o.PkiEzsignfoldertypeID
	if !IsNil(o.SEzsignfoldertypeNameX) {
		toSerialize["sEzsignfoldertypeNameX"] = o.SEzsignfoldertypeNameX
	}
	if !IsNil(o.BEzsignfoldertypeSendproofezsignsigner) {
		toSerialize["bEzsignfoldertypeSendproofezsignsigner"] = o.BEzsignfoldertypeSendproofezsignsigner
	}
	if !IsNil(o.BEzsignfoldertypeAllowdownloadattachmentezsignsigner) {
		toSerialize["bEzsignfoldertypeAllowdownloadattachmentezsignsigner"] = o.BEzsignfoldertypeAllowdownloadattachmentezsignsigner
	}
	if !IsNil(o.BEzsignfoldertypeAllowdownloadproofezsignsigner) {
		toSerialize["bEzsignfoldertypeAllowdownloadproofezsignsigner"] = o.BEzsignfoldertypeAllowdownloadproofezsignsigner
	}
	if !IsNil(o.BEzsignfoldertypeDelegate) {
		toSerialize["bEzsignfoldertypeDelegate"] = o.BEzsignfoldertypeDelegate
	}
	if !IsNil(o.BEzsignfoldertypeDiscussion) {
		toSerialize["bEzsignfoldertypeDiscussion"] = o.BEzsignfoldertypeDiscussion
	}
	if !IsNil(o.BEzsignfoldertypeReassignezsignsigner) {
		toSerialize["bEzsignfoldertypeReassignezsignsigner"] = o.BEzsignfoldertypeReassignezsignsigner
	}
	if !IsNil(o.BEzsignfoldertypeReassignuser) {
		toSerialize["bEzsignfoldertypeReassignuser"] = o.BEzsignfoldertypeReassignuser
	}
	return toSerialize, nil
}

func (o *CustomEzsignfoldertypeResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pkiEzsignfoldertypeID",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomEzsignfoldertypeResponse := _CustomEzsignfoldertypeResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCustomEzsignfoldertypeResponse)

	if err != nil {
		return err
	}

	*o = CustomEzsignfoldertypeResponse(varCustomEzsignfoldertypeResponse)

	return err
}

type NullableCustomEzsignfoldertypeResponse struct {
	value *CustomEzsignfoldertypeResponse
	isSet bool
}

func (v NullableCustomEzsignfoldertypeResponse) Get() *CustomEzsignfoldertypeResponse {
	return v.value
}

func (v *NullableCustomEzsignfoldertypeResponse) Set(val *CustomEzsignfoldertypeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomEzsignfoldertypeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomEzsignfoldertypeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomEzsignfoldertypeResponse(val *CustomEzsignfoldertypeResponse) *NullableCustomEzsignfoldertypeResponse {
	return &NullableCustomEzsignfoldertypeResponse{value: val, isSet: true}
}

func (v NullableCustomEzsignfoldertypeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomEzsignfoldertypeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


