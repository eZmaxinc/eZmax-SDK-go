/*
eZmax API Definition

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.1.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// WebsiteRequest A Website Object
type WebsiteRequest struct {
	// The unique ID of the Websitetype.  Valid values:  |Value|Description| |-|-| |1|Website| |2|Twitter| |3|Facebook| |4|Survey|
	FkiWebsitetypeID int32 `json:"fkiWebsitetypeID"`
	// The URL of the website.
	SWebsiteAddress string `json:"sWebsiteAddress"`
}

// NewWebsiteRequest instantiates a new WebsiteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebsiteRequest(fkiWebsitetypeID int32, sWebsiteAddress string) *WebsiteRequest {
	this := WebsiteRequest{}
	this.FkiWebsitetypeID = fkiWebsitetypeID
	this.SWebsiteAddress = sWebsiteAddress
	return &this
}

// NewWebsiteRequestWithDefaults instantiates a new WebsiteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebsiteRequestWithDefaults() *WebsiteRequest {
	this := WebsiteRequest{}
	return &this
}

// GetFkiWebsitetypeID returns the FkiWebsitetypeID field value
func (o *WebsiteRequest) GetFkiWebsitetypeID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiWebsitetypeID
}

// GetFkiWebsitetypeIDOk returns a tuple with the FkiWebsitetypeID field value
// and a boolean to check if the value has been set.
func (o *WebsiteRequest) GetFkiWebsitetypeIDOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FkiWebsitetypeID, true
}

// SetFkiWebsitetypeID sets field value
func (o *WebsiteRequest) SetFkiWebsitetypeID(v int32) {
	o.FkiWebsitetypeID = v
}

// GetSWebsiteAddress returns the SWebsiteAddress field value
func (o *WebsiteRequest) GetSWebsiteAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SWebsiteAddress
}

// GetSWebsiteAddressOk returns a tuple with the SWebsiteAddress field value
// and a boolean to check if the value has been set.
func (o *WebsiteRequest) GetSWebsiteAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SWebsiteAddress, true
}

// SetSWebsiteAddress sets field value
func (o *WebsiteRequest) SetSWebsiteAddress(v string) {
	o.SWebsiteAddress = v
}

func (o WebsiteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["fkiWebsitetypeID"] = o.FkiWebsitetypeID
	}
	if true {
		toSerialize["sWebsiteAddress"] = o.SWebsiteAddress
	}
	return json.Marshal(toSerialize)
}

type NullableWebsiteRequest struct {
	value *WebsiteRequest
	isSet bool
}

func (v NullableWebsiteRequest) Get() *WebsiteRequest {
	return v.value
}

func (v *NullableWebsiteRequest) Set(val *WebsiteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableWebsiteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableWebsiteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebsiteRequest(val *WebsiteRequest) *NullableWebsiteRequest {
	return &NullableWebsiteRequest{value: val, isSet: true}
}

func (v NullableWebsiteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebsiteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


