/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// checks if the UserEditObjectV1Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserEditObjectV1Request{}

// UserEditObjectV1Request Request for PUT /1/object/user/{pkiUserID}
type UserEditObjectV1Request struct {
	ObjUser UserRequestCompound `json:"objUser"`
}

// NewUserEditObjectV1Request instantiates a new UserEditObjectV1Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserEditObjectV1Request(objUser UserRequestCompound) *UserEditObjectV1Request {
	this := UserEditObjectV1Request{}
	this.ObjUser = objUser
	return &this
}

// NewUserEditObjectV1RequestWithDefaults instantiates a new UserEditObjectV1Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserEditObjectV1RequestWithDefaults() *UserEditObjectV1Request {
	this := UserEditObjectV1Request{}
	return &this
}

// GetObjUser returns the ObjUser field value
func (o *UserEditObjectV1Request) GetObjUser() UserRequestCompound {
	if o == nil {
		var ret UserRequestCompound
		return ret
	}

	return o.ObjUser
}

// GetObjUserOk returns a tuple with the ObjUser field value
// and a boolean to check if the value has been set.
func (o *UserEditObjectV1Request) GetObjUserOk() (*UserRequestCompound, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjUser, true
}

// SetObjUser sets field value
func (o *UserEditObjectV1Request) SetObjUser(v UserRequestCompound) {
	o.ObjUser = v
}

func (o UserEditObjectV1Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserEditObjectV1Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["objUser"] = o.ObjUser
	return toSerialize, nil
}

type NullableUserEditObjectV1Request struct {
	value *UserEditObjectV1Request
	isSet bool
}

func (v NullableUserEditObjectV1Request) Get() *UserEditObjectV1Request {
	return v.value
}

func (v *NullableUserEditObjectV1Request) Set(val *UserEditObjectV1Request) {
	v.value = val
	v.isSet = true
}

func (v NullableUserEditObjectV1Request) IsSet() bool {
	return v.isSet
}

func (v *NullableUserEditObjectV1Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserEditObjectV1Request(val *UserEditObjectV1Request) *NullableUserEditObjectV1Request {
	return &NullableUserEditObjectV1Request{value: val, isSet: true}
}

func (v NullableUserEditObjectV1Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserEditObjectV1Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


