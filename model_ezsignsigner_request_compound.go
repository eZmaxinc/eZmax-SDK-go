/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsignsignerRequestCompound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsignsignerRequestCompound{}

// EzsignsignerRequestCompound An Ezsignsigner Object and children to create a complete structure
type EzsignsignerRequestCompound struct {
	EzsignsignerRequest
	ObjContact EzsignsignerRequestCompoundContact `json:"objContact"`
}

type _EzsignsignerRequestCompound EzsignsignerRequestCompound

// NewEzsignsignerRequestCompound instantiates a new EzsignsignerRequestCompound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsignsignerRequestCompound(objContact EzsignsignerRequestCompoundContact, fkiTaxassignmentID int32) *EzsignsignerRequestCompound {
	this := EzsignsignerRequestCompound{}
	this.FkiTaxassignmentID = fkiTaxassignmentID
	this.ObjContact = objContact
	return &this
}

// NewEzsignsignerRequestCompoundWithDefaults instantiates a new EzsignsignerRequestCompound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsignsignerRequestCompoundWithDefaults() *EzsignsignerRequestCompound {
	this := EzsignsignerRequestCompound{}
	return &this
}

// GetObjContact returns the ObjContact field value
func (o *EzsignsignerRequestCompound) GetObjContact() EzsignsignerRequestCompoundContact {
	if o == nil {
		var ret EzsignsignerRequestCompoundContact
		return ret
	}

	return o.ObjContact
}

// GetObjContactOk returns a tuple with the ObjContact field value
// and a boolean to check if the value has been set.
func (o *EzsignsignerRequestCompound) GetObjContactOk() (*EzsignsignerRequestCompoundContact, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjContact, true
}

// SetObjContact sets field value
func (o *EzsignsignerRequestCompound) SetObjContact(v EzsignsignerRequestCompoundContact) {
	o.ObjContact = v
}

func (o EzsignsignerRequestCompound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsignsignerRequestCompound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["objContact"] = o.ObjContact
	return toSerialize, nil
}

func (o *EzsignsignerRequestCompound) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"objContact",
		"fkiTaxassignmentID",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsignsignerRequestCompound := _EzsignsignerRequestCompound{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsignsignerRequestCompound)

	if err != nil {
		return err
	}

	*o = EzsignsignerRequestCompound(varEzsignsignerRequestCompound)

	return err
}

type NullableEzsignsignerRequestCompound struct {
	value *EzsignsignerRequestCompound
	isSet bool
}

func (v NullableEzsignsignerRequestCompound) Get() *EzsignsignerRequestCompound {
	return v.value
}

func (v *NullableEzsignsignerRequestCompound) Set(val *EzsignsignerRequestCompound) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsignsignerRequestCompound) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsignsignerRequestCompound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsignsignerRequestCompound(val *EzsignsignerRequestCompound) *NullableEzsignsignerRequestCompound {
	return &NullableEzsignsignerRequestCompound{value: val, isSet: true}
}

func (v NullableEzsignsignerRequestCompound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsignsignerRequestCompound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


