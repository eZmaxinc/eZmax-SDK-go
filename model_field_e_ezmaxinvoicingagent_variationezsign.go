/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"fmt"
)

// FieldEEzmaxinvoicingagentVariationezsign Variation type for eZsign
type FieldEEzmaxinvoicingagentVariationezsign string

// List of Field-eEzmaxinvoicingagentVariationezsign
const (
	CHARGE FieldEEzmaxinvoicingagentVariationezsign = "Charge"
	REFUND FieldEEzmaxinvoicingagentVariationezsign = "Refund"
	SAME FieldEEzmaxinvoicingagentVariationezsign = "Same"
)

// All allowed values of FieldEEzmaxinvoicingagentVariationezsign enum
var AllowedFieldEEzmaxinvoicingagentVariationezsignEnumValues = []FieldEEzmaxinvoicingagentVariationezsign{
	"Charge",
	"Refund",
	"Same",
}

func (v *FieldEEzmaxinvoicingagentVariationezsign) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := FieldEEzmaxinvoicingagentVariationezsign(value)
	for _, existing := range AllowedFieldEEzmaxinvoicingagentVariationezsignEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid FieldEEzmaxinvoicingagentVariationezsign", value)
}

// NewFieldEEzmaxinvoicingagentVariationezsignFromValue returns a pointer to a valid FieldEEzmaxinvoicingagentVariationezsign
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewFieldEEzmaxinvoicingagentVariationezsignFromValue(v string) (*FieldEEzmaxinvoicingagentVariationezsign, error) {
	ev := FieldEEzmaxinvoicingagentVariationezsign(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for FieldEEzmaxinvoicingagentVariationezsign: valid values are %v", v, AllowedFieldEEzmaxinvoicingagentVariationezsignEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v FieldEEzmaxinvoicingagentVariationezsign) IsValid() bool {
	for _, existing := range AllowedFieldEEzmaxinvoicingagentVariationezsignEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Field-eEzmaxinvoicingagentVariationezsign value
func (v FieldEEzmaxinvoicingagentVariationezsign) Ptr() *FieldEEzmaxinvoicingagentVariationezsign {
	return &v
}

type NullableFieldEEzmaxinvoicingagentVariationezsign struct {
	value *FieldEEzmaxinvoicingagentVariationezsign
	isSet bool
}

func (v NullableFieldEEzmaxinvoicingagentVariationezsign) Get() *FieldEEzmaxinvoicingagentVariationezsign {
	return v.value
}

func (v *NullableFieldEEzmaxinvoicingagentVariationezsign) Set(val *FieldEEzmaxinvoicingagentVariationezsign) {
	v.value = val
	v.isSet = true
}

func (v NullableFieldEEzmaxinvoicingagentVariationezsign) IsSet() bool {
	return v.isSet
}

func (v *NullableFieldEEzmaxinvoicingagentVariationezsign) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFieldEEzmaxinvoicingagentVariationezsign(val *FieldEEzmaxinvoicingagentVariationezsign) *NullableFieldEEzmaxinvoicingagentVariationezsign {
	return &NullableFieldEEzmaxinvoicingagentVariationezsign{value: val, isSet: true}
}

func (v NullableFieldEEzmaxinvoicingagentVariationezsign) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFieldEEzmaxinvoicingagentVariationezsign) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

