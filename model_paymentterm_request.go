/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PaymenttermRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymenttermRequest{}

// PaymenttermRequest A Paymentterm Object
type PaymenttermRequest struct {
	// The unique ID of the Paymentterm
	PkiPaymenttermID *int32 `json:"pkiPaymenttermID,omitempty"`
	// The code of the Paymentterm
	SPaymenttermCode string `json:"sPaymenttermCode"`
	EPaymenttermType FieldEPaymenttermType `json:"ePaymenttermType"`
	// The day of the Paymentterm
	IPaymenttermDay int32 `json:"iPaymenttermDay"`
	ObjPaymenttermDescription MultilingualPaymenttermDescription `json:"objPaymenttermDescription"`
	// Whether the Paymentterm is active or not
	BPaymenttermIsactive bool `json:"bPaymenttermIsactive"`
}

type _PaymenttermRequest PaymenttermRequest

// NewPaymenttermRequest instantiates a new PaymenttermRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymenttermRequest(sPaymenttermCode string, ePaymenttermType FieldEPaymenttermType, iPaymenttermDay int32, objPaymenttermDescription MultilingualPaymenttermDescription, bPaymenttermIsactive bool) *PaymenttermRequest {
	this := PaymenttermRequest{}
	this.SPaymenttermCode = sPaymenttermCode
	this.EPaymenttermType = ePaymenttermType
	this.IPaymenttermDay = iPaymenttermDay
	this.ObjPaymenttermDescription = objPaymenttermDescription
	this.BPaymenttermIsactive = bPaymenttermIsactive
	return &this
}

// NewPaymenttermRequestWithDefaults instantiates a new PaymenttermRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymenttermRequestWithDefaults() *PaymenttermRequest {
	this := PaymenttermRequest{}
	return &this
}

// GetPkiPaymenttermID returns the PkiPaymenttermID field value if set, zero value otherwise.
func (o *PaymenttermRequest) GetPkiPaymenttermID() int32 {
	if o == nil || IsNil(o.PkiPaymenttermID) {
		var ret int32
		return ret
	}
	return *o.PkiPaymenttermID
}

// GetPkiPaymenttermIDOk returns a tuple with the PkiPaymenttermID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymenttermRequest) GetPkiPaymenttermIDOk() (*int32, bool) {
	if o == nil || IsNil(o.PkiPaymenttermID) {
		return nil, false
	}
	return o.PkiPaymenttermID, true
}

// HasPkiPaymenttermID returns a boolean if a field has been set.
func (o *PaymenttermRequest) HasPkiPaymenttermID() bool {
	if o != nil && !IsNil(o.PkiPaymenttermID) {
		return true
	}

	return false
}

// SetPkiPaymenttermID gets a reference to the given int32 and assigns it to the PkiPaymenttermID field.
func (o *PaymenttermRequest) SetPkiPaymenttermID(v int32) {
	o.PkiPaymenttermID = &v
}

// GetSPaymenttermCode returns the SPaymenttermCode field value
func (o *PaymenttermRequest) GetSPaymenttermCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SPaymenttermCode
}

// GetSPaymenttermCodeOk returns a tuple with the SPaymenttermCode field value
// and a boolean to check if the value has been set.
func (o *PaymenttermRequest) GetSPaymenttermCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SPaymenttermCode, true
}

// SetSPaymenttermCode sets field value
func (o *PaymenttermRequest) SetSPaymenttermCode(v string) {
	o.SPaymenttermCode = v
}

// GetEPaymenttermType returns the EPaymenttermType field value
func (o *PaymenttermRequest) GetEPaymenttermType() FieldEPaymenttermType {
	if o == nil {
		var ret FieldEPaymenttermType
		return ret
	}

	return o.EPaymenttermType
}

// GetEPaymenttermTypeOk returns a tuple with the EPaymenttermType field value
// and a boolean to check if the value has been set.
func (o *PaymenttermRequest) GetEPaymenttermTypeOk() (*FieldEPaymenttermType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EPaymenttermType, true
}

// SetEPaymenttermType sets field value
func (o *PaymenttermRequest) SetEPaymenttermType(v FieldEPaymenttermType) {
	o.EPaymenttermType = v
}

// GetIPaymenttermDay returns the IPaymenttermDay field value
func (o *PaymenttermRequest) GetIPaymenttermDay() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IPaymenttermDay
}

// GetIPaymenttermDayOk returns a tuple with the IPaymenttermDay field value
// and a boolean to check if the value has been set.
func (o *PaymenttermRequest) GetIPaymenttermDayOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IPaymenttermDay, true
}

// SetIPaymenttermDay sets field value
func (o *PaymenttermRequest) SetIPaymenttermDay(v int32) {
	o.IPaymenttermDay = v
}

// GetObjPaymenttermDescription returns the ObjPaymenttermDescription field value
func (o *PaymenttermRequest) GetObjPaymenttermDescription() MultilingualPaymenttermDescription {
	if o == nil {
		var ret MultilingualPaymenttermDescription
		return ret
	}

	return o.ObjPaymenttermDescription
}

// GetObjPaymenttermDescriptionOk returns a tuple with the ObjPaymenttermDescription field value
// and a boolean to check if the value has been set.
func (o *PaymenttermRequest) GetObjPaymenttermDescriptionOk() (*MultilingualPaymenttermDescription, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjPaymenttermDescription, true
}

// SetObjPaymenttermDescription sets field value
func (o *PaymenttermRequest) SetObjPaymenttermDescription(v MultilingualPaymenttermDescription) {
	o.ObjPaymenttermDescription = v
}

// GetBPaymenttermIsactive returns the BPaymenttermIsactive field value
func (o *PaymenttermRequest) GetBPaymenttermIsactive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BPaymenttermIsactive
}

// GetBPaymenttermIsactiveOk returns a tuple with the BPaymenttermIsactive field value
// and a boolean to check if the value has been set.
func (o *PaymenttermRequest) GetBPaymenttermIsactiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BPaymenttermIsactive, true
}

// SetBPaymenttermIsactive sets field value
func (o *PaymenttermRequest) SetBPaymenttermIsactive(v bool) {
	o.BPaymenttermIsactive = v
}

func (o PaymenttermRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymenttermRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PkiPaymenttermID) {
		toSerialize["pkiPaymenttermID"] = o.PkiPaymenttermID
	}
	toSerialize["sPaymenttermCode"] = o.SPaymenttermCode
	toSerialize["ePaymenttermType"] = o.EPaymenttermType
	toSerialize["iPaymenttermDay"] = o.IPaymenttermDay
	toSerialize["objPaymenttermDescription"] = o.ObjPaymenttermDescription
	toSerialize["bPaymenttermIsactive"] = o.BPaymenttermIsactive
	return toSerialize, nil
}

func (o *PaymenttermRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sPaymenttermCode",
		"ePaymenttermType",
		"iPaymenttermDay",
		"objPaymenttermDescription",
		"bPaymenttermIsactive",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaymenttermRequest := _PaymenttermRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPaymenttermRequest)

	if err != nil {
		return err
	}

	*o = PaymenttermRequest(varPaymenttermRequest)

	return err
}

type NullablePaymenttermRequest struct {
	value *PaymenttermRequest
	isSet bool
}

func (v NullablePaymenttermRequest) Get() *PaymenttermRequest {
	return v.value
}

func (v *NullablePaymenttermRequest) Set(val *PaymenttermRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymenttermRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymenttermRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymenttermRequest(val *PaymenttermRequest) *NullablePaymenttermRequest {
	return &NullablePaymenttermRequest{value: val, isSet: true}
}

func (v NullablePaymenttermRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymenttermRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


