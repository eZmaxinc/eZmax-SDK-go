/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsignfolderResponseCompound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsignfolderResponseCompound{}

// EzsignfolderResponseCompound An Ezsignfolder Object and children to create a complete structure
type EzsignfolderResponseCompound struct {
	EzsignfolderResponse
	ObjTimezone *CustomTimezoneWithCodeResponse `json:"objTimezone,omitempty"`
}

type _EzsignfolderResponseCompound EzsignfolderResponseCompound

// NewEzsignfolderResponseCompound instantiates a new EzsignfolderResponseCompound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsignfolderResponseCompound(pkiEzsignfolderID int32, eEzsignfolderCompletion FieldEEzsignfolderCompletion, sEzsignfolderDescription string) *EzsignfolderResponseCompound {
	this := EzsignfolderResponseCompound{}
	this.PkiEzsignfolderID = pkiEzsignfolderID
	this.EEzsignfolderCompletion = eEzsignfolderCompletion
	this.SEzsignfolderDescription = sEzsignfolderDescription
	return &this
}

// NewEzsignfolderResponseCompoundWithDefaults instantiates a new EzsignfolderResponseCompound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsignfolderResponseCompoundWithDefaults() *EzsignfolderResponseCompound {
	this := EzsignfolderResponseCompound{}
	return &this
}

// GetObjTimezone returns the ObjTimezone field value if set, zero value otherwise.
func (o *EzsignfolderResponseCompound) GetObjTimezone() CustomTimezoneWithCodeResponse {
	if o == nil || IsNil(o.ObjTimezone) {
		var ret CustomTimezoneWithCodeResponse
		return ret
	}
	return *o.ObjTimezone
}

// GetObjTimezoneOk returns a tuple with the ObjTimezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfolderResponseCompound) GetObjTimezoneOk() (*CustomTimezoneWithCodeResponse, bool) {
	if o == nil || IsNil(o.ObjTimezone) {
		return nil, false
	}
	return o.ObjTimezone, true
}

// HasObjTimezone returns a boolean if a field has been set.
func (o *EzsignfolderResponseCompound) HasObjTimezone() bool {
	if o != nil && !IsNil(o.ObjTimezone) {
		return true
	}

	return false
}

// SetObjTimezone gets a reference to the given CustomTimezoneWithCodeResponse and assigns it to the ObjTimezone field.
func (o *EzsignfolderResponseCompound) SetObjTimezone(v CustomTimezoneWithCodeResponse) {
	o.ObjTimezone = &v
}

func (o EzsignfolderResponseCompound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsignfolderResponseCompound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ObjTimezone) {
		toSerialize["objTimezone"] = o.ObjTimezone
	}
	return toSerialize, nil
}

func (o *EzsignfolderResponseCompound) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pkiEzsignfolderID",
		"eEzsignfolderCompletion",
		"sEzsignfolderDescription",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsignfolderResponseCompound := _EzsignfolderResponseCompound{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsignfolderResponseCompound)

	if err != nil {
		return err
	}

	*o = EzsignfolderResponseCompound(varEzsignfolderResponseCompound)

	return err
}

type NullableEzsignfolderResponseCompound struct {
	value *EzsignfolderResponseCompound
	isSet bool
}

func (v NullableEzsignfolderResponseCompound) Get() *EzsignfolderResponseCompound {
	return v.value
}

func (v *NullableEzsignfolderResponseCompound) Set(val *EzsignfolderResponseCompound) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsignfolderResponseCompound) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsignfolderResponseCompound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsignfolderResponseCompound(val *EzsignfolderResponseCompound) *NullableEzsignfolderResponseCompound {
	return &NullableEzsignfolderResponseCompound{value: val, isSet: true}
}

func (v NullableEzsignfolderResponseCompound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsignfolderResponseCompound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


