/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.2
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"fmt"
)

// FieldECreditcardtypeCodename The codename of the Creditcardtype
type FieldECreditcardtypeCodename string

// List of Field-eCreditcardtypeCodename
const (
	AMEX FieldECreditcardtypeCodename = "Amex"
	MASTERCARD FieldECreditcardtypeCodename = "Mastercard"
	VISA FieldECreditcardtypeCodename = "Visa"
)

// All allowed values of FieldECreditcardtypeCodename enum
var AllowedFieldECreditcardtypeCodenameEnumValues = []FieldECreditcardtypeCodename{
	"Amex",
	"Mastercard",
	"Visa",
}

func (v *FieldECreditcardtypeCodename) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := FieldECreditcardtypeCodename(value)
	for _, existing := range AllowedFieldECreditcardtypeCodenameEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid FieldECreditcardtypeCodename", value)
}

// NewFieldECreditcardtypeCodenameFromValue returns a pointer to a valid FieldECreditcardtypeCodename
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewFieldECreditcardtypeCodenameFromValue(v string) (*FieldECreditcardtypeCodename, error) {
	ev := FieldECreditcardtypeCodename(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for FieldECreditcardtypeCodename: valid values are %v", v, AllowedFieldECreditcardtypeCodenameEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v FieldECreditcardtypeCodename) IsValid() bool {
	for _, existing := range AllowedFieldECreditcardtypeCodenameEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Field-eCreditcardtypeCodename value
func (v FieldECreditcardtypeCodename) Ptr() *FieldECreditcardtypeCodename {
	return &v
}

type NullableFieldECreditcardtypeCodename struct {
	value *FieldECreditcardtypeCodename
	isSet bool
}

func (v NullableFieldECreditcardtypeCodename) Get() *FieldECreditcardtypeCodename {
	return v.value
}

func (v *NullableFieldECreditcardtypeCodename) Set(val *FieldECreditcardtypeCodename) {
	v.value = val
	v.isSet = true
}

func (v NullableFieldECreditcardtypeCodename) IsSet() bool {
	return v.isSet
}

func (v *NullableFieldECreditcardtypeCodename) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFieldECreditcardtypeCodename(val *FieldECreditcardtypeCodename) *NullableFieldECreditcardtypeCodename {
	return &NullableFieldECreditcardtypeCodename{value: val, isSet: true}
}

func (v NullableFieldECreditcardtypeCodename) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFieldECreditcardtypeCodename) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

