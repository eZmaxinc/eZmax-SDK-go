/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CommonResponseErrorEzsignformValidation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonResponseErrorEzsignformValidation{}

// CommonResponseErrorEzsignformValidation Generic Error Message
type CommonResponseErrorEzsignformValidation struct {
	CommonResponseError
	// 
	AObjEzsignformfielderror []CustomEzsignformfielderrorResponse `json:"a_objEzsignformfielderror"`
}

type _CommonResponseErrorEzsignformValidation CommonResponseErrorEzsignformValidation

// NewCommonResponseErrorEzsignformValidation instantiates a new CommonResponseErrorEzsignformValidation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonResponseErrorEzsignformValidation(aObjEzsignformfielderror []CustomEzsignformfielderrorResponse, sErrorMessage string, eErrorCode FieldEErrorCode) *CommonResponseErrorEzsignformValidation {
	this := CommonResponseErrorEzsignformValidation{}
	this.SErrorMessage = sErrorMessage
	this.EErrorCode = eErrorCode
	this.AObjEzsignformfielderror = aObjEzsignformfielderror
	return &this
}

// NewCommonResponseErrorEzsignformValidationWithDefaults instantiates a new CommonResponseErrorEzsignformValidation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonResponseErrorEzsignformValidationWithDefaults() *CommonResponseErrorEzsignformValidation {
	this := CommonResponseErrorEzsignformValidation{}
	return &this
}

// GetAObjEzsignformfielderror returns the AObjEzsignformfielderror field value
func (o *CommonResponseErrorEzsignformValidation) GetAObjEzsignformfielderror() []CustomEzsignformfielderrorResponse {
	if o == nil {
		var ret []CustomEzsignformfielderrorResponse
		return ret
	}

	return o.AObjEzsignformfielderror
}

// GetAObjEzsignformfielderrorOk returns a tuple with the AObjEzsignformfielderror field value
// and a boolean to check if the value has been set.
func (o *CommonResponseErrorEzsignformValidation) GetAObjEzsignformfielderrorOk() ([]CustomEzsignformfielderrorResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.AObjEzsignformfielderror, true
}

// SetAObjEzsignformfielderror sets field value
func (o *CommonResponseErrorEzsignformValidation) SetAObjEzsignformfielderror(v []CustomEzsignformfielderrorResponse) {
	o.AObjEzsignformfielderror = v
}

func (o CommonResponseErrorEzsignformValidation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonResponseErrorEzsignformValidation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["a_objEzsignformfielderror"] = o.AObjEzsignformfielderror
	return toSerialize, nil
}

func (o *CommonResponseErrorEzsignformValidation) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"a_objEzsignformfielderror",
		"sErrorMessage",
		"eErrorCode",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCommonResponseErrorEzsignformValidation := _CommonResponseErrorEzsignformValidation{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCommonResponseErrorEzsignformValidation)

	if err != nil {
		return err
	}

	*o = CommonResponseErrorEzsignformValidation(varCommonResponseErrorEzsignformValidation)

	return err
}

type NullableCommonResponseErrorEzsignformValidation struct {
	value *CommonResponseErrorEzsignformValidation
	isSet bool
}

func (v NullableCommonResponseErrorEzsignformValidation) Get() *CommonResponseErrorEzsignformValidation {
	return v.value
}

func (v *NullableCommonResponseErrorEzsignformValidation) Set(val *CommonResponseErrorEzsignformValidation) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonResponseErrorEzsignformValidation) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonResponseErrorEzsignformValidation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonResponseErrorEzsignformValidation(val *CommonResponseErrorEzsignformValidation) *NullableCommonResponseErrorEzsignformValidation {
	return &NullableCommonResponseErrorEzsignformValidation{value: val, isSet: true}
}

func (v NullableCommonResponseErrorEzsignformValidation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonResponseErrorEzsignformValidation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


