/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// checks if the CustomCommunicationsenderResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomCommunicationsenderResponse{}

// CustomCommunicationsenderResponse Generic Communicationsender Response
type CustomCommunicationsenderResponse struct {
	// The unique ID of the Agent.
	FkiAgentID *int32 `json:"fkiAgentID,omitempty"`
	// The unique ID of the Broker.
	FkiBrokerID *int32 `json:"fkiBrokerID,omitempty"`
	// The unique ID of the User
	FkiUserID *int32 `json:"fkiUserID,omitempty"`
	// The unique ID of the Mailboxshared
	FkiMailboxsharedID *int32 `json:"fkiMailboxsharedID,omitempty"`
	ECommunicationsenderObjecttype string `json:"eCommunicationsenderObjecttype"`
	ObjContactName CustomContactNameResponse `json:"objContactName"`
	// The email address.
	SEmailAddress *string `json:"sEmailAddress,omitempty"`
	// A phone number in E.164 Format
	SPhoneE164 *string `json:"sPhoneE164,omitempty"`
}

// NewCustomCommunicationsenderResponse instantiates a new CustomCommunicationsenderResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomCommunicationsenderResponse(eCommunicationsenderObjecttype string, objContactName CustomContactNameResponse) *CustomCommunicationsenderResponse {
	this := CustomCommunicationsenderResponse{}
	this.ECommunicationsenderObjecttype = eCommunicationsenderObjecttype
	this.ObjContactName = objContactName
	return &this
}

// NewCustomCommunicationsenderResponseWithDefaults instantiates a new CustomCommunicationsenderResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomCommunicationsenderResponseWithDefaults() *CustomCommunicationsenderResponse {
	this := CustomCommunicationsenderResponse{}
	return &this
}

// GetFkiAgentID returns the FkiAgentID field value if set, zero value otherwise.
func (o *CustomCommunicationsenderResponse) GetFkiAgentID() int32 {
	if o == nil || IsNil(o.FkiAgentID) {
		var ret int32
		return ret
	}
	return *o.FkiAgentID
}

// GetFkiAgentIDOk returns a tuple with the FkiAgentID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomCommunicationsenderResponse) GetFkiAgentIDOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiAgentID) {
		return nil, false
	}
	return o.FkiAgentID, true
}

// HasFkiAgentID returns a boolean if a field has been set.
func (o *CustomCommunicationsenderResponse) HasFkiAgentID() bool {
	if o != nil && !IsNil(o.FkiAgentID) {
		return true
	}

	return false
}

// SetFkiAgentID gets a reference to the given int32 and assigns it to the FkiAgentID field.
func (o *CustomCommunicationsenderResponse) SetFkiAgentID(v int32) {
	o.FkiAgentID = &v
}

// GetFkiBrokerID returns the FkiBrokerID field value if set, zero value otherwise.
func (o *CustomCommunicationsenderResponse) GetFkiBrokerID() int32 {
	if o == nil || IsNil(o.FkiBrokerID) {
		var ret int32
		return ret
	}
	return *o.FkiBrokerID
}

// GetFkiBrokerIDOk returns a tuple with the FkiBrokerID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomCommunicationsenderResponse) GetFkiBrokerIDOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiBrokerID) {
		return nil, false
	}
	return o.FkiBrokerID, true
}

// HasFkiBrokerID returns a boolean if a field has been set.
func (o *CustomCommunicationsenderResponse) HasFkiBrokerID() bool {
	if o != nil && !IsNil(o.FkiBrokerID) {
		return true
	}

	return false
}

// SetFkiBrokerID gets a reference to the given int32 and assigns it to the FkiBrokerID field.
func (o *CustomCommunicationsenderResponse) SetFkiBrokerID(v int32) {
	o.FkiBrokerID = &v
}

// GetFkiUserID returns the FkiUserID field value if set, zero value otherwise.
func (o *CustomCommunicationsenderResponse) GetFkiUserID() int32 {
	if o == nil || IsNil(o.FkiUserID) {
		var ret int32
		return ret
	}
	return *o.FkiUserID
}

// GetFkiUserIDOk returns a tuple with the FkiUserID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomCommunicationsenderResponse) GetFkiUserIDOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiUserID) {
		return nil, false
	}
	return o.FkiUserID, true
}

// HasFkiUserID returns a boolean if a field has been set.
func (o *CustomCommunicationsenderResponse) HasFkiUserID() bool {
	if o != nil && !IsNil(o.FkiUserID) {
		return true
	}

	return false
}

// SetFkiUserID gets a reference to the given int32 and assigns it to the FkiUserID field.
func (o *CustomCommunicationsenderResponse) SetFkiUserID(v int32) {
	o.FkiUserID = &v
}

// GetFkiMailboxsharedID returns the FkiMailboxsharedID field value if set, zero value otherwise.
func (o *CustomCommunicationsenderResponse) GetFkiMailboxsharedID() int32 {
	if o == nil || IsNil(o.FkiMailboxsharedID) {
		var ret int32
		return ret
	}
	return *o.FkiMailboxsharedID
}

// GetFkiMailboxsharedIDOk returns a tuple with the FkiMailboxsharedID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomCommunicationsenderResponse) GetFkiMailboxsharedIDOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiMailboxsharedID) {
		return nil, false
	}
	return o.FkiMailboxsharedID, true
}

// HasFkiMailboxsharedID returns a boolean if a field has been set.
func (o *CustomCommunicationsenderResponse) HasFkiMailboxsharedID() bool {
	if o != nil && !IsNil(o.FkiMailboxsharedID) {
		return true
	}

	return false
}

// SetFkiMailboxsharedID gets a reference to the given int32 and assigns it to the FkiMailboxsharedID field.
func (o *CustomCommunicationsenderResponse) SetFkiMailboxsharedID(v int32) {
	o.FkiMailboxsharedID = &v
}

// GetECommunicationsenderObjecttype returns the ECommunicationsenderObjecttype field value
func (o *CustomCommunicationsenderResponse) GetECommunicationsenderObjecttype() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ECommunicationsenderObjecttype
}

// GetECommunicationsenderObjecttypeOk returns a tuple with the ECommunicationsenderObjecttype field value
// and a boolean to check if the value has been set.
func (o *CustomCommunicationsenderResponse) GetECommunicationsenderObjecttypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ECommunicationsenderObjecttype, true
}

// SetECommunicationsenderObjecttype sets field value
func (o *CustomCommunicationsenderResponse) SetECommunicationsenderObjecttype(v string) {
	o.ECommunicationsenderObjecttype = v
}

// GetObjContactName returns the ObjContactName field value
func (o *CustomCommunicationsenderResponse) GetObjContactName() CustomContactNameResponse {
	if o == nil {
		var ret CustomContactNameResponse
		return ret
	}

	return o.ObjContactName
}

// GetObjContactNameOk returns a tuple with the ObjContactName field value
// and a boolean to check if the value has been set.
func (o *CustomCommunicationsenderResponse) GetObjContactNameOk() (*CustomContactNameResponse, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjContactName, true
}

// SetObjContactName sets field value
func (o *CustomCommunicationsenderResponse) SetObjContactName(v CustomContactNameResponse) {
	o.ObjContactName = v
}

// GetSEmailAddress returns the SEmailAddress field value if set, zero value otherwise.
func (o *CustomCommunicationsenderResponse) GetSEmailAddress() string {
	if o == nil || IsNil(o.SEmailAddress) {
		var ret string
		return ret
	}
	return *o.SEmailAddress
}

// GetSEmailAddressOk returns a tuple with the SEmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomCommunicationsenderResponse) GetSEmailAddressOk() (*string, bool) {
	if o == nil || IsNil(o.SEmailAddress) {
		return nil, false
	}
	return o.SEmailAddress, true
}

// HasSEmailAddress returns a boolean if a field has been set.
func (o *CustomCommunicationsenderResponse) HasSEmailAddress() bool {
	if o != nil && !IsNil(o.SEmailAddress) {
		return true
	}

	return false
}

// SetSEmailAddress gets a reference to the given string and assigns it to the SEmailAddress field.
func (o *CustomCommunicationsenderResponse) SetSEmailAddress(v string) {
	o.SEmailAddress = &v
}

// GetSPhoneE164 returns the SPhoneE164 field value if set, zero value otherwise.
func (o *CustomCommunicationsenderResponse) GetSPhoneE164() string {
	if o == nil || IsNil(o.SPhoneE164) {
		var ret string
		return ret
	}
	return *o.SPhoneE164
}

// GetSPhoneE164Ok returns a tuple with the SPhoneE164 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomCommunicationsenderResponse) GetSPhoneE164Ok() (*string, bool) {
	if o == nil || IsNil(o.SPhoneE164) {
		return nil, false
	}
	return o.SPhoneE164, true
}

// HasSPhoneE164 returns a boolean if a field has been set.
func (o *CustomCommunicationsenderResponse) HasSPhoneE164() bool {
	if o != nil && !IsNil(o.SPhoneE164) {
		return true
	}

	return false
}

// SetSPhoneE164 gets a reference to the given string and assigns it to the SPhoneE164 field.
func (o *CustomCommunicationsenderResponse) SetSPhoneE164(v string) {
	o.SPhoneE164 = &v
}

func (o CustomCommunicationsenderResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomCommunicationsenderResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FkiAgentID) {
		toSerialize["fkiAgentID"] = o.FkiAgentID
	}
	if !IsNil(o.FkiBrokerID) {
		toSerialize["fkiBrokerID"] = o.FkiBrokerID
	}
	if !IsNil(o.FkiUserID) {
		toSerialize["fkiUserID"] = o.FkiUserID
	}
	if !IsNil(o.FkiMailboxsharedID) {
		toSerialize["fkiMailboxsharedID"] = o.FkiMailboxsharedID
	}
	toSerialize["eCommunicationsenderObjecttype"] = o.ECommunicationsenderObjecttype
	toSerialize["objContactName"] = o.ObjContactName
	if !IsNil(o.SEmailAddress) {
		toSerialize["sEmailAddress"] = o.SEmailAddress
	}
	if !IsNil(o.SPhoneE164) {
		toSerialize["sPhoneE164"] = o.SPhoneE164
	}
	return toSerialize, nil
}

type NullableCustomCommunicationsenderResponse struct {
	value *CustomCommunicationsenderResponse
	isSet bool
}

func (v NullableCustomCommunicationsenderResponse) Get() *CustomCommunicationsenderResponse {
	return v.value
}

func (v *NullableCustomCommunicationsenderResponse) Set(val *CustomCommunicationsenderResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomCommunicationsenderResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomCommunicationsenderResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomCommunicationsenderResponse(val *CustomCommunicationsenderResponse) *NullableCustomCommunicationsenderResponse {
	return &NullableCustomCommunicationsenderResponse{value: val, isSet: true}
}

func (v NullableCustomCommunicationsenderResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomCommunicationsenderResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


