/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.2
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload{}

// EzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload Payload for POST /1/object/ezsigntemplatepublic/{pkiEzsigntemplatepublicID}/resetLimitExceededCounter
type EzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload struct {
	// The limitexceededsince of the Ezsigntemplatepublic
	DtEzsigntemplatepublicLimitexceededsince string `json:"dtEzsigntemplatepublicLimitexceededsince" validate:"regexp=^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) ([01]?[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$"`
}

type _EzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload EzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload

// NewEzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload instantiates a new EzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload(dtEzsigntemplatepublicLimitexceededsince string) *EzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload {
	this := EzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload{}
	this.DtEzsigntemplatepublicLimitexceededsince = dtEzsigntemplatepublicLimitexceededsince
	return &this
}

// NewEzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayloadWithDefaults instantiates a new EzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayloadWithDefaults() *EzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload {
	this := EzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload{}
	return &this
}

// GetDtEzsigntemplatepublicLimitexceededsince returns the DtEzsigntemplatepublicLimitexceededsince field value
func (o *EzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload) GetDtEzsigntemplatepublicLimitexceededsince() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DtEzsigntemplatepublicLimitexceededsince
}

// GetDtEzsigntemplatepublicLimitexceededsinceOk returns a tuple with the DtEzsigntemplatepublicLimitexceededsince field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload) GetDtEzsigntemplatepublicLimitexceededsinceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DtEzsigntemplatepublicLimitexceededsince, true
}

// SetDtEzsigntemplatepublicLimitexceededsince sets field value
func (o *EzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload) SetDtEzsigntemplatepublicLimitexceededsince(v string) {
	o.DtEzsigntemplatepublicLimitexceededsince = v
}

func (o EzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dtEzsigntemplatepublicLimitexceededsince"] = o.DtEzsigntemplatepublicLimitexceededsince
	return toSerialize, nil
}

func (o *EzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dtEzsigntemplatepublicLimitexceededsince",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload := _EzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload)

	if err != nil {
		return err
	}

	*o = EzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload(varEzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload)

	return err
}

type NullableEzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload struct {
	value *EzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload
	isSet bool
}

func (v NullableEzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload) Get() *EzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload {
	return v.value
}

func (v *NullableEzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload) Set(val *EzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload(val *EzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload) *NullableEzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload {
	return &NullableEzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload{value: val, isSet: true}
}

func (v NullableEzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


