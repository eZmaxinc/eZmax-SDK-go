/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsigntemplateglobalResponseCompound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsigntemplateglobalResponseCompound{}

// EzsigntemplateglobalResponseCompound A Ezsigntemplateglobal Object
type EzsigntemplateglobalResponseCompound struct {
	// The unique ID of the Ezsigntemplateglobal
	PkiEzsigntemplateglobalID int32 `json:"pkiEzsigntemplateglobalID"`
	// The unique ID of the Ezsigntemplateglobaldocument
	FkiEzsigntemplateglobaldocumentID int32 `json:"fkiEzsigntemplateglobaldocumentID"`
	// The unique ID of the Module
	FkiModuleID int32 `json:"fkiModuleID"`
	// The Name of the Module in the language of the requester
	SModuleNameX *string `json:"sModuleNameX,omitempty"`
	// The unique ID of the Language.  Valid values:  |Value|Description| |-|-| |1|French| |2|English|
	FkiLanguageID int32 `json:"fkiLanguageID"`
	// The Name of the Language in the language of the requester
	SLanguageNameX string `json:"sLanguageNameX"`
	EEzsigntemplateglobalModule FieldEEzsigntemplateglobalModule `json:"eEzsigntemplateglobalModule"`
	EEzsigntemplateglobalSupplier FieldEEzsigntemplateglobalSupplier `json:"eEzsigntemplateglobalSupplier"`
	// The Code of the Ezsigntemplateglobal
	SEzsigntemplateglobalCode string `json:"sEzsigntemplateglobalCode"`
	// The description of the Ezsigntemplate
	SEzsigntemplateglobalDescription string `json:"sEzsigntemplateglobalDescription"`
	ObjEzsigntemplateglobaldocument *EzsigntemplateglobaldocumentResponse `json:"objEzsigntemplateglobaldocument,omitempty"`
	AObjEzsigntemplateglobalsigner []EzsigntemplateglobalsignerResponseCompound `json:"a_objEzsigntemplateglobalsigner"`
}

type _EzsigntemplateglobalResponseCompound EzsigntemplateglobalResponseCompound

// NewEzsigntemplateglobalResponseCompound instantiates a new EzsigntemplateglobalResponseCompound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsigntemplateglobalResponseCompound(pkiEzsigntemplateglobalID int32, fkiEzsigntemplateglobaldocumentID int32, fkiModuleID int32, fkiLanguageID int32, sLanguageNameX string, eEzsigntemplateglobalModule FieldEEzsigntemplateglobalModule, eEzsigntemplateglobalSupplier FieldEEzsigntemplateglobalSupplier, sEzsigntemplateglobalCode string, sEzsigntemplateglobalDescription string, aObjEzsigntemplateglobalsigner []EzsigntemplateglobalsignerResponseCompound) *EzsigntemplateglobalResponseCompound {
	this := EzsigntemplateglobalResponseCompound{}
	this.PkiEzsigntemplateglobalID = pkiEzsigntemplateglobalID
	this.FkiEzsigntemplateglobaldocumentID = fkiEzsigntemplateglobaldocumentID
	this.FkiModuleID = fkiModuleID
	this.FkiLanguageID = fkiLanguageID
	this.SLanguageNameX = sLanguageNameX
	this.EEzsigntemplateglobalModule = eEzsigntemplateglobalModule
	this.EEzsigntemplateglobalSupplier = eEzsigntemplateglobalSupplier
	this.SEzsigntemplateglobalCode = sEzsigntemplateglobalCode
	this.SEzsigntemplateglobalDescription = sEzsigntemplateglobalDescription
	this.AObjEzsigntemplateglobalsigner = aObjEzsigntemplateglobalsigner
	return &this
}

// NewEzsigntemplateglobalResponseCompoundWithDefaults instantiates a new EzsigntemplateglobalResponseCompound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsigntemplateglobalResponseCompoundWithDefaults() *EzsigntemplateglobalResponseCompound {
	this := EzsigntemplateglobalResponseCompound{}
	return &this
}

// GetPkiEzsigntemplateglobalID returns the PkiEzsigntemplateglobalID field value
func (o *EzsigntemplateglobalResponseCompound) GetPkiEzsigntemplateglobalID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PkiEzsigntemplateglobalID
}

// GetPkiEzsigntemplateglobalIDOk returns a tuple with the PkiEzsigntemplateglobalID field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplateglobalResponseCompound) GetPkiEzsigntemplateglobalIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkiEzsigntemplateglobalID, true
}

// SetPkiEzsigntemplateglobalID sets field value
func (o *EzsigntemplateglobalResponseCompound) SetPkiEzsigntemplateglobalID(v int32) {
	o.PkiEzsigntemplateglobalID = v
}

// GetFkiEzsigntemplateglobaldocumentID returns the FkiEzsigntemplateglobaldocumentID field value
func (o *EzsigntemplateglobalResponseCompound) GetFkiEzsigntemplateglobaldocumentID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiEzsigntemplateglobaldocumentID
}

// GetFkiEzsigntemplateglobaldocumentIDOk returns a tuple with the FkiEzsigntemplateglobaldocumentID field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplateglobalResponseCompound) GetFkiEzsigntemplateglobaldocumentIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiEzsigntemplateglobaldocumentID, true
}

// SetFkiEzsigntemplateglobaldocumentID sets field value
func (o *EzsigntemplateglobalResponseCompound) SetFkiEzsigntemplateglobaldocumentID(v int32) {
	o.FkiEzsigntemplateglobaldocumentID = v
}

// GetFkiModuleID returns the FkiModuleID field value
func (o *EzsigntemplateglobalResponseCompound) GetFkiModuleID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiModuleID
}

// GetFkiModuleIDOk returns a tuple with the FkiModuleID field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplateglobalResponseCompound) GetFkiModuleIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiModuleID, true
}

// SetFkiModuleID sets field value
func (o *EzsigntemplateglobalResponseCompound) SetFkiModuleID(v int32) {
	o.FkiModuleID = v
}

// GetSModuleNameX returns the SModuleNameX field value if set, zero value otherwise.
func (o *EzsigntemplateglobalResponseCompound) GetSModuleNameX() string {
	if o == nil || IsNil(o.SModuleNameX) {
		var ret string
		return ret
	}
	return *o.SModuleNameX
}

// GetSModuleNameXOk returns a tuple with the SModuleNameX field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplateglobalResponseCompound) GetSModuleNameXOk() (*string, bool) {
	if o == nil || IsNil(o.SModuleNameX) {
		return nil, false
	}
	return o.SModuleNameX, true
}

// HasSModuleNameX returns a boolean if a field has been set.
func (o *EzsigntemplateglobalResponseCompound) HasSModuleNameX() bool {
	if o != nil && !IsNil(o.SModuleNameX) {
		return true
	}

	return false
}

// SetSModuleNameX gets a reference to the given string and assigns it to the SModuleNameX field.
func (o *EzsigntemplateglobalResponseCompound) SetSModuleNameX(v string) {
	o.SModuleNameX = &v
}

// GetFkiLanguageID returns the FkiLanguageID field value
func (o *EzsigntemplateglobalResponseCompound) GetFkiLanguageID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiLanguageID
}

// GetFkiLanguageIDOk returns a tuple with the FkiLanguageID field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplateglobalResponseCompound) GetFkiLanguageIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiLanguageID, true
}

// SetFkiLanguageID sets field value
func (o *EzsigntemplateglobalResponseCompound) SetFkiLanguageID(v int32) {
	o.FkiLanguageID = v
}

// GetSLanguageNameX returns the SLanguageNameX field value
func (o *EzsigntemplateglobalResponseCompound) GetSLanguageNameX() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SLanguageNameX
}

// GetSLanguageNameXOk returns a tuple with the SLanguageNameX field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplateglobalResponseCompound) GetSLanguageNameXOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SLanguageNameX, true
}

// SetSLanguageNameX sets field value
func (o *EzsigntemplateglobalResponseCompound) SetSLanguageNameX(v string) {
	o.SLanguageNameX = v
}

// GetEEzsigntemplateglobalModule returns the EEzsigntemplateglobalModule field value
func (o *EzsigntemplateglobalResponseCompound) GetEEzsigntemplateglobalModule() FieldEEzsigntemplateglobalModule {
	if o == nil {
		var ret FieldEEzsigntemplateglobalModule
		return ret
	}

	return o.EEzsigntemplateglobalModule
}

// GetEEzsigntemplateglobalModuleOk returns a tuple with the EEzsigntemplateglobalModule field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplateglobalResponseCompound) GetEEzsigntemplateglobalModuleOk() (*FieldEEzsigntemplateglobalModule, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EEzsigntemplateglobalModule, true
}

// SetEEzsigntemplateglobalModule sets field value
func (o *EzsigntemplateglobalResponseCompound) SetEEzsigntemplateglobalModule(v FieldEEzsigntemplateglobalModule) {
	o.EEzsigntemplateglobalModule = v
}

// GetEEzsigntemplateglobalSupplier returns the EEzsigntemplateglobalSupplier field value
func (o *EzsigntemplateglobalResponseCompound) GetEEzsigntemplateglobalSupplier() FieldEEzsigntemplateglobalSupplier {
	if o == nil {
		var ret FieldEEzsigntemplateglobalSupplier
		return ret
	}

	return o.EEzsigntemplateglobalSupplier
}

// GetEEzsigntemplateglobalSupplierOk returns a tuple with the EEzsigntemplateglobalSupplier field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplateglobalResponseCompound) GetEEzsigntemplateglobalSupplierOk() (*FieldEEzsigntemplateglobalSupplier, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EEzsigntemplateglobalSupplier, true
}

// SetEEzsigntemplateglobalSupplier sets field value
func (o *EzsigntemplateglobalResponseCompound) SetEEzsigntemplateglobalSupplier(v FieldEEzsigntemplateglobalSupplier) {
	o.EEzsigntemplateglobalSupplier = v
}

// GetSEzsigntemplateglobalCode returns the SEzsigntemplateglobalCode field value
func (o *EzsigntemplateglobalResponseCompound) GetSEzsigntemplateglobalCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SEzsigntemplateglobalCode
}

// GetSEzsigntemplateglobalCodeOk returns a tuple with the SEzsigntemplateglobalCode field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplateglobalResponseCompound) GetSEzsigntemplateglobalCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SEzsigntemplateglobalCode, true
}

// SetSEzsigntemplateglobalCode sets field value
func (o *EzsigntemplateglobalResponseCompound) SetSEzsigntemplateglobalCode(v string) {
	o.SEzsigntemplateglobalCode = v
}

// GetSEzsigntemplateglobalDescription returns the SEzsigntemplateglobalDescription field value
func (o *EzsigntemplateglobalResponseCompound) GetSEzsigntemplateglobalDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SEzsigntemplateglobalDescription
}

// GetSEzsigntemplateglobalDescriptionOk returns a tuple with the SEzsigntemplateglobalDescription field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplateglobalResponseCompound) GetSEzsigntemplateglobalDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SEzsigntemplateglobalDescription, true
}

// SetSEzsigntemplateglobalDescription sets field value
func (o *EzsigntemplateglobalResponseCompound) SetSEzsigntemplateglobalDescription(v string) {
	o.SEzsigntemplateglobalDescription = v
}

// GetObjEzsigntemplateglobaldocument returns the ObjEzsigntemplateglobaldocument field value if set, zero value otherwise.
func (o *EzsigntemplateglobalResponseCompound) GetObjEzsigntemplateglobaldocument() EzsigntemplateglobaldocumentResponse {
	if o == nil || IsNil(o.ObjEzsigntemplateglobaldocument) {
		var ret EzsigntemplateglobaldocumentResponse
		return ret
	}
	return *o.ObjEzsigntemplateglobaldocument
}

// GetObjEzsigntemplateglobaldocumentOk returns a tuple with the ObjEzsigntemplateglobaldocument field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplateglobalResponseCompound) GetObjEzsigntemplateglobaldocumentOk() (*EzsigntemplateglobaldocumentResponse, bool) {
	if o == nil || IsNil(o.ObjEzsigntemplateglobaldocument) {
		return nil, false
	}
	return o.ObjEzsigntemplateglobaldocument, true
}

// HasObjEzsigntemplateglobaldocument returns a boolean if a field has been set.
func (o *EzsigntemplateglobalResponseCompound) HasObjEzsigntemplateglobaldocument() bool {
	if o != nil && !IsNil(o.ObjEzsigntemplateglobaldocument) {
		return true
	}

	return false
}

// SetObjEzsigntemplateglobaldocument gets a reference to the given EzsigntemplateglobaldocumentResponse and assigns it to the ObjEzsigntemplateglobaldocument field.
func (o *EzsigntemplateglobalResponseCompound) SetObjEzsigntemplateglobaldocument(v EzsigntemplateglobaldocumentResponse) {
	o.ObjEzsigntemplateglobaldocument = &v
}

// GetAObjEzsigntemplateglobalsigner returns the AObjEzsigntemplateglobalsigner field value
func (o *EzsigntemplateglobalResponseCompound) GetAObjEzsigntemplateglobalsigner() []EzsigntemplateglobalsignerResponseCompound {
	if o == nil {
		var ret []EzsigntemplateglobalsignerResponseCompound
		return ret
	}

	return o.AObjEzsigntemplateglobalsigner
}

// GetAObjEzsigntemplateglobalsignerOk returns a tuple with the AObjEzsigntemplateglobalsigner field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplateglobalResponseCompound) GetAObjEzsigntemplateglobalsignerOk() ([]EzsigntemplateglobalsignerResponseCompound, bool) {
	if o == nil {
		return nil, false
	}
	return o.AObjEzsigntemplateglobalsigner, true
}

// SetAObjEzsigntemplateglobalsigner sets field value
func (o *EzsigntemplateglobalResponseCompound) SetAObjEzsigntemplateglobalsigner(v []EzsigntemplateglobalsignerResponseCompound) {
	o.AObjEzsigntemplateglobalsigner = v
}

func (o EzsigntemplateglobalResponseCompound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsigntemplateglobalResponseCompound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pkiEzsigntemplateglobalID"] = o.PkiEzsigntemplateglobalID
	toSerialize["fkiEzsigntemplateglobaldocumentID"] = o.FkiEzsigntemplateglobaldocumentID
	toSerialize["fkiModuleID"] = o.FkiModuleID
	if !IsNil(o.SModuleNameX) {
		toSerialize["sModuleNameX"] = o.SModuleNameX
	}
	toSerialize["fkiLanguageID"] = o.FkiLanguageID
	toSerialize["sLanguageNameX"] = o.SLanguageNameX
	toSerialize["eEzsigntemplateglobalModule"] = o.EEzsigntemplateglobalModule
	toSerialize["eEzsigntemplateglobalSupplier"] = o.EEzsigntemplateglobalSupplier
	toSerialize["sEzsigntemplateglobalCode"] = o.SEzsigntemplateglobalCode
	toSerialize["sEzsigntemplateglobalDescription"] = o.SEzsigntemplateglobalDescription
	if !IsNil(o.ObjEzsigntemplateglobaldocument) {
		toSerialize["objEzsigntemplateglobaldocument"] = o.ObjEzsigntemplateglobaldocument
	}
	toSerialize["a_objEzsigntemplateglobalsigner"] = o.AObjEzsigntemplateglobalsigner
	return toSerialize, nil
}

func (o *EzsigntemplateglobalResponseCompound) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pkiEzsigntemplateglobalID",
		"fkiEzsigntemplateglobaldocumentID",
		"fkiModuleID",
		"fkiLanguageID",
		"sLanguageNameX",
		"eEzsigntemplateglobalModule",
		"eEzsigntemplateglobalSupplier",
		"sEzsigntemplateglobalCode",
		"sEzsigntemplateglobalDescription",
		"a_objEzsigntemplateglobalsigner",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsigntemplateglobalResponseCompound := _EzsigntemplateglobalResponseCompound{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsigntemplateglobalResponseCompound)

	if err != nil {
		return err
	}

	*o = EzsigntemplateglobalResponseCompound(varEzsigntemplateglobalResponseCompound)

	return err
}

type NullableEzsigntemplateglobalResponseCompound struct {
	value *EzsigntemplateglobalResponseCompound
	isSet bool
}

func (v NullableEzsigntemplateglobalResponseCompound) Get() *EzsigntemplateglobalResponseCompound {
	return v.value
}

func (v *NullableEzsigntemplateglobalResponseCompound) Set(val *EzsigntemplateglobalResponseCompound) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsigntemplateglobalResponseCompound) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsigntemplateglobalResponseCompound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsigntemplateglobalResponseCompound(val *EzsigntemplateglobalResponseCompound) *NullableEzsigntemplateglobalResponseCompound {
	return &NullableEzsigntemplateglobalResponseCompound{value: val, isSet: true}
}

func (v NullableEzsigntemplateglobalResponseCompound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsigntemplateglobalResponseCompound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


