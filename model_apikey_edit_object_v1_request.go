/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// checks if the ApikeyEditObjectV1Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApikeyEditObjectV1Request{}

// ApikeyEditObjectV1Request Request for PUT /1/object/apikey/{pkiApikeyID}
type ApikeyEditObjectV1Request struct {
	ObjApikey ApikeyRequestCompound `json:"objApikey"`
}

// NewApikeyEditObjectV1Request instantiates a new ApikeyEditObjectV1Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApikeyEditObjectV1Request(objApikey ApikeyRequestCompound) *ApikeyEditObjectV1Request {
	this := ApikeyEditObjectV1Request{}
	this.ObjApikey = objApikey
	return &this
}

// NewApikeyEditObjectV1RequestWithDefaults instantiates a new ApikeyEditObjectV1Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApikeyEditObjectV1RequestWithDefaults() *ApikeyEditObjectV1Request {
	this := ApikeyEditObjectV1Request{}
	return &this
}

// GetObjApikey returns the ObjApikey field value
func (o *ApikeyEditObjectV1Request) GetObjApikey() ApikeyRequestCompound {
	if o == nil {
		var ret ApikeyRequestCompound
		return ret
	}

	return o.ObjApikey
}

// GetObjApikeyOk returns a tuple with the ObjApikey field value
// and a boolean to check if the value has been set.
func (o *ApikeyEditObjectV1Request) GetObjApikeyOk() (*ApikeyRequestCompound, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjApikey, true
}

// SetObjApikey sets field value
func (o *ApikeyEditObjectV1Request) SetObjApikey(v ApikeyRequestCompound) {
	o.ObjApikey = v
}

func (o ApikeyEditObjectV1Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApikeyEditObjectV1Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["objApikey"] = o.ObjApikey
	return toSerialize, nil
}

type NullableApikeyEditObjectV1Request struct {
	value *ApikeyEditObjectV1Request
	isSet bool
}

func (v NullableApikeyEditObjectV1Request) Get() *ApikeyEditObjectV1Request {
	return v.value
}

func (v *NullableApikeyEditObjectV1Request) Set(val *ApikeyEditObjectV1Request) {
	v.value = val
	v.isSet = true
}

func (v NullableApikeyEditObjectV1Request) IsSet() bool {
	return v.isSet
}

func (v *NullableApikeyEditObjectV1Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApikeyEditObjectV1Request(val *ApikeyEditObjectV1Request) *NullableApikeyEditObjectV1Request {
	return &NullableApikeyEditObjectV1Request{value: val, isSet: true}
}

func (v NullableApikeyEditObjectV1Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApikeyEditObjectV1Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


