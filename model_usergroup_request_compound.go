/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// checks if the UsergroupRequestCompound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UsergroupRequestCompound{}

// UsergroupRequestCompound A Usergroup Object and children
type UsergroupRequestCompound struct {
	// The unique ID of the Usergroup
	PkiUsergroupID *int32 `json:"pkiUsergroupID,omitempty"`
	ObjUsergroupName MultilingualUsergroupName `json:"objUsergroupName"`
}

// NewUsergroupRequestCompound instantiates a new UsergroupRequestCompound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsergroupRequestCompound(objUsergroupName MultilingualUsergroupName) *UsergroupRequestCompound {
	this := UsergroupRequestCompound{}
	this.ObjUsergroupName = objUsergroupName
	return &this
}

// NewUsergroupRequestCompoundWithDefaults instantiates a new UsergroupRequestCompound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsergroupRequestCompoundWithDefaults() *UsergroupRequestCompound {
	this := UsergroupRequestCompound{}
	return &this
}

// GetPkiUsergroupID returns the PkiUsergroupID field value if set, zero value otherwise.
func (o *UsergroupRequestCompound) GetPkiUsergroupID() int32 {
	if o == nil || IsNil(o.PkiUsergroupID) {
		var ret int32
		return ret
	}
	return *o.PkiUsergroupID
}

// GetPkiUsergroupIDOk returns a tuple with the PkiUsergroupID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsergroupRequestCompound) GetPkiUsergroupIDOk() (*int32, bool) {
	if o == nil || IsNil(o.PkiUsergroupID) {
		return nil, false
	}
	return o.PkiUsergroupID, true
}

// HasPkiUsergroupID returns a boolean if a field has been set.
func (o *UsergroupRequestCompound) HasPkiUsergroupID() bool {
	if o != nil && !IsNil(o.PkiUsergroupID) {
		return true
	}

	return false
}

// SetPkiUsergroupID gets a reference to the given int32 and assigns it to the PkiUsergroupID field.
func (o *UsergroupRequestCompound) SetPkiUsergroupID(v int32) {
	o.PkiUsergroupID = &v
}

// GetObjUsergroupName returns the ObjUsergroupName field value
func (o *UsergroupRequestCompound) GetObjUsergroupName() MultilingualUsergroupName {
	if o == nil {
		var ret MultilingualUsergroupName
		return ret
	}

	return o.ObjUsergroupName
}

// GetObjUsergroupNameOk returns a tuple with the ObjUsergroupName field value
// and a boolean to check if the value has been set.
func (o *UsergroupRequestCompound) GetObjUsergroupNameOk() (*MultilingualUsergroupName, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjUsergroupName, true
}

// SetObjUsergroupName sets field value
func (o *UsergroupRequestCompound) SetObjUsergroupName(v MultilingualUsergroupName) {
	o.ObjUsergroupName = v
}

func (o UsergroupRequestCompound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UsergroupRequestCompound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PkiUsergroupID) {
		toSerialize["pkiUsergroupID"] = o.PkiUsergroupID
	}
	toSerialize["objUsergroupName"] = o.ObjUsergroupName
	return toSerialize, nil
}

type NullableUsergroupRequestCompound struct {
	value *UsergroupRequestCompound
	isSet bool
}

func (v NullableUsergroupRequestCompound) Get() *UsergroupRequestCompound {
	return v.value
}

func (v *NullableUsergroupRequestCompound) Set(val *UsergroupRequestCompound) {
	v.value = val
	v.isSet = true
}

func (v NullableUsergroupRequestCompound) IsSet() bool {
	return v.isSet
}

func (v *NullableUsergroupRequestCompound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsergroupRequestCompound(val *UsergroupRequestCompound) *NullableUsergroupRequestCompound {
	return &NullableUsergroupRequestCompound{value: val, isSet: true}
}

func (v NullableUsergroupRequestCompound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsergroupRequestCompound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


