/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.2
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UserEditColleaguesV2Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserEditColleaguesV2Request{}

// UserEditColleaguesV2Request Request for PUT /2/object/user/{pkiUserID}/editColleagues
type UserEditColleaguesV2Request struct {
	AObjColleague []ColleagueRequestCompoundV2 `json:"a_objColleague"`
}

type _UserEditColleaguesV2Request UserEditColleaguesV2Request

// NewUserEditColleaguesV2Request instantiates a new UserEditColleaguesV2Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserEditColleaguesV2Request(aObjColleague []ColleagueRequestCompoundV2) *UserEditColleaguesV2Request {
	this := UserEditColleaguesV2Request{}
	this.AObjColleague = aObjColleague
	return &this
}

// NewUserEditColleaguesV2RequestWithDefaults instantiates a new UserEditColleaguesV2Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserEditColleaguesV2RequestWithDefaults() *UserEditColleaguesV2Request {
	this := UserEditColleaguesV2Request{}
	return &this
}

// GetAObjColleague returns the AObjColleague field value
func (o *UserEditColleaguesV2Request) GetAObjColleague() []ColleagueRequestCompoundV2 {
	if o == nil {
		var ret []ColleagueRequestCompoundV2
		return ret
	}

	return o.AObjColleague
}

// GetAObjColleagueOk returns a tuple with the AObjColleague field value
// and a boolean to check if the value has been set.
func (o *UserEditColleaguesV2Request) GetAObjColleagueOk() ([]ColleagueRequestCompoundV2, bool) {
	if o == nil {
		return nil, false
	}
	return o.AObjColleague, true
}

// SetAObjColleague sets field value
func (o *UserEditColleaguesV2Request) SetAObjColleague(v []ColleagueRequestCompoundV2) {
	o.AObjColleague = v
}

func (o UserEditColleaguesV2Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserEditColleaguesV2Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["a_objColleague"] = o.AObjColleague
	return toSerialize, nil
}

func (o *UserEditColleaguesV2Request) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"a_objColleague",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUserEditColleaguesV2Request := _UserEditColleaguesV2Request{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUserEditColleaguesV2Request)

	if err != nil {
		return err
	}

	*o = UserEditColleaguesV2Request(varUserEditColleaguesV2Request)

	return err
}

type NullableUserEditColleaguesV2Request struct {
	value *UserEditColleaguesV2Request
	isSet bool
}

func (v NullableUserEditColleaguesV2Request) Get() *UserEditColleaguesV2Request {
	return v.value
}

func (v *NullableUserEditColleaguesV2Request) Set(val *UserEditColleaguesV2Request) {
	v.value = val
	v.isSet = true
}

func (v NullableUserEditColleaguesV2Request) IsSet() bool {
	return v.isSet
}

func (v *NullableUserEditColleaguesV2Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserEditColleaguesV2Request(val *UserEditColleaguesV2Request) *NullableUserEditColleaguesV2Request {
	return &NullableUserEditColleaguesV2Request{value: val, isSet: true}
}

func (v NullableUserEditColleaguesV2Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserEditColleaguesV2Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


