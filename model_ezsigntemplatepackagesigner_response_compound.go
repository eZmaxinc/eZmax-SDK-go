/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsigntemplatepackagesignerResponseCompound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsigntemplatepackagesignerResponseCompound{}

// EzsigntemplatepackagesignerResponseCompound A Ezsigntemplatepackagesigner Object
type EzsigntemplatepackagesignerResponseCompound struct {
	// The unique ID of the Ezsigntemplatepackagesigner
	PkiEzsigntemplatepackagesignerID int32 `json:"pkiEzsigntemplatepackagesignerID"`
	// The unique ID of the Ezsigntemplatepackage
	FkiEzsigntemplatepackageID int32 `json:"fkiEzsigntemplatepackageID"`
	// The description of the Ezsigntemplatepackagesigner
	SEzsigntemplatepackagesignerDescription string `json:"sEzsigntemplatepackagesignerDescription"`
}

type _EzsigntemplatepackagesignerResponseCompound EzsigntemplatepackagesignerResponseCompound

// NewEzsigntemplatepackagesignerResponseCompound instantiates a new EzsigntemplatepackagesignerResponseCompound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsigntemplatepackagesignerResponseCompound(pkiEzsigntemplatepackagesignerID int32, fkiEzsigntemplatepackageID int32, sEzsigntemplatepackagesignerDescription string) *EzsigntemplatepackagesignerResponseCompound {
	this := EzsigntemplatepackagesignerResponseCompound{}
	this.PkiEzsigntemplatepackagesignerID = pkiEzsigntemplatepackagesignerID
	this.FkiEzsigntemplatepackageID = fkiEzsigntemplatepackageID
	this.SEzsigntemplatepackagesignerDescription = sEzsigntemplatepackagesignerDescription
	return &this
}

// NewEzsigntemplatepackagesignerResponseCompoundWithDefaults instantiates a new EzsigntemplatepackagesignerResponseCompound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsigntemplatepackagesignerResponseCompoundWithDefaults() *EzsigntemplatepackagesignerResponseCompound {
	this := EzsigntemplatepackagesignerResponseCompound{}
	return &this
}

// GetPkiEzsigntemplatepackagesignerID returns the PkiEzsigntemplatepackagesignerID field value
func (o *EzsigntemplatepackagesignerResponseCompound) GetPkiEzsigntemplatepackagesignerID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PkiEzsigntemplatepackagesignerID
}

// GetPkiEzsigntemplatepackagesignerIDOk returns a tuple with the PkiEzsigntemplatepackagesignerID field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplatepackagesignerResponseCompound) GetPkiEzsigntemplatepackagesignerIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkiEzsigntemplatepackagesignerID, true
}

// SetPkiEzsigntemplatepackagesignerID sets field value
func (o *EzsigntemplatepackagesignerResponseCompound) SetPkiEzsigntemplatepackagesignerID(v int32) {
	o.PkiEzsigntemplatepackagesignerID = v
}

// GetFkiEzsigntemplatepackageID returns the FkiEzsigntemplatepackageID field value
func (o *EzsigntemplatepackagesignerResponseCompound) GetFkiEzsigntemplatepackageID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiEzsigntemplatepackageID
}

// GetFkiEzsigntemplatepackageIDOk returns a tuple with the FkiEzsigntemplatepackageID field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplatepackagesignerResponseCompound) GetFkiEzsigntemplatepackageIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiEzsigntemplatepackageID, true
}

// SetFkiEzsigntemplatepackageID sets field value
func (o *EzsigntemplatepackagesignerResponseCompound) SetFkiEzsigntemplatepackageID(v int32) {
	o.FkiEzsigntemplatepackageID = v
}

// GetSEzsigntemplatepackagesignerDescription returns the SEzsigntemplatepackagesignerDescription field value
func (o *EzsigntemplatepackagesignerResponseCompound) GetSEzsigntemplatepackagesignerDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SEzsigntemplatepackagesignerDescription
}

// GetSEzsigntemplatepackagesignerDescriptionOk returns a tuple with the SEzsigntemplatepackagesignerDescription field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplatepackagesignerResponseCompound) GetSEzsigntemplatepackagesignerDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SEzsigntemplatepackagesignerDescription, true
}

// SetSEzsigntemplatepackagesignerDescription sets field value
func (o *EzsigntemplatepackagesignerResponseCompound) SetSEzsigntemplatepackagesignerDescription(v string) {
	o.SEzsigntemplatepackagesignerDescription = v
}

func (o EzsigntemplatepackagesignerResponseCompound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsigntemplatepackagesignerResponseCompound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pkiEzsigntemplatepackagesignerID"] = o.PkiEzsigntemplatepackagesignerID
	toSerialize["fkiEzsigntemplatepackageID"] = o.FkiEzsigntemplatepackageID
	toSerialize["sEzsigntemplatepackagesignerDescription"] = o.SEzsigntemplatepackagesignerDescription
	return toSerialize, nil
}

func (o *EzsigntemplatepackagesignerResponseCompound) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pkiEzsigntemplatepackagesignerID",
		"fkiEzsigntemplatepackageID",
		"sEzsigntemplatepackagesignerDescription",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsigntemplatepackagesignerResponseCompound := _EzsigntemplatepackagesignerResponseCompound{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsigntemplatepackagesignerResponseCompound)

	if err != nil {
		return err
	}

	*o = EzsigntemplatepackagesignerResponseCompound(varEzsigntemplatepackagesignerResponseCompound)

	return err
}

type NullableEzsigntemplatepackagesignerResponseCompound struct {
	value *EzsigntemplatepackagesignerResponseCompound
	isSet bool
}

func (v NullableEzsigntemplatepackagesignerResponseCompound) Get() *EzsigntemplatepackagesignerResponseCompound {
	return v.value
}

func (v *NullableEzsigntemplatepackagesignerResponseCompound) Set(val *EzsigntemplatepackagesignerResponseCompound) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsigntemplatepackagesignerResponseCompound) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsigntemplatepackagesignerResponseCompound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsigntemplatepackagesignerResponseCompound(val *EzsigntemplatepackagesignerResponseCompound) *NullableEzsigntemplatepackagesignerResponseCompound {
	return &NullableEzsigntemplatepackagesignerResponseCompound{value: val, isSet: true}
}

func (v NullableEzsigntemplatepackagesignerResponseCompound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsigntemplatepackagesignerResponseCompound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


