/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsignannotationRequestCompound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsignannotationRequestCompound{}

// EzsignannotationRequestCompound A Ezsignannotation Object and children
type EzsignannotationRequestCompound struct {
	EzsignannotationRequest
	ObjTextstylestatic *TextstylestaticRequestCompound `json:"objTextstylestatic,omitempty"`
}

type _EzsignannotationRequestCompound EzsignannotationRequestCompound

// NewEzsignannotationRequestCompound instantiates a new EzsignannotationRequestCompound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsignannotationRequestCompound(fkiEzsigndocumentID int32, eEzsignannotationType FieldEEzsignannotationType, iEzsignannotationX int32, iEzsignannotationY int32, iEzsignpagePagenumber int32) *EzsignannotationRequestCompound {
	this := EzsignannotationRequestCompound{}
	this.FkiEzsigndocumentID = fkiEzsigndocumentID
	this.EEzsignannotationType = eEzsignannotationType
	this.IEzsignannotationX = iEzsignannotationX
	this.IEzsignannotationY = iEzsignannotationY
	this.IEzsignpagePagenumber = iEzsignpagePagenumber
	return &this
}

// NewEzsignannotationRequestCompoundWithDefaults instantiates a new EzsignannotationRequestCompound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsignannotationRequestCompoundWithDefaults() *EzsignannotationRequestCompound {
	this := EzsignannotationRequestCompound{}
	return &this
}

// GetObjTextstylestatic returns the ObjTextstylestatic field value if set, zero value otherwise.
func (o *EzsignannotationRequestCompound) GetObjTextstylestatic() TextstylestaticRequestCompound {
	if o == nil || IsNil(o.ObjTextstylestatic) {
		var ret TextstylestaticRequestCompound
		return ret
	}
	return *o.ObjTextstylestatic
}

// GetObjTextstylestaticOk returns a tuple with the ObjTextstylestatic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignannotationRequestCompound) GetObjTextstylestaticOk() (*TextstylestaticRequestCompound, bool) {
	if o == nil || IsNil(o.ObjTextstylestatic) {
		return nil, false
	}
	return o.ObjTextstylestatic, true
}

// HasObjTextstylestatic returns a boolean if a field has been set.
func (o *EzsignannotationRequestCompound) HasObjTextstylestatic() bool {
	if o != nil && !IsNil(o.ObjTextstylestatic) {
		return true
	}

	return false
}

// SetObjTextstylestatic gets a reference to the given TextstylestaticRequestCompound and assigns it to the ObjTextstylestatic field.
func (o *EzsignannotationRequestCompound) SetObjTextstylestatic(v TextstylestaticRequestCompound) {
	o.ObjTextstylestatic = &v
}

func (o EzsignannotationRequestCompound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsignannotationRequestCompound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ObjTextstylestatic) {
		toSerialize["objTextstylestatic"] = o.ObjTextstylestatic
	}
	return toSerialize, nil
}

func (o *EzsignannotationRequestCompound) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"fkiEzsigndocumentID",
		"eEzsignannotationType",
		"iEzsignannotationX",
		"iEzsignannotationY",
		"iEzsignpagePagenumber",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsignannotationRequestCompound := _EzsignannotationRequestCompound{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsignannotationRequestCompound)

	if err != nil {
		return err
	}

	*o = EzsignannotationRequestCompound(varEzsignannotationRequestCompound)

	return err
}

type NullableEzsignannotationRequestCompound struct {
	value *EzsignannotationRequestCompound
	isSet bool
}

func (v NullableEzsignannotationRequestCompound) Get() *EzsignannotationRequestCompound {
	return v.value
}

func (v *NullableEzsignannotationRequestCompound) Set(val *EzsignannotationRequestCompound) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsignannotationRequestCompound) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsignannotationRequestCompound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsignannotationRequestCompound(val *EzsignannotationRequestCompound) *NullableEzsignannotationRequestCompound {
	return &NullableEzsignannotationRequestCompound{value: val, isSet: true}
}

func (v NullableEzsignannotationRequestCompound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsignannotationRequestCompound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


