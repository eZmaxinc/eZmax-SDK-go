/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsignfoldertypeCreateObjectV3ResponseMPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsignfoldertypeCreateObjectV3ResponseMPayload{}

// EzsignfoldertypeCreateObjectV3ResponseMPayload Payload for POST /3/object/ezsignfoldertype
type EzsignfoldertypeCreateObjectV3ResponseMPayload struct {
	// An array of unique IDs representing the object that were requested to be created.  They are returned in the same order as the array containing the objects to be created that was sent in the request.
	APkiEzsignfoldertypeID []int32 `json:"a_pkiEzsignfoldertypeID"`
}

type _EzsignfoldertypeCreateObjectV3ResponseMPayload EzsignfoldertypeCreateObjectV3ResponseMPayload

// NewEzsignfoldertypeCreateObjectV3ResponseMPayload instantiates a new EzsignfoldertypeCreateObjectV3ResponseMPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsignfoldertypeCreateObjectV3ResponseMPayload(aPkiEzsignfoldertypeID []int32) *EzsignfoldertypeCreateObjectV3ResponseMPayload {
	this := EzsignfoldertypeCreateObjectV3ResponseMPayload{}
	this.APkiEzsignfoldertypeID = aPkiEzsignfoldertypeID
	return &this
}

// NewEzsignfoldertypeCreateObjectV3ResponseMPayloadWithDefaults instantiates a new EzsignfoldertypeCreateObjectV3ResponseMPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsignfoldertypeCreateObjectV3ResponseMPayloadWithDefaults() *EzsignfoldertypeCreateObjectV3ResponseMPayload {
	this := EzsignfoldertypeCreateObjectV3ResponseMPayload{}
	return &this
}

// GetAPkiEzsignfoldertypeID returns the APkiEzsignfoldertypeID field value
func (o *EzsignfoldertypeCreateObjectV3ResponseMPayload) GetAPkiEzsignfoldertypeID() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.APkiEzsignfoldertypeID
}

// GetAPkiEzsignfoldertypeIDOk returns a tuple with the APkiEzsignfoldertypeID field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeCreateObjectV3ResponseMPayload) GetAPkiEzsignfoldertypeIDOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.APkiEzsignfoldertypeID, true
}

// SetAPkiEzsignfoldertypeID sets field value
func (o *EzsignfoldertypeCreateObjectV3ResponseMPayload) SetAPkiEzsignfoldertypeID(v []int32) {
	o.APkiEzsignfoldertypeID = v
}

func (o EzsignfoldertypeCreateObjectV3ResponseMPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsignfoldertypeCreateObjectV3ResponseMPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["a_pkiEzsignfoldertypeID"] = o.APkiEzsignfoldertypeID
	return toSerialize, nil
}

func (o *EzsignfoldertypeCreateObjectV3ResponseMPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"a_pkiEzsignfoldertypeID",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsignfoldertypeCreateObjectV3ResponseMPayload := _EzsignfoldertypeCreateObjectV3ResponseMPayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsignfoldertypeCreateObjectV3ResponseMPayload)

	if err != nil {
		return err
	}

	*o = EzsignfoldertypeCreateObjectV3ResponseMPayload(varEzsignfoldertypeCreateObjectV3ResponseMPayload)

	return err
}

type NullableEzsignfoldertypeCreateObjectV3ResponseMPayload struct {
	value *EzsignfoldertypeCreateObjectV3ResponseMPayload
	isSet bool
}

func (v NullableEzsignfoldertypeCreateObjectV3ResponseMPayload) Get() *EzsignfoldertypeCreateObjectV3ResponseMPayload {
	return v.value
}

func (v *NullableEzsignfoldertypeCreateObjectV3ResponseMPayload) Set(val *EzsignfoldertypeCreateObjectV3ResponseMPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsignfoldertypeCreateObjectV3ResponseMPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsignfoldertypeCreateObjectV3ResponseMPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsignfoldertypeCreateObjectV3ResponseMPayload(val *EzsignfoldertypeCreateObjectV3ResponseMPayload) *NullableEzsignfoldertypeCreateObjectV3ResponseMPayload {
	return &NullableEzsignfoldertypeCreateObjectV3ResponseMPayload{value: val, isSet: true}
}

func (v NullableEzsignfoldertypeCreateObjectV3ResponseMPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsignfoldertypeCreateObjectV3ResponseMPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


