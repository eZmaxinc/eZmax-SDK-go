/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsigndocumentCreateObjectV1ResponseMPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsigndocumentCreateObjectV1ResponseMPayload{}

// EzsigndocumentCreateObjectV1ResponseMPayload Payload for POST /1/object/ezsigndocument
type EzsigndocumentCreateObjectV1ResponseMPayload struct {
	// An array of unique IDs representing the object that were requested to be created.  They are returned in the same order as the array containing the objects to be created that was sent in the request.
	APkiEzsigndocumentID []int32 `json:"a_pkiEzsigndocumentID"`
}

type _EzsigndocumentCreateObjectV1ResponseMPayload EzsigndocumentCreateObjectV1ResponseMPayload

// NewEzsigndocumentCreateObjectV1ResponseMPayload instantiates a new EzsigndocumentCreateObjectV1ResponseMPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsigndocumentCreateObjectV1ResponseMPayload(aPkiEzsigndocumentID []int32) *EzsigndocumentCreateObjectV1ResponseMPayload {
	this := EzsigndocumentCreateObjectV1ResponseMPayload{}
	this.APkiEzsigndocumentID = aPkiEzsigndocumentID
	return &this
}

// NewEzsigndocumentCreateObjectV1ResponseMPayloadWithDefaults instantiates a new EzsigndocumentCreateObjectV1ResponseMPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsigndocumentCreateObjectV1ResponseMPayloadWithDefaults() *EzsigndocumentCreateObjectV1ResponseMPayload {
	this := EzsigndocumentCreateObjectV1ResponseMPayload{}
	return &this
}

// GetAPkiEzsigndocumentID returns the APkiEzsigndocumentID field value
func (o *EzsigndocumentCreateObjectV1ResponseMPayload) GetAPkiEzsigndocumentID() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.APkiEzsigndocumentID
}

// GetAPkiEzsigndocumentIDOk returns a tuple with the APkiEzsigndocumentID field value
// and a boolean to check if the value has been set.
func (o *EzsigndocumentCreateObjectV1ResponseMPayload) GetAPkiEzsigndocumentIDOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.APkiEzsigndocumentID, true
}

// SetAPkiEzsigndocumentID sets field value
func (o *EzsigndocumentCreateObjectV1ResponseMPayload) SetAPkiEzsigndocumentID(v []int32) {
	o.APkiEzsigndocumentID = v
}

func (o EzsigndocumentCreateObjectV1ResponseMPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsigndocumentCreateObjectV1ResponseMPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["a_pkiEzsigndocumentID"] = o.APkiEzsigndocumentID
	return toSerialize, nil
}

func (o *EzsigndocumentCreateObjectV1ResponseMPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"a_pkiEzsigndocumentID",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsigndocumentCreateObjectV1ResponseMPayload := _EzsigndocumentCreateObjectV1ResponseMPayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsigndocumentCreateObjectV1ResponseMPayload)

	if err != nil {
		return err
	}

	*o = EzsigndocumentCreateObjectV1ResponseMPayload(varEzsigndocumentCreateObjectV1ResponseMPayload)

	return err
}

type NullableEzsigndocumentCreateObjectV1ResponseMPayload struct {
	value *EzsigndocumentCreateObjectV1ResponseMPayload
	isSet bool
}

func (v NullableEzsigndocumentCreateObjectV1ResponseMPayload) Get() *EzsigndocumentCreateObjectV1ResponseMPayload {
	return v.value
}

func (v *NullableEzsigndocumentCreateObjectV1ResponseMPayload) Set(val *EzsigndocumentCreateObjectV1ResponseMPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsigndocumentCreateObjectV1ResponseMPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsigndocumentCreateObjectV1ResponseMPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsigndocumentCreateObjectV1ResponseMPayload(val *EzsigndocumentCreateObjectV1ResponseMPayload) *NullableEzsigndocumentCreateObjectV1ResponseMPayload {
	return &NullableEzsigndocumentCreateObjectV1ResponseMPayload{value: val, isSet: true}
}

func (v NullableEzsigndocumentCreateObjectV1ResponseMPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsigndocumentCreateObjectV1ResponseMPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


