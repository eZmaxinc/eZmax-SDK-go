/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// checks if the UsergroupResponseCompound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UsergroupResponseCompound{}

// UsergroupResponseCompound A Usergroup Object
type UsergroupResponseCompound struct {
	// The unique ID of the Usergroup
	PkiUsergroupID int32 `json:"pkiUsergroupID"`
	ObjUsergroupName MultilingualUsergroupName `json:"objUsergroupName"`
}

// NewUsergroupResponseCompound instantiates a new UsergroupResponseCompound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsergroupResponseCompound(pkiUsergroupID int32, objUsergroupName MultilingualUsergroupName) *UsergroupResponseCompound {
	this := UsergroupResponseCompound{}
	this.PkiUsergroupID = pkiUsergroupID
	this.ObjUsergroupName = objUsergroupName
	return &this
}

// NewUsergroupResponseCompoundWithDefaults instantiates a new UsergroupResponseCompound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsergroupResponseCompoundWithDefaults() *UsergroupResponseCompound {
	this := UsergroupResponseCompound{}
	return &this
}

// GetPkiUsergroupID returns the PkiUsergroupID field value
func (o *UsergroupResponseCompound) GetPkiUsergroupID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PkiUsergroupID
}

// GetPkiUsergroupIDOk returns a tuple with the PkiUsergroupID field value
// and a boolean to check if the value has been set.
func (o *UsergroupResponseCompound) GetPkiUsergroupIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkiUsergroupID, true
}

// SetPkiUsergroupID sets field value
func (o *UsergroupResponseCompound) SetPkiUsergroupID(v int32) {
	o.PkiUsergroupID = v
}

// GetObjUsergroupName returns the ObjUsergroupName field value
func (o *UsergroupResponseCompound) GetObjUsergroupName() MultilingualUsergroupName {
	if o == nil {
		var ret MultilingualUsergroupName
		return ret
	}

	return o.ObjUsergroupName
}

// GetObjUsergroupNameOk returns a tuple with the ObjUsergroupName field value
// and a boolean to check if the value has been set.
func (o *UsergroupResponseCompound) GetObjUsergroupNameOk() (*MultilingualUsergroupName, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjUsergroupName, true
}

// SetObjUsergroupName sets field value
func (o *UsergroupResponseCompound) SetObjUsergroupName(v MultilingualUsergroupName) {
	o.ObjUsergroupName = v
}

func (o UsergroupResponseCompound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UsergroupResponseCompound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pkiUsergroupID"] = o.PkiUsergroupID
	toSerialize["objUsergroupName"] = o.ObjUsergroupName
	return toSerialize, nil
}

type NullableUsergroupResponseCompound struct {
	value *UsergroupResponseCompound
	isSet bool
}

func (v NullableUsergroupResponseCompound) Get() *UsergroupResponseCompound {
	return v.value
}

func (v *NullableUsergroupResponseCompound) Set(val *UsergroupResponseCompound) {
	v.value = val
	v.isSet = true
}

func (v NullableUsergroupResponseCompound) IsSet() bool {
	return v.isSet
}

func (v *NullableUsergroupResponseCompound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsergroupResponseCompound(val *UsergroupResponseCompound) *NullableUsergroupResponseCompound {
	return &NullableUsergroupResponseCompound{value: val, isSet: true}
}

func (v NullableUsergroupResponseCompound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsergroupResponseCompound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


