/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModulesectionResponseCompound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModulesectionResponseCompound{}

// ModulesectionResponseCompound A Modulesection Object
type ModulesectionResponseCompound struct {
	ModulesectionResponse
	AObjPermission []PermissionResponseCompound `json:"a_objPermission,omitempty"`
}

type _ModulesectionResponseCompound ModulesectionResponseCompound

// NewModulesectionResponseCompound instantiates a new ModulesectionResponseCompound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModulesectionResponseCompound(pkiModulesectionID int32, fkiModuleID int32, sModulesectionInternalname string, sModulesectionNameX string) *ModulesectionResponseCompound {
	this := ModulesectionResponseCompound{}
	this.PkiModulesectionID = pkiModulesectionID
	this.FkiModuleID = fkiModuleID
	this.SModulesectionInternalname = sModulesectionInternalname
	this.SModulesectionNameX = sModulesectionNameX
	return &this
}

// NewModulesectionResponseCompoundWithDefaults instantiates a new ModulesectionResponseCompound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModulesectionResponseCompoundWithDefaults() *ModulesectionResponseCompound {
	this := ModulesectionResponseCompound{}
	return &this
}

// GetAObjPermission returns the AObjPermission field value if set, zero value otherwise.
func (o *ModulesectionResponseCompound) GetAObjPermission() []PermissionResponseCompound {
	if o == nil || IsNil(o.AObjPermission) {
		var ret []PermissionResponseCompound
		return ret
	}
	return o.AObjPermission
}

// GetAObjPermissionOk returns a tuple with the AObjPermission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModulesectionResponseCompound) GetAObjPermissionOk() ([]PermissionResponseCompound, bool) {
	if o == nil || IsNil(o.AObjPermission) {
		return nil, false
	}
	return o.AObjPermission, true
}

// HasAObjPermission returns a boolean if a field has been set.
func (o *ModulesectionResponseCompound) HasAObjPermission() bool {
	if o != nil && !IsNil(o.AObjPermission) {
		return true
	}

	return false
}

// SetAObjPermission gets a reference to the given []PermissionResponseCompound and assigns it to the AObjPermission field.
func (o *ModulesectionResponseCompound) SetAObjPermission(v []PermissionResponseCompound) {
	o.AObjPermission = v
}

func (o ModulesectionResponseCompound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModulesectionResponseCompound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AObjPermission) {
		toSerialize["a_objPermission"] = o.AObjPermission
	}
	return toSerialize, nil
}

func (o *ModulesectionResponseCompound) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pkiModulesectionID",
		"fkiModuleID",
		"sModulesectionInternalname",
		"sModulesectionNameX",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModulesectionResponseCompound := _ModulesectionResponseCompound{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModulesectionResponseCompound)

	if err != nil {
		return err
	}

	*o = ModulesectionResponseCompound(varModulesectionResponseCompound)

	return err
}

type NullableModulesectionResponseCompound struct {
	value *ModulesectionResponseCompound
	isSet bool
}

func (v NullableModulesectionResponseCompound) Get() *ModulesectionResponseCompound {
	return v.value
}

func (v *NullableModulesectionResponseCompound) Set(val *ModulesectionResponseCompound) {
	v.value = val
	v.isSet = true
}

func (v NullableModulesectionResponseCompound) IsSet() bool {
	return v.isSet
}

func (v *NullableModulesectionResponseCompound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModulesectionResponseCompound(val *ModulesectionResponseCompound) *NullableModulesectionResponseCompound {
	return &NullableModulesectionResponseCompound{value: val, isSet: true}
}

func (v NullableModulesectionResponseCompound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModulesectionResponseCompound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


