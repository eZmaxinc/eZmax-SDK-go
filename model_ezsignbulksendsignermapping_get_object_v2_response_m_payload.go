/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.2
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsignbulksendsignermappingGetObjectV2ResponseMPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsignbulksendsignermappingGetObjectV2ResponseMPayload{}

// EzsignbulksendsignermappingGetObjectV2ResponseMPayload Payload for GET /2/object/ezsignbulksendsignermapping/{pkiEzsignbulksendsignermappingID}
type EzsignbulksendsignermappingGetObjectV2ResponseMPayload struct {
	ObjEzsignbulksendsignermapping EzsignbulksendsignermappingResponseCompound `json:"objEzsignbulksendsignermapping"`
}

type _EzsignbulksendsignermappingGetObjectV2ResponseMPayload EzsignbulksendsignermappingGetObjectV2ResponseMPayload

// NewEzsignbulksendsignermappingGetObjectV2ResponseMPayload instantiates a new EzsignbulksendsignermappingGetObjectV2ResponseMPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsignbulksendsignermappingGetObjectV2ResponseMPayload(objEzsignbulksendsignermapping EzsignbulksendsignermappingResponseCompound) *EzsignbulksendsignermappingGetObjectV2ResponseMPayload {
	this := EzsignbulksendsignermappingGetObjectV2ResponseMPayload{}
	this.ObjEzsignbulksendsignermapping = objEzsignbulksendsignermapping
	return &this
}

// NewEzsignbulksendsignermappingGetObjectV2ResponseMPayloadWithDefaults instantiates a new EzsignbulksendsignermappingGetObjectV2ResponseMPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsignbulksendsignermappingGetObjectV2ResponseMPayloadWithDefaults() *EzsignbulksendsignermappingGetObjectV2ResponseMPayload {
	this := EzsignbulksendsignermappingGetObjectV2ResponseMPayload{}
	return &this
}

// GetObjEzsignbulksendsignermapping returns the ObjEzsignbulksendsignermapping field value
func (o *EzsignbulksendsignermappingGetObjectV2ResponseMPayload) GetObjEzsignbulksendsignermapping() EzsignbulksendsignermappingResponseCompound {
	if o == nil {
		var ret EzsignbulksendsignermappingResponseCompound
		return ret
	}

	return o.ObjEzsignbulksendsignermapping
}

// GetObjEzsignbulksendsignermappingOk returns a tuple with the ObjEzsignbulksendsignermapping field value
// and a boolean to check if the value has been set.
func (o *EzsignbulksendsignermappingGetObjectV2ResponseMPayload) GetObjEzsignbulksendsignermappingOk() (*EzsignbulksendsignermappingResponseCompound, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjEzsignbulksendsignermapping, true
}

// SetObjEzsignbulksendsignermapping sets field value
func (o *EzsignbulksendsignermappingGetObjectV2ResponseMPayload) SetObjEzsignbulksendsignermapping(v EzsignbulksendsignermappingResponseCompound) {
	o.ObjEzsignbulksendsignermapping = v
}

func (o EzsignbulksendsignermappingGetObjectV2ResponseMPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsignbulksendsignermappingGetObjectV2ResponseMPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["objEzsignbulksendsignermapping"] = o.ObjEzsignbulksendsignermapping
	return toSerialize, nil
}

func (o *EzsignbulksendsignermappingGetObjectV2ResponseMPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"objEzsignbulksendsignermapping",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsignbulksendsignermappingGetObjectV2ResponseMPayload := _EzsignbulksendsignermappingGetObjectV2ResponseMPayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsignbulksendsignermappingGetObjectV2ResponseMPayload)

	if err != nil {
		return err
	}

	*o = EzsignbulksendsignermappingGetObjectV2ResponseMPayload(varEzsignbulksendsignermappingGetObjectV2ResponseMPayload)

	return err
}

type NullableEzsignbulksendsignermappingGetObjectV2ResponseMPayload struct {
	value *EzsignbulksendsignermappingGetObjectV2ResponseMPayload
	isSet bool
}

func (v NullableEzsignbulksendsignermappingGetObjectV2ResponseMPayload) Get() *EzsignbulksendsignermappingGetObjectV2ResponseMPayload {
	return v.value
}

func (v *NullableEzsignbulksendsignermappingGetObjectV2ResponseMPayload) Set(val *EzsignbulksendsignermappingGetObjectV2ResponseMPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsignbulksendsignermappingGetObjectV2ResponseMPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsignbulksendsignermappingGetObjectV2ResponseMPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsignbulksendsignermappingGetObjectV2ResponseMPayload(val *EzsignbulksendsignermappingGetObjectV2ResponseMPayload) *NullableEzsignbulksendsignermappingGetObjectV2ResponseMPayload {
	return &NullableEzsignbulksendsignermappingGetObjectV2ResponseMPayload{value: val, isSet: true}
}

func (v NullableEzsignbulksendsignermappingGetObjectV2ResponseMPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsignbulksendsignermappingGetObjectV2ResponseMPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


