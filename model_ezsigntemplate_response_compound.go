/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// checks if the EzsigntemplateResponseCompound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsigntemplateResponseCompound{}

// EzsigntemplateResponseCompound A Ezsigntemplate Object
type EzsigntemplateResponseCompound struct {
	// The unique ID of the Ezsigntemplate
	PkiEzsigntemplateID int32 `json:"pkiEzsigntemplateID"`
	// The unique ID of the Ezsigntemplatedocument
	FkiEzsigntemplatedocumentID *int32 `json:"fkiEzsigntemplatedocumentID,omitempty"`
	// The unique ID of the Ezsignfoldertype.
	FkiEzsignfoldertypeID int32 `json:"fkiEzsignfoldertypeID"`
	// The unique ID of the Language.  Valid values:  |Value|Description| |-|-| |1|French| |2|English|
	FkiLanguageID int32 `json:"fkiLanguageID"`
	// The Name of the Language in the language of the requester
	SLanguageNameX string `json:"sLanguageNameX"`
	// The description of the Ezsigntemplate
	SEzsigntemplateDescription string `json:"sEzsigntemplateDescription"`
	// Whether the Ezsigntemplate can be accessed by admin users only (eUserType=Normal)
	BEzsigntemplateAdminonly bool `json:"bEzsigntemplateAdminonly"`
	// The name of the Ezsignfoldertype in the language of the requester
	SEzsignfoldertypeNameX string `json:"sEzsignfoldertypeNameX"`
	ObjAudit CommonAudit `json:"objAudit"`
	ObjEzsigntemplatedocument *EzsigntemplatedocumentResponse `json:"objEzsigntemplatedocument,omitempty"`
	AObjEzsigntemplatesigner []EzsigntemplatesignerResponseCompound `json:"a_objEzsigntemplatesigner"`
}

// NewEzsigntemplateResponseCompound instantiates a new EzsigntemplateResponseCompound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsigntemplateResponseCompound(pkiEzsigntemplateID int32, fkiEzsignfoldertypeID int32, fkiLanguageID int32, sLanguageNameX string, sEzsigntemplateDescription string, bEzsigntemplateAdminonly bool, sEzsignfoldertypeNameX string, objAudit CommonAudit, aObjEzsigntemplatesigner []EzsigntemplatesignerResponseCompound) *EzsigntemplateResponseCompound {
	this := EzsigntemplateResponseCompound{}
	this.PkiEzsigntemplateID = pkiEzsigntemplateID
	this.FkiEzsignfoldertypeID = fkiEzsignfoldertypeID
	this.FkiLanguageID = fkiLanguageID
	this.SLanguageNameX = sLanguageNameX
	this.SEzsigntemplateDescription = sEzsigntemplateDescription
	this.BEzsigntemplateAdminonly = bEzsigntemplateAdminonly
	this.SEzsignfoldertypeNameX = sEzsignfoldertypeNameX
	this.ObjAudit = objAudit
	this.AObjEzsigntemplatesigner = aObjEzsigntemplatesigner
	return &this
}

// NewEzsigntemplateResponseCompoundWithDefaults instantiates a new EzsigntemplateResponseCompound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsigntemplateResponseCompoundWithDefaults() *EzsigntemplateResponseCompound {
	this := EzsigntemplateResponseCompound{}
	return &this
}

// GetPkiEzsigntemplateID returns the PkiEzsigntemplateID field value
func (o *EzsigntemplateResponseCompound) GetPkiEzsigntemplateID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PkiEzsigntemplateID
}

// GetPkiEzsigntemplateIDOk returns a tuple with the PkiEzsigntemplateID field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplateResponseCompound) GetPkiEzsigntemplateIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkiEzsigntemplateID, true
}

// SetPkiEzsigntemplateID sets field value
func (o *EzsigntemplateResponseCompound) SetPkiEzsigntemplateID(v int32) {
	o.PkiEzsigntemplateID = v
}

// GetFkiEzsigntemplatedocumentID returns the FkiEzsigntemplatedocumentID field value if set, zero value otherwise.
func (o *EzsigntemplateResponseCompound) GetFkiEzsigntemplatedocumentID() int32 {
	if o == nil || IsNil(o.FkiEzsigntemplatedocumentID) {
		var ret int32
		return ret
	}
	return *o.FkiEzsigntemplatedocumentID
}

// GetFkiEzsigntemplatedocumentIDOk returns a tuple with the FkiEzsigntemplatedocumentID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplateResponseCompound) GetFkiEzsigntemplatedocumentIDOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiEzsigntemplatedocumentID) {
		return nil, false
	}
	return o.FkiEzsigntemplatedocumentID, true
}

// HasFkiEzsigntemplatedocumentID returns a boolean if a field has been set.
func (o *EzsigntemplateResponseCompound) HasFkiEzsigntemplatedocumentID() bool {
	if o != nil && !IsNil(o.FkiEzsigntemplatedocumentID) {
		return true
	}

	return false
}

// SetFkiEzsigntemplatedocumentID gets a reference to the given int32 and assigns it to the FkiEzsigntemplatedocumentID field.
func (o *EzsigntemplateResponseCompound) SetFkiEzsigntemplatedocumentID(v int32) {
	o.FkiEzsigntemplatedocumentID = &v
}

// GetFkiEzsignfoldertypeID returns the FkiEzsignfoldertypeID field value
func (o *EzsigntemplateResponseCompound) GetFkiEzsignfoldertypeID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiEzsignfoldertypeID
}

// GetFkiEzsignfoldertypeIDOk returns a tuple with the FkiEzsignfoldertypeID field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplateResponseCompound) GetFkiEzsignfoldertypeIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiEzsignfoldertypeID, true
}

// SetFkiEzsignfoldertypeID sets field value
func (o *EzsigntemplateResponseCompound) SetFkiEzsignfoldertypeID(v int32) {
	o.FkiEzsignfoldertypeID = v
}

// GetFkiLanguageID returns the FkiLanguageID field value
func (o *EzsigntemplateResponseCompound) GetFkiLanguageID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiLanguageID
}

// GetFkiLanguageIDOk returns a tuple with the FkiLanguageID field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplateResponseCompound) GetFkiLanguageIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiLanguageID, true
}

// SetFkiLanguageID sets field value
func (o *EzsigntemplateResponseCompound) SetFkiLanguageID(v int32) {
	o.FkiLanguageID = v
}

// GetSLanguageNameX returns the SLanguageNameX field value
func (o *EzsigntemplateResponseCompound) GetSLanguageNameX() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SLanguageNameX
}

// GetSLanguageNameXOk returns a tuple with the SLanguageNameX field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplateResponseCompound) GetSLanguageNameXOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SLanguageNameX, true
}

// SetSLanguageNameX sets field value
func (o *EzsigntemplateResponseCompound) SetSLanguageNameX(v string) {
	o.SLanguageNameX = v
}

// GetSEzsigntemplateDescription returns the SEzsigntemplateDescription field value
func (o *EzsigntemplateResponseCompound) GetSEzsigntemplateDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SEzsigntemplateDescription
}

// GetSEzsigntemplateDescriptionOk returns a tuple with the SEzsigntemplateDescription field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplateResponseCompound) GetSEzsigntemplateDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SEzsigntemplateDescription, true
}

// SetSEzsigntemplateDescription sets field value
func (o *EzsigntemplateResponseCompound) SetSEzsigntemplateDescription(v string) {
	o.SEzsigntemplateDescription = v
}

// GetBEzsigntemplateAdminonly returns the BEzsigntemplateAdminonly field value
func (o *EzsigntemplateResponseCompound) GetBEzsigntemplateAdminonly() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BEzsigntemplateAdminonly
}

// GetBEzsigntemplateAdminonlyOk returns a tuple with the BEzsigntemplateAdminonly field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplateResponseCompound) GetBEzsigntemplateAdminonlyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BEzsigntemplateAdminonly, true
}

// SetBEzsigntemplateAdminonly sets field value
func (o *EzsigntemplateResponseCompound) SetBEzsigntemplateAdminonly(v bool) {
	o.BEzsigntemplateAdminonly = v
}

// GetSEzsignfoldertypeNameX returns the SEzsignfoldertypeNameX field value
func (o *EzsigntemplateResponseCompound) GetSEzsignfoldertypeNameX() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SEzsignfoldertypeNameX
}

// GetSEzsignfoldertypeNameXOk returns a tuple with the SEzsignfoldertypeNameX field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplateResponseCompound) GetSEzsignfoldertypeNameXOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SEzsignfoldertypeNameX, true
}

// SetSEzsignfoldertypeNameX sets field value
func (o *EzsigntemplateResponseCompound) SetSEzsignfoldertypeNameX(v string) {
	o.SEzsignfoldertypeNameX = v
}

// GetObjAudit returns the ObjAudit field value
func (o *EzsigntemplateResponseCompound) GetObjAudit() CommonAudit {
	if o == nil {
		var ret CommonAudit
		return ret
	}

	return o.ObjAudit
}

// GetObjAuditOk returns a tuple with the ObjAudit field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplateResponseCompound) GetObjAuditOk() (*CommonAudit, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjAudit, true
}

// SetObjAudit sets field value
func (o *EzsigntemplateResponseCompound) SetObjAudit(v CommonAudit) {
	o.ObjAudit = v
}

// GetObjEzsigntemplatedocument returns the ObjEzsigntemplatedocument field value if set, zero value otherwise.
func (o *EzsigntemplateResponseCompound) GetObjEzsigntemplatedocument() EzsigntemplatedocumentResponse {
	if o == nil || IsNil(o.ObjEzsigntemplatedocument) {
		var ret EzsigntemplatedocumentResponse
		return ret
	}
	return *o.ObjEzsigntemplatedocument
}

// GetObjEzsigntemplatedocumentOk returns a tuple with the ObjEzsigntemplatedocument field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplateResponseCompound) GetObjEzsigntemplatedocumentOk() (*EzsigntemplatedocumentResponse, bool) {
	if o == nil || IsNil(o.ObjEzsigntemplatedocument) {
		return nil, false
	}
	return o.ObjEzsigntemplatedocument, true
}

// HasObjEzsigntemplatedocument returns a boolean if a field has been set.
func (o *EzsigntemplateResponseCompound) HasObjEzsigntemplatedocument() bool {
	if o != nil && !IsNil(o.ObjEzsigntemplatedocument) {
		return true
	}

	return false
}

// SetObjEzsigntemplatedocument gets a reference to the given EzsigntemplatedocumentResponse and assigns it to the ObjEzsigntemplatedocument field.
func (o *EzsigntemplateResponseCompound) SetObjEzsigntemplatedocument(v EzsigntemplatedocumentResponse) {
	o.ObjEzsigntemplatedocument = &v
}

// GetAObjEzsigntemplatesigner returns the AObjEzsigntemplatesigner field value
func (o *EzsigntemplateResponseCompound) GetAObjEzsigntemplatesigner() []EzsigntemplatesignerResponseCompound {
	if o == nil {
		var ret []EzsigntemplatesignerResponseCompound
		return ret
	}

	return o.AObjEzsigntemplatesigner
}

// GetAObjEzsigntemplatesignerOk returns a tuple with the AObjEzsigntemplatesigner field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplateResponseCompound) GetAObjEzsigntemplatesignerOk() ([]EzsigntemplatesignerResponseCompound, bool) {
	if o == nil {
		return nil, false
	}
	return o.AObjEzsigntemplatesigner, true
}

// SetAObjEzsigntemplatesigner sets field value
func (o *EzsigntemplateResponseCompound) SetAObjEzsigntemplatesigner(v []EzsigntemplatesignerResponseCompound) {
	o.AObjEzsigntemplatesigner = v
}

func (o EzsigntemplateResponseCompound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsigntemplateResponseCompound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pkiEzsigntemplateID"] = o.PkiEzsigntemplateID
	if !IsNil(o.FkiEzsigntemplatedocumentID) {
		toSerialize["fkiEzsigntemplatedocumentID"] = o.FkiEzsigntemplatedocumentID
	}
	toSerialize["fkiEzsignfoldertypeID"] = o.FkiEzsignfoldertypeID
	toSerialize["fkiLanguageID"] = o.FkiLanguageID
	toSerialize["sLanguageNameX"] = o.SLanguageNameX
	toSerialize["sEzsigntemplateDescription"] = o.SEzsigntemplateDescription
	toSerialize["bEzsigntemplateAdminonly"] = o.BEzsigntemplateAdminonly
	toSerialize["sEzsignfoldertypeNameX"] = o.SEzsignfoldertypeNameX
	toSerialize["objAudit"] = o.ObjAudit
	if !IsNil(o.ObjEzsigntemplatedocument) {
		toSerialize["objEzsigntemplatedocument"] = o.ObjEzsigntemplatedocument
	}
	toSerialize["a_objEzsigntemplatesigner"] = o.AObjEzsigntemplatesigner
	return toSerialize, nil
}

type NullableEzsigntemplateResponseCompound struct {
	value *EzsigntemplateResponseCompound
	isSet bool
}

func (v NullableEzsigntemplateResponseCompound) Get() *EzsigntemplateResponseCompound {
	return v.value
}

func (v *NullableEzsigntemplateResponseCompound) Set(val *EzsigntemplateResponseCompound) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsigntemplateResponseCompound) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsigntemplateResponseCompound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsigntemplateResponseCompound(val *EzsigntemplateResponseCompound) *NullableEzsigntemplateResponseCompound {
	return &NullableEzsigntemplateResponseCompound{value: val, isSet: true}
}

func (v NullableEzsigntemplateResponseCompound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsigntemplateResponseCompound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


