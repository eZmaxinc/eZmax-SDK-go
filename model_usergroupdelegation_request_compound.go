/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UsergroupdelegationRequestCompound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UsergroupdelegationRequestCompound{}

// UsergroupdelegationRequestCompound A Usergroupdelegation Object and children
type UsergroupdelegationRequestCompound struct {
	// The unique ID of the Usergroupdelegation
	PkiUsergroupdelegationID *int32 `json:"pkiUsergroupdelegationID,omitempty"`
	// The unique ID of the Usergroup
	FkiUsergroupID int32 `json:"fkiUsergroupID"`
	// The unique ID of the User
	FkiUserID int32 `json:"fkiUserID"`
}

type _UsergroupdelegationRequestCompound UsergroupdelegationRequestCompound

// NewUsergroupdelegationRequestCompound instantiates a new UsergroupdelegationRequestCompound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsergroupdelegationRequestCompound(fkiUsergroupID int32, fkiUserID int32) *UsergroupdelegationRequestCompound {
	this := UsergroupdelegationRequestCompound{}
	this.FkiUsergroupID = fkiUsergroupID
	this.FkiUserID = fkiUserID
	return &this
}

// NewUsergroupdelegationRequestCompoundWithDefaults instantiates a new UsergroupdelegationRequestCompound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsergroupdelegationRequestCompoundWithDefaults() *UsergroupdelegationRequestCompound {
	this := UsergroupdelegationRequestCompound{}
	return &this
}

// GetPkiUsergroupdelegationID returns the PkiUsergroupdelegationID field value if set, zero value otherwise.
func (o *UsergroupdelegationRequestCompound) GetPkiUsergroupdelegationID() int32 {
	if o == nil || IsNil(o.PkiUsergroupdelegationID) {
		var ret int32
		return ret
	}
	return *o.PkiUsergroupdelegationID
}

// GetPkiUsergroupdelegationIDOk returns a tuple with the PkiUsergroupdelegationID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsergroupdelegationRequestCompound) GetPkiUsergroupdelegationIDOk() (*int32, bool) {
	if o == nil || IsNil(o.PkiUsergroupdelegationID) {
		return nil, false
	}
	return o.PkiUsergroupdelegationID, true
}

// HasPkiUsergroupdelegationID returns a boolean if a field has been set.
func (o *UsergroupdelegationRequestCompound) HasPkiUsergroupdelegationID() bool {
	if o != nil && !IsNil(o.PkiUsergroupdelegationID) {
		return true
	}

	return false
}

// SetPkiUsergroupdelegationID gets a reference to the given int32 and assigns it to the PkiUsergroupdelegationID field.
func (o *UsergroupdelegationRequestCompound) SetPkiUsergroupdelegationID(v int32) {
	o.PkiUsergroupdelegationID = &v
}

// GetFkiUsergroupID returns the FkiUsergroupID field value
func (o *UsergroupdelegationRequestCompound) GetFkiUsergroupID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiUsergroupID
}

// GetFkiUsergroupIDOk returns a tuple with the FkiUsergroupID field value
// and a boolean to check if the value has been set.
func (o *UsergroupdelegationRequestCompound) GetFkiUsergroupIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiUsergroupID, true
}

// SetFkiUsergroupID sets field value
func (o *UsergroupdelegationRequestCompound) SetFkiUsergroupID(v int32) {
	o.FkiUsergroupID = v
}

// GetFkiUserID returns the FkiUserID field value
func (o *UsergroupdelegationRequestCompound) GetFkiUserID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiUserID
}

// GetFkiUserIDOk returns a tuple with the FkiUserID field value
// and a boolean to check if the value has been set.
func (o *UsergroupdelegationRequestCompound) GetFkiUserIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiUserID, true
}

// SetFkiUserID sets field value
func (o *UsergroupdelegationRequestCompound) SetFkiUserID(v int32) {
	o.FkiUserID = v
}

func (o UsergroupdelegationRequestCompound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UsergroupdelegationRequestCompound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PkiUsergroupdelegationID) {
		toSerialize["pkiUsergroupdelegationID"] = o.PkiUsergroupdelegationID
	}
	toSerialize["fkiUsergroupID"] = o.FkiUsergroupID
	toSerialize["fkiUserID"] = o.FkiUserID
	return toSerialize, nil
}

func (o *UsergroupdelegationRequestCompound) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"fkiUsergroupID",
		"fkiUserID",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUsergroupdelegationRequestCompound := _UsergroupdelegationRequestCompound{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUsergroupdelegationRequestCompound)

	if err != nil {
		return err
	}

	*o = UsergroupdelegationRequestCompound(varUsergroupdelegationRequestCompound)

	return err
}

type NullableUsergroupdelegationRequestCompound struct {
	value *UsergroupdelegationRequestCompound
	isSet bool
}

func (v NullableUsergroupdelegationRequestCompound) Get() *UsergroupdelegationRequestCompound {
	return v.value
}

func (v *NullableUsergroupdelegationRequestCompound) Set(val *UsergroupdelegationRequestCompound) {
	v.value = val
	v.isSet = true
}

func (v NullableUsergroupdelegationRequestCompound) IsSet() bool {
	return v.isSet
}

func (v *NullableUsergroupdelegationRequestCompound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsergroupdelegationRequestCompound(val *UsergroupdelegationRequestCompound) *NullableUsergroupdelegationRequestCompound {
	return &NullableUsergroupdelegationRequestCompound{value: val, isSet: true}
}

func (v NullableUsergroupdelegationRequestCompound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsergroupdelegationRequestCompound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


