/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SupplyRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SupplyRequest{}

// SupplyRequest A Supply Object
type SupplyRequest struct {
	// The unique ID of the Supply
	PkiSupplyID *int32 `json:"pkiSupplyID,omitempty"`
	// The unique ID of the Glaccount
	FkiGlaccountID *int32 `json:"fkiGlaccountID,omitempty"`
	// The unique ID of the Glaccountcontainer
	FkiGlaccountcontainerID *int32 `json:"fkiGlaccountcontainerID,omitempty"`
	// The unique ID of the Variableexpense
	FkiVariableexpenseID int32 `json:"fkiVariableexpenseID"`
	// The code of the Supply
	SSupplyCode string `json:"sSupplyCode" validate:"regexp=^.{0,5}$"`
	ObjSupplyDescription MultilingualSupplyDescription `json:"objSupplyDescription"`
	// The unit price of the Supply
	DSupplyUnitprice string `json:"dSupplyUnitprice" validate:"regexp=^-{0,1}[\\\\d]{1,9}?\\\\.[\\\\d]{2}$"`
	// Whether the supply is active or not
	BSupplyIsactive bool `json:"bSupplyIsactive"`
	// Whether if the price is variable
	BSupplyVariableprice bool `json:"bSupplyVariableprice"`
}

type _SupplyRequest SupplyRequest

// NewSupplyRequest instantiates a new SupplyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSupplyRequest(fkiVariableexpenseID int32, sSupplyCode string, objSupplyDescription MultilingualSupplyDescription, dSupplyUnitprice string, bSupplyIsactive bool, bSupplyVariableprice bool) *SupplyRequest {
	this := SupplyRequest{}
	this.FkiVariableexpenseID = fkiVariableexpenseID
	this.SSupplyCode = sSupplyCode
	this.ObjSupplyDescription = objSupplyDescription
	this.DSupplyUnitprice = dSupplyUnitprice
	this.BSupplyIsactive = bSupplyIsactive
	this.BSupplyVariableprice = bSupplyVariableprice
	return &this
}

// NewSupplyRequestWithDefaults instantiates a new SupplyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSupplyRequestWithDefaults() *SupplyRequest {
	this := SupplyRequest{}
	return &this
}

// GetPkiSupplyID returns the PkiSupplyID field value if set, zero value otherwise.
func (o *SupplyRequest) GetPkiSupplyID() int32 {
	if o == nil || IsNil(o.PkiSupplyID) {
		var ret int32
		return ret
	}
	return *o.PkiSupplyID
}

// GetPkiSupplyIDOk returns a tuple with the PkiSupplyID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupplyRequest) GetPkiSupplyIDOk() (*int32, bool) {
	if o == nil || IsNil(o.PkiSupplyID) {
		return nil, false
	}
	return o.PkiSupplyID, true
}

// HasPkiSupplyID returns a boolean if a field has been set.
func (o *SupplyRequest) HasPkiSupplyID() bool {
	if o != nil && !IsNil(o.PkiSupplyID) {
		return true
	}

	return false
}

// SetPkiSupplyID gets a reference to the given int32 and assigns it to the PkiSupplyID field.
func (o *SupplyRequest) SetPkiSupplyID(v int32) {
	o.PkiSupplyID = &v
}

// GetFkiGlaccountID returns the FkiGlaccountID field value if set, zero value otherwise.
func (o *SupplyRequest) GetFkiGlaccountID() int32 {
	if o == nil || IsNil(o.FkiGlaccountID) {
		var ret int32
		return ret
	}
	return *o.FkiGlaccountID
}

// GetFkiGlaccountIDOk returns a tuple with the FkiGlaccountID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupplyRequest) GetFkiGlaccountIDOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiGlaccountID) {
		return nil, false
	}
	return o.FkiGlaccountID, true
}

// HasFkiGlaccountID returns a boolean if a field has been set.
func (o *SupplyRequest) HasFkiGlaccountID() bool {
	if o != nil && !IsNil(o.FkiGlaccountID) {
		return true
	}

	return false
}

// SetFkiGlaccountID gets a reference to the given int32 and assigns it to the FkiGlaccountID field.
func (o *SupplyRequest) SetFkiGlaccountID(v int32) {
	o.FkiGlaccountID = &v
}

// GetFkiGlaccountcontainerID returns the FkiGlaccountcontainerID field value if set, zero value otherwise.
func (o *SupplyRequest) GetFkiGlaccountcontainerID() int32 {
	if o == nil || IsNil(o.FkiGlaccountcontainerID) {
		var ret int32
		return ret
	}
	return *o.FkiGlaccountcontainerID
}

// GetFkiGlaccountcontainerIDOk returns a tuple with the FkiGlaccountcontainerID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupplyRequest) GetFkiGlaccountcontainerIDOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiGlaccountcontainerID) {
		return nil, false
	}
	return o.FkiGlaccountcontainerID, true
}

// HasFkiGlaccountcontainerID returns a boolean if a field has been set.
func (o *SupplyRequest) HasFkiGlaccountcontainerID() bool {
	if o != nil && !IsNil(o.FkiGlaccountcontainerID) {
		return true
	}

	return false
}

// SetFkiGlaccountcontainerID gets a reference to the given int32 and assigns it to the FkiGlaccountcontainerID field.
func (o *SupplyRequest) SetFkiGlaccountcontainerID(v int32) {
	o.FkiGlaccountcontainerID = &v
}

// GetFkiVariableexpenseID returns the FkiVariableexpenseID field value
func (o *SupplyRequest) GetFkiVariableexpenseID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiVariableexpenseID
}

// GetFkiVariableexpenseIDOk returns a tuple with the FkiVariableexpenseID field value
// and a boolean to check if the value has been set.
func (o *SupplyRequest) GetFkiVariableexpenseIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiVariableexpenseID, true
}

// SetFkiVariableexpenseID sets field value
func (o *SupplyRequest) SetFkiVariableexpenseID(v int32) {
	o.FkiVariableexpenseID = v
}

// GetSSupplyCode returns the SSupplyCode field value
func (o *SupplyRequest) GetSSupplyCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SSupplyCode
}

// GetSSupplyCodeOk returns a tuple with the SSupplyCode field value
// and a boolean to check if the value has been set.
func (o *SupplyRequest) GetSSupplyCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SSupplyCode, true
}

// SetSSupplyCode sets field value
func (o *SupplyRequest) SetSSupplyCode(v string) {
	o.SSupplyCode = v
}

// GetObjSupplyDescription returns the ObjSupplyDescription field value
func (o *SupplyRequest) GetObjSupplyDescription() MultilingualSupplyDescription {
	if o == nil {
		var ret MultilingualSupplyDescription
		return ret
	}

	return o.ObjSupplyDescription
}

// GetObjSupplyDescriptionOk returns a tuple with the ObjSupplyDescription field value
// and a boolean to check if the value has been set.
func (o *SupplyRequest) GetObjSupplyDescriptionOk() (*MultilingualSupplyDescription, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjSupplyDescription, true
}

// SetObjSupplyDescription sets field value
func (o *SupplyRequest) SetObjSupplyDescription(v MultilingualSupplyDescription) {
	o.ObjSupplyDescription = v
}

// GetDSupplyUnitprice returns the DSupplyUnitprice field value
func (o *SupplyRequest) GetDSupplyUnitprice() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DSupplyUnitprice
}

// GetDSupplyUnitpriceOk returns a tuple with the DSupplyUnitprice field value
// and a boolean to check if the value has been set.
func (o *SupplyRequest) GetDSupplyUnitpriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DSupplyUnitprice, true
}

// SetDSupplyUnitprice sets field value
func (o *SupplyRequest) SetDSupplyUnitprice(v string) {
	o.DSupplyUnitprice = v
}

// GetBSupplyIsactive returns the BSupplyIsactive field value
func (o *SupplyRequest) GetBSupplyIsactive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BSupplyIsactive
}

// GetBSupplyIsactiveOk returns a tuple with the BSupplyIsactive field value
// and a boolean to check if the value has been set.
func (o *SupplyRequest) GetBSupplyIsactiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BSupplyIsactive, true
}

// SetBSupplyIsactive sets field value
func (o *SupplyRequest) SetBSupplyIsactive(v bool) {
	o.BSupplyIsactive = v
}

// GetBSupplyVariableprice returns the BSupplyVariableprice field value
func (o *SupplyRequest) GetBSupplyVariableprice() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BSupplyVariableprice
}

// GetBSupplyVariablepriceOk returns a tuple with the BSupplyVariableprice field value
// and a boolean to check if the value has been set.
func (o *SupplyRequest) GetBSupplyVariablepriceOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BSupplyVariableprice, true
}

// SetBSupplyVariableprice sets field value
func (o *SupplyRequest) SetBSupplyVariableprice(v bool) {
	o.BSupplyVariableprice = v
}

func (o SupplyRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SupplyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PkiSupplyID) {
		toSerialize["pkiSupplyID"] = o.PkiSupplyID
	}
	if !IsNil(o.FkiGlaccountID) {
		toSerialize["fkiGlaccountID"] = o.FkiGlaccountID
	}
	if !IsNil(o.FkiGlaccountcontainerID) {
		toSerialize["fkiGlaccountcontainerID"] = o.FkiGlaccountcontainerID
	}
	toSerialize["fkiVariableexpenseID"] = o.FkiVariableexpenseID
	toSerialize["sSupplyCode"] = o.SSupplyCode
	toSerialize["objSupplyDescription"] = o.ObjSupplyDescription
	toSerialize["dSupplyUnitprice"] = o.DSupplyUnitprice
	toSerialize["bSupplyIsactive"] = o.BSupplyIsactive
	toSerialize["bSupplyVariableprice"] = o.BSupplyVariableprice
	return toSerialize, nil
}

func (o *SupplyRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"fkiVariableexpenseID",
		"sSupplyCode",
		"objSupplyDescription",
		"dSupplyUnitprice",
		"bSupplyIsactive",
		"bSupplyVariableprice",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSupplyRequest := _SupplyRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSupplyRequest)

	if err != nil {
		return err
	}

	*o = SupplyRequest(varSupplyRequest)

	return err
}

type NullableSupplyRequest struct {
	value *SupplyRequest
	isSet bool
}

func (v NullableSupplyRequest) Get() *SupplyRequest {
	return v.value
}

func (v *NullableSupplyRequest) Set(val *SupplyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSupplyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSupplyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSupplyRequest(val *SupplyRequest) *NullableSupplyRequest {
	return &NullableSupplyRequest{value: val, isSet: true}
}

func (v NullableSupplyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSupplyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


