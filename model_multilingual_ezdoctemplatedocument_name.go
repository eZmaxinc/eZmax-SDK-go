/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// checks if the MultilingualEzdoctemplatedocumentName type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultilingualEzdoctemplatedocumentName{}

// MultilingualEzdoctemplatedocumentName The name1 of the Ezdoctemplatedocument
type MultilingualEzdoctemplatedocumentName struct {
	// The name1 of the Ezdoctemplatedocument
	SEzdoctemplatedocumentName1 *string `json:"sEzdoctemplatedocumentName1,omitempty" validate:"regexp=^.{0,50}$"`
	// The name2 of the Ezdoctemplatedocument
	SEzdoctemplatedocumentName2 *string `json:"sEzdoctemplatedocumentName2,omitempty" validate:"regexp=^.{0,50}$"`
}

// NewMultilingualEzdoctemplatedocumentName instantiates a new MultilingualEzdoctemplatedocumentName object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultilingualEzdoctemplatedocumentName() *MultilingualEzdoctemplatedocumentName {
	this := MultilingualEzdoctemplatedocumentName{}
	return &this
}

// NewMultilingualEzdoctemplatedocumentNameWithDefaults instantiates a new MultilingualEzdoctemplatedocumentName object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultilingualEzdoctemplatedocumentNameWithDefaults() *MultilingualEzdoctemplatedocumentName {
	this := MultilingualEzdoctemplatedocumentName{}
	return &this
}

// GetSEzdoctemplatedocumentName1 returns the SEzdoctemplatedocumentName1 field value if set, zero value otherwise.
func (o *MultilingualEzdoctemplatedocumentName) GetSEzdoctemplatedocumentName1() string {
	if o == nil || IsNil(o.SEzdoctemplatedocumentName1) {
		var ret string
		return ret
	}
	return *o.SEzdoctemplatedocumentName1
}

// GetSEzdoctemplatedocumentName1Ok returns a tuple with the SEzdoctemplatedocumentName1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultilingualEzdoctemplatedocumentName) GetSEzdoctemplatedocumentName1Ok() (*string, bool) {
	if o == nil || IsNil(o.SEzdoctemplatedocumentName1) {
		return nil, false
	}
	return o.SEzdoctemplatedocumentName1, true
}

// HasSEzdoctemplatedocumentName1 returns a boolean if a field has been set.
func (o *MultilingualEzdoctemplatedocumentName) HasSEzdoctemplatedocumentName1() bool {
	if o != nil && !IsNil(o.SEzdoctemplatedocumentName1) {
		return true
	}

	return false
}

// SetSEzdoctemplatedocumentName1 gets a reference to the given string and assigns it to the SEzdoctemplatedocumentName1 field.
func (o *MultilingualEzdoctemplatedocumentName) SetSEzdoctemplatedocumentName1(v string) {
	o.SEzdoctemplatedocumentName1 = &v
}

// GetSEzdoctemplatedocumentName2 returns the SEzdoctemplatedocumentName2 field value if set, zero value otherwise.
func (o *MultilingualEzdoctemplatedocumentName) GetSEzdoctemplatedocumentName2() string {
	if o == nil || IsNil(o.SEzdoctemplatedocumentName2) {
		var ret string
		return ret
	}
	return *o.SEzdoctemplatedocumentName2
}

// GetSEzdoctemplatedocumentName2Ok returns a tuple with the SEzdoctemplatedocumentName2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultilingualEzdoctemplatedocumentName) GetSEzdoctemplatedocumentName2Ok() (*string, bool) {
	if o == nil || IsNil(o.SEzdoctemplatedocumentName2) {
		return nil, false
	}
	return o.SEzdoctemplatedocumentName2, true
}

// HasSEzdoctemplatedocumentName2 returns a boolean if a field has been set.
func (o *MultilingualEzdoctemplatedocumentName) HasSEzdoctemplatedocumentName2() bool {
	if o != nil && !IsNil(o.SEzdoctemplatedocumentName2) {
		return true
	}

	return false
}

// SetSEzdoctemplatedocumentName2 gets a reference to the given string and assigns it to the SEzdoctemplatedocumentName2 field.
func (o *MultilingualEzdoctemplatedocumentName) SetSEzdoctemplatedocumentName2(v string) {
	o.SEzdoctemplatedocumentName2 = &v
}

func (o MultilingualEzdoctemplatedocumentName) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultilingualEzdoctemplatedocumentName) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SEzdoctemplatedocumentName1) {
		toSerialize["sEzdoctemplatedocumentName1"] = o.SEzdoctemplatedocumentName1
	}
	if !IsNil(o.SEzdoctemplatedocumentName2) {
		toSerialize["sEzdoctemplatedocumentName2"] = o.SEzdoctemplatedocumentName2
	}
	return toSerialize, nil
}

type NullableMultilingualEzdoctemplatedocumentName struct {
	value *MultilingualEzdoctemplatedocumentName
	isSet bool
}

func (v NullableMultilingualEzdoctemplatedocumentName) Get() *MultilingualEzdoctemplatedocumentName {
	return v.value
}

func (v *NullableMultilingualEzdoctemplatedocumentName) Set(val *MultilingualEzdoctemplatedocumentName) {
	v.value = val
	v.isSet = true
}

func (v NullableMultilingualEzdoctemplatedocumentName) IsSet() bool {
	return v.isSet
}

func (v *NullableMultilingualEzdoctemplatedocumentName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultilingualEzdoctemplatedocumentName(val *MultilingualEzdoctemplatedocumentName) *NullableMultilingualEzdoctemplatedocumentName {
	return &NullableMultilingualEzdoctemplatedocumentName{value: val, isSet: true}
}

func (v NullableMultilingualEzdoctemplatedocumentName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultilingualEzdoctemplatedocumentName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


