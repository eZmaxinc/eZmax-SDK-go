/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsigntemplatepublicRequestCompound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsigntemplatepublicRequestCompound{}

// EzsigntemplatepublicRequestCompound A Ezsigntemplatepublic Object and children
type EzsigntemplatepublicRequestCompound struct {
	EzsigntemplatepublicRequest
}

type _EzsigntemplatepublicRequestCompound EzsigntemplatepublicRequestCompound

// NewEzsigntemplatepublicRequestCompound instantiates a new EzsigntemplatepublicRequestCompound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsigntemplatepublicRequestCompound(fkiEzsignfoldertypeID int32, fkiUserlogintypeID int32, sEzsigntemplatepublicDescription string, bEzsigntemplatepublicIsactive bool, tEzsigntemplatepublicNote string, eEzsigntemplatepublicLimittype FieldEEzsigntemplatepublicLimittype, iEzsigntemplatepublicLimit int32) *EzsigntemplatepublicRequestCompound {
	this := EzsigntemplatepublicRequestCompound{}
	this.FkiEzsignfoldertypeID = fkiEzsignfoldertypeID
	this.FkiUserlogintypeID = fkiUserlogintypeID
	this.SEzsigntemplatepublicDescription = sEzsigntemplatepublicDescription
	this.BEzsigntemplatepublicIsactive = bEzsigntemplatepublicIsactive
	this.TEzsigntemplatepublicNote = tEzsigntemplatepublicNote
	this.EEzsigntemplatepublicLimittype = eEzsigntemplatepublicLimittype
	this.IEzsigntemplatepublicLimit = iEzsigntemplatepublicLimit
	return &this
}

// NewEzsigntemplatepublicRequestCompoundWithDefaults instantiates a new EzsigntemplatepublicRequestCompound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsigntemplatepublicRequestCompoundWithDefaults() *EzsigntemplatepublicRequestCompound {
	this := EzsigntemplatepublicRequestCompound{}
	return &this
}

func (o EzsigntemplatepublicRequestCompound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsigntemplatepublicRequestCompound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	return toSerialize, nil
}

func (o *EzsigntemplatepublicRequestCompound) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"fkiEzsignfoldertypeID",
		"fkiUserlogintypeID",
		"sEzsigntemplatepublicDescription",
		"bEzsigntemplatepublicIsactive",
		"tEzsigntemplatepublicNote",
		"eEzsigntemplatepublicLimittype",
		"iEzsigntemplatepublicLimit",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsigntemplatepublicRequestCompound := _EzsigntemplatepublicRequestCompound{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsigntemplatepublicRequestCompound)

	if err != nil {
		return err
	}

	*o = EzsigntemplatepublicRequestCompound(varEzsigntemplatepublicRequestCompound)

	return err
}

type NullableEzsigntemplatepublicRequestCompound struct {
	value *EzsigntemplatepublicRequestCompound
	isSet bool
}

func (v NullableEzsigntemplatepublicRequestCompound) Get() *EzsigntemplatepublicRequestCompound {
	return v.value
}

func (v *NullableEzsigntemplatepublicRequestCompound) Set(val *EzsigntemplatepublicRequestCompound) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsigntemplatepublicRequestCompound) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsigntemplatepublicRequestCompound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsigntemplatepublicRequestCompound(val *EzsigntemplatepublicRequestCompound) *NullableEzsigntemplatepublicRequestCompound {
	return &NullableEzsigntemplatepublicRequestCompound{value: val, isSet: true}
}

func (v NullableEzsigntemplatepublicRequestCompound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsigntemplatepublicRequestCompound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


