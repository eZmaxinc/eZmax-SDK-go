/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// checks if the CommonResponseErrorTooManyRequests type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonResponseErrorTooManyRequests{}

// CommonResponseErrorTooManyRequests Generic Error Message
type CommonResponseErrorTooManyRequests struct {
	// The message giving details about the error
	SErrorMessage string `json:"sErrorMessage"`
	EErrorCode FieldEErrorCode `json:"eErrorCode"`
}

// NewCommonResponseErrorTooManyRequests instantiates a new CommonResponseErrorTooManyRequests object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonResponseErrorTooManyRequests(sErrorMessage string, eErrorCode FieldEErrorCode) *CommonResponseErrorTooManyRequests {
	this := CommonResponseErrorTooManyRequests{}
	this.SErrorMessage = sErrorMessage
	this.EErrorCode = eErrorCode
	return &this
}

// NewCommonResponseErrorTooManyRequestsWithDefaults instantiates a new CommonResponseErrorTooManyRequests object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonResponseErrorTooManyRequestsWithDefaults() *CommonResponseErrorTooManyRequests {
	this := CommonResponseErrorTooManyRequests{}
	return &this
}

// GetSErrorMessage returns the SErrorMessage field value
func (o *CommonResponseErrorTooManyRequests) GetSErrorMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SErrorMessage
}

// GetSErrorMessageOk returns a tuple with the SErrorMessage field value
// and a boolean to check if the value has been set.
func (o *CommonResponseErrorTooManyRequests) GetSErrorMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SErrorMessage, true
}

// SetSErrorMessage sets field value
func (o *CommonResponseErrorTooManyRequests) SetSErrorMessage(v string) {
	o.SErrorMessage = v
}

// GetEErrorCode returns the EErrorCode field value
func (o *CommonResponseErrorTooManyRequests) GetEErrorCode() FieldEErrorCode {
	if o == nil {
		var ret FieldEErrorCode
		return ret
	}

	return o.EErrorCode
}

// GetEErrorCodeOk returns a tuple with the EErrorCode field value
// and a boolean to check if the value has been set.
func (o *CommonResponseErrorTooManyRequests) GetEErrorCodeOk() (*FieldEErrorCode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EErrorCode, true
}

// SetEErrorCode sets field value
func (o *CommonResponseErrorTooManyRequests) SetEErrorCode(v FieldEErrorCode) {
	o.EErrorCode = v
}

func (o CommonResponseErrorTooManyRequests) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonResponseErrorTooManyRequests) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sErrorMessage"] = o.SErrorMessage
	toSerialize["eErrorCode"] = o.EErrorCode
	return toSerialize, nil
}

type NullableCommonResponseErrorTooManyRequests struct {
	value *CommonResponseErrorTooManyRequests
	isSet bool
}

func (v NullableCommonResponseErrorTooManyRequests) Get() *CommonResponseErrorTooManyRequests {
	return v.value
}

func (v *NullableCommonResponseErrorTooManyRequests) Set(val *CommonResponseErrorTooManyRequests) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonResponseErrorTooManyRequests) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonResponseErrorTooManyRequests) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonResponseErrorTooManyRequests(val *CommonResponseErrorTooManyRequests) *NullableCommonResponseErrorTooManyRequests {
	return &NullableCommonResponseErrorTooManyRequests{value: val, isSet: true}
}

func (v NullableCommonResponseErrorTooManyRequests) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonResponseErrorTooManyRequests) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


