/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsigntemplateglobalGetObjectV2ResponseMPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsigntemplateglobalGetObjectV2ResponseMPayload{}

// EzsigntemplateglobalGetObjectV2ResponseMPayload Payload for GET /2/object/ezsigntemplateglobal/{pkiEzsigntemplateglobalID}
type EzsigntemplateglobalGetObjectV2ResponseMPayload struct {
	ObjEzsigntemplateglobal EzsigntemplateglobalResponseCompound `json:"objEzsigntemplateglobal"`
}

type _EzsigntemplateglobalGetObjectV2ResponseMPayload EzsigntemplateglobalGetObjectV2ResponseMPayload

// NewEzsigntemplateglobalGetObjectV2ResponseMPayload instantiates a new EzsigntemplateglobalGetObjectV2ResponseMPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsigntemplateglobalGetObjectV2ResponseMPayload(objEzsigntemplateglobal EzsigntemplateglobalResponseCompound) *EzsigntemplateglobalGetObjectV2ResponseMPayload {
	this := EzsigntemplateglobalGetObjectV2ResponseMPayload{}
	this.ObjEzsigntemplateglobal = objEzsigntemplateglobal
	return &this
}

// NewEzsigntemplateglobalGetObjectV2ResponseMPayloadWithDefaults instantiates a new EzsigntemplateglobalGetObjectV2ResponseMPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsigntemplateglobalGetObjectV2ResponseMPayloadWithDefaults() *EzsigntemplateglobalGetObjectV2ResponseMPayload {
	this := EzsigntemplateglobalGetObjectV2ResponseMPayload{}
	return &this
}

// GetObjEzsigntemplateglobal returns the ObjEzsigntemplateglobal field value
func (o *EzsigntemplateglobalGetObjectV2ResponseMPayload) GetObjEzsigntemplateglobal() EzsigntemplateglobalResponseCompound {
	if o == nil {
		var ret EzsigntemplateglobalResponseCompound
		return ret
	}

	return o.ObjEzsigntemplateglobal
}

// GetObjEzsigntemplateglobalOk returns a tuple with the ObjEzsigntemplateglobal field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplateglobalGetObjectV2ResponseMPayload) GetObjEzsigntemplateglobalOk() (*EzsigntemplateglobalResponseCompound, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjEzsigntemplateglobal, true
}

// SetObjEzsigntemplateglobal sets field value
func (o *EzsigntemplateglobalGetObjectV2ResponseMPayload) SetObjEzsigntemplateglobal(v EzsigntemplateglobalResponseCompound) {
	o.ObjEzsigntemplateglobal = v
}

func (o EzsigntemplateglobalGetObjectV2ResponseMPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsigntemplateglobalGetObjectV2ResponseMPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["objEzsigntemplateglobal"] = o.ObjEzsigntemplateglobal
	return toSerialize, nil
}

func (o *EzsigntemplateglobalGetObjectV2ResponseMPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"objEzsigntemplateglobal",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsigntemplateglobalGetObjectV2ResponseMPayload := _EzsigntemplateglobalGetObjectV2ResponseMPayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsigntemplateglobalGetObjectV2ResponseMPayload)

	if err != nil {
		return err
	}

	*o = EzsigntemplateglobalGetObjectV2ResponseMPayload(varEzsigntemplateglobalGetObjectV2ResponseMPayload)

	return err
}

type NullableEzsigntemplateglobalGetObjectV2ResponseMPayload struct {
	value *EzsigntemplateglobalGetObjectV2ResponseMPayload
	isSet bool
}

func (v NullableEzsigntemplateglobalGetObjectV2ResponseMPayload) Get() *EzsigntemplateglobalGetObjectV2ResponseMPayload {
	return v.value
}

func (v *NullableEzsigntemplateglobalGetObjectV2ResponseMPayload) Set(val *EzsigntemplateglobalGetObjectV2ResponseMPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsigntemplateglobalGetObjectV2ResponseMPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsigntemplateglobalGetObjectV2ResponseMPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsigntemplateglobalGetObjectV2ResponseMPayload(val *EzsigntemplateglobalGetObjectV2ResponseMPayload) *NullableEzsigntemplateglobalGetObjectV2ResponseMPayload {
	return &NullableEzsigntemplateglobalGetObjectV2ResponseMPayload{value: val, isSet: true}
}

func (v NullableEzsigntemplateglobalGetObjectV2ResponseMPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsigntemplateglobalGetObjectV2ResponseMPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


