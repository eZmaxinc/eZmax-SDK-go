/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsigntemplateglobalsignerResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsigntemplateglobalsignerResponse{}

// EzsigntemplateglobalsignerResponse A Ezsigntemplateglobalsigner Object
type EzsigntemplateglobalsignerResponse struct {
	// The unique ID of the Ezsigntemplateglobalsigner
	PkiEzsigntemplateglobalsignerID int32 `json:"pkiEzsigntemplateglobalsignerID"`
	// The unique ID of the Ezsigntemplateglobal
	FkiEzsigntemplateglobalID int32 `json:"fkiEzsigntemplateglobalID"`
	// The description of the Ezsigntemplateglobalsigner
	SEzsigntemplateglobalsignerDescription string `json:"sEzsigntemplateglobalsignerDescription"`
}

type _EzsigntemplateglobalsignerResponse EzsigntemplateglobalsignerResponse

// NewEzsigntemplateglobalsignerResponse instantiates a new EzsigntemplateglobalsignerResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsigntemplateglobalsignerResponse(pkiEzsigntemplateglobalsignerID int32, fkiEzsigntemplateglobalID int32, sEzsigntemplateglobalsignerDescription string) *EzsigntemplateglobalsignerResponse {
	this := EzsigntemplateglobalsignerResponse{}
	this.PkiEzsigntemplateglobalsignerID = pkiEzsigntemplateglobalsignerID
	this.FkiEzsigntemplateglobalID = fkiEzsigntemplateglobalID
	this.SEzsigntemplateglobalsignerDescription = sEzsigntemplateglobalsignerDescription
	return &this
}

// NewEzsigntemplateglobalsignerResponseWithDefaults instantiates a new EzsigntemplateglobalsignerResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsigntemplateglobalsignerResponseWithDefaults() *EzsigntemplateglobalsignerResponse {
	this := EzsigntemplateglobalsignerResponse{}
	return &this
}

// GetPkiEzsigntemplateglobalsignerID returns the PkiEzsigntemplateglobalsignerID field value
func (o *EzsigntemplateglobalsignerResponse) GetPkiEzsigntemplateglobalsignerID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PkiEzsigntemplateglobalsignerID
}

// GetPkiEzsigntemplateglobalsignerIDOk returns a tuple with the PkiEzsigntemplateglobalsignerID field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplateglobalsignerResponse) GetPkiEzsigntemplateglobalsignerIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkiEzsigntemplateglobalsignerID, true
}

// SetPkiEzsigntemplateglobalsignerID sets field value
func (o *EzsigntemplateglobalsignerResponse) SetPkiEzsigntemplateglobalsignerID(v int32) {
	o.PkiEzsigntemplateglobalsignerID = v
}

// GetFkiEzsigntemplateglobalID returns the FkiEzsigntemplateglobalID field value
func (o *EzsigntemplateglobalsignerResponse) GetFkiEzsigntemplateglobalID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiEzsigntemplateglobalID
}

// GetFkiEzsigntemplateglobalIDOk returns a tuple with the FkiEzsigntemplateglobalID field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplateglobalsignerResponse) GetFkiEzsigntemplateglobalIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiEzsigntemplateglobalID, true
}

// SetFkiEzsigntemplateglobalID sets field value
func (o *EzsigntemplateglobalsignerResponse) SetFkiEzsigntemplateglobalID(v int32) {
	o.FkiEzsigntemplateglobalID = v
}

// GetSEzsigntemplateglobalsignerDescription returns the SEzsigntemplateglobalsignerDescription field value
func (o *EzsigntemplateglobalsignerResponse) GetSEzsigntemplateglobalsignerDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SEzsigntemplateglobalsignerDescription
}

// GetSEzsigntemplateglobalsignerDescriptionOk returns a tuple with the SEzsigntemplateglobalsignerDescription field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplateglobalsignerResponse) GetSEzsigntemplateglobalsignerDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SEzsigntemplateglobalsignerDescription, true
}

// SetSEzsigntemplateglobalsignerDescription sets field value
func (o *EzsigntemplateglobalsignerResponse) SetSEzsigntemplateglobalsignerDescription(v string) {
	o.SEzsigntemplateglobalsignerDescription = v
}

func (o EzsigntemplateglobalsignerResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsigntemplateglobalsignerResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pkiEzsigntemplateglobalsignerID"] = o.PkiEzsigntemplateglobalsignerID
	toSerialize["fkiEzsigntemplateglobalID"] = o.FkiEzsigntemplateglobalID
	toSerialize["sEzsigntemplateglobalsignerDescription"] = o.SEzsigntemplateglobalsignerDescription
	return toSerialize, nil
}

func (o *EzsigntemplateglobalsignerResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pkiEzsigntemplateglobalsignerID",
		"fkiEzsigntemplateglobalID",
		"sEzsigntemplateglobalsignerDescription",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsigntemplateglobalsignerResponse := _EzsigntemplateglobalsignerResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsigntemplateglobalsignerResponse)

	if err != nil {
		return err
	}

	*o = EzsigntemplateglobalsignerResponse(varEzsigntemplateglobalsignerResponse)

	return err
}

type NullableEzsigntemplateglobalsignerResponse struct {
	value *EzsigntemplateglobalsignerResponse
	isSet bool
}

func (v NullableEzsigntemplateglobalsignerResponse) Get() *EzsigntemplateglobalsignerResponse {
	return v.value
}

func (v *NullableEzsigntemplateglobalsignerResponse) Set(val *EzsigntemplateglobalsignerResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsigntemplateglobalsignerResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsigntemplateglobalsignerResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsigntemplateglobalsignerResponse(val *EzsigntemplateglobalsignerResponse) *NullableEzsigntemplateglobalsignerResponse {
	return &NullableEzsigntemplateglobalsignerResponse{value: val, isSet: true}
}

func (v NullableEzsigntemplateglobalsignerResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsigntemplateglobalsignerResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


