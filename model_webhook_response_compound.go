/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WebhookResponseCompound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookResponseCompound{}

// WebhookResponseCompound A Webhook Object
type WebhookResponseCompound struct {
	WebhookResponse
	// The concatenated string to describe the Webhook event
	SWebhookEvent *string `json:"sWebhookEvent,omitempty"`
	AObjWebhookheader []WebhookheaderResponseCompound `json:"a_objWebhookheader,omitempty"`
}

type _WebhookResponseCompound WebhookResponseCompound

// NewWebhookResponseCompound instantiates a new WebhookResponseCompound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookResponseCompound(pkiWebhookID int32, sWebhookDescription string, eWebhookModule FieldEWebhookModule, sWebhookUrl string, sWebhookEmailfailed string, bWebhookIsactive bool, bWebhookIssigned bool, bWebhookSkipsslvalidation bool, objAudit CommonAudit) *WebhookResponseCompound {
	this := WebhookResponseCompound{}
	this.PkiWebhookID = pkiWebhookID
	this.SWebhookDescription = sWebhookDescription
	this.EWebhookModule = eWebhookModule
	this.SWebhookUrl = sWebhookUrl
	this.SWebhookEmailfailed = sWebhookEmailfailed
	this.BWebhookIsactive = bWebhookIsactive
	this.BWebhookIssigned = bWebhookIssigned
	this.BWebhookSkipsslvalidation = bWebhookSkipsslvalidation
	this.ObjAudit = objAudit
	return &this
}

// NewWebhookResponseCompoundWithDefaults instantiates a new WebhookResponseCompound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookResponseCompoundWithDefaults() *WebhookResponseCompound {
	this := WebhookResponseCompound{}
	return &this
}

// GetSWebhookEvent returns the SWebhookEvent field value if set, zero value otherwise.
func (o *WebhookResponseCompound) GetSWebhookEvent() string {
	if o == nil || IsNil(o.SWebhookEvent) {
		var ret string
		return ret
	}
	return *o.SWebhookEvent
}

// GetSWebhookEventOk returns a tuple with the SWebhookEvent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookResponseCompound) GetSWebhookEventOk() (*string, bool) {
	if o == nil || IsNil(o.SWebhookEvent) {
		return nil, false
	}
	return o.SWebhookEvent, true
}

// HasSWebhookEvent returns a boolean if a field has been set.
func (o *WebhookResponseCompound) HasSWebhookEvent() bool {
	if o != nil && !IsNil(o.SWebhookEvent) {
		return true
	}

	return false
}

// SetSWebhookEvent gets a reference to the given string and assigns it to the SWebhookEvent field.
func (o *WebhookResponseCompound) SetSWebhookEvent(v string) {
	o.SWebhookEvent = &v
}

// GetAObjWebhookheader returns the AObjWebhookheader field value if set, zero value otherwise.
func (o *WebhookResponseCompound) GetAObjWebhookheader() []WebhookheaderResponseCompound {
	if o == nil || IsNil(o.AObjWebhookheader) {
		var ret []WebhookheaderResponseCompound
		return ret
	}
	return o.AObjWebhookheader
}

// GetAObjWebhookheaderOk returns a tuple with the AObjWebhookheader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookResponseCompound) GetAObjWebhookheaderOk() ([]WebhookheaderResponseCompound, bool) {
	if o == nil || IsNil(o.AObjWebhookheader) {
		return nil, false
	}
	return o.AObjWebhookheader, true
}

// HasAObjWebhookheader returns a boolean if a field has been set.
func (o *WebhookResponseCompound) HasAObjWebhookheader() bool {
	if o != nil && !IsNil(o.AObjWebhookheader) {
		return true
	}

	return false
}

// SetAObjWebhookheader gets a reference to the given []WebhookheaderResponseCompound and assigns it to the AObjWebhookheader field.
func (o *WebhookResponseCompound) SetAObjWebhookheader(v []WebhookheaderResponseCompound) {
	o.AObjWebhookheader = v
}

func (o WebhookResponseCompound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookResponseCompound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SWebhookEvent) {
		toSerialize["sWebhookEvent"] = o.SWebhookEvent
	}
	if !IsNil(o.AObjWebhookheader) {
		toSerialize["a_objWebhookheader"] = o.AObjWebhookheader
	}
	return toSerialize, nil
}

func (o *WebhookResponseCompound) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pkiWebhookID",
		"sWebhookDescription",
		"eWebhookModule",
		"sWebhookUrl",
		"sWebhookEmailfailed",
		"bWebhookIsactive",
		"bWebhookIssigned",
		"bWebhookSkipsslvalidation",
		"objAudit",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebhookResponseCompound := _WebhookResponseCompound{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWebhookResponseCompound)

	if err != nil {
		return err
	}

	*o = WebhookResponseCompound(varWebhookResponseCompound)

	return err
}

type NullableWebhookResponseCompound struct {
	value *WebhookResponseCompound
	isSet bool
}

func (v NullableWebhookResponseCompound) Get() *WebhookResponseCompound {
	return v.value
}

func (v *NullableWebhookResponseCompound) Set(val *WebhookResponseCompound) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookResponseCompound) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookResponseCompound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookResponseCompound(val *WebhookResponseCompound) *NullableWebhookResponseCompound {
	return &NullableWebhookResponseCompound{value: val, isSet: true}
}

func (v NullableWebhookResponseCompound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookResponseCompound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


