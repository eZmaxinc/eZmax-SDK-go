/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// checks if the UsergroupmembershipEditObjectV1Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UsergroupmembershipEditObjectV1Request{}

// UsergroupmembershipEditObjectV1Request Request for PUT /1/object/usergroupmembership/{pkiUsergroupmembershipID}
type UsergroupmembershipEditObjectV1Request struct {
	ObjUsergroupmembership UsergroupmembershipRequestCompound `json:"objUsergroupmembership"`
}

// NewUsergroupmembershipEditObjectV1Request instantiates a new UsergroupmembershipEditObjectV1Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsergroupmembershipEditObjectV1Request(objUsergroupmembership UsergroupmembershipRequestCompound) *UsergroupmembershipEditObjectV1Request {
	this := UsergroupmembershipEditObjectV1Request{}
	this.ObjUsergroupmembership = objUsergroupmembership
	return &this
}

// NewUsergroupmembershipEditObjectV1RequestWithDefaults instantiates a new UsergroupmembershipEditObjectV1Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsergroupmembershipEditObjectV1RequestWithDefaults() *UsergroupmembershipEditObjectV1Request {
	this := UsergroupmembershipEditObjectV1Request{}
	return &this
}

// GetObjUsergroupmembership returns the ObjUsergroupmembership field value
func (o *UsergroupmembershipEditObjectV1Request) GetObjUsergroupmembership() UsergroupmembershipRequestCompound {
	if o == nil {
		var ret UsergroupmembershipRequestCompound
		return ret
	}

	return o.ObjUsergroupmembership
}

// GetObjUsergroupmembershipOk returns a tuple with the ObjUsergroupmembership field value
// and a boolean to check if the value has been set.
func (o *UsergroupmembershipEditObjectV1Request) GetObjUsergroupmembershipOk() (*UsergroupmembershipRequestCompound, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjUsergroupmembership, true
}

// SetObjUsergroupmembership sets field value
func (o *UsergroupmembershipEditObjectV1Request) SetObjUsergroupmembership(v UsergroupmembershipRequestCompound) {
	o.ObjUsergroupmembership = v
}

func (o UsergroupmembershipEditObjectV1Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UsergroupmembershipEditObjectV1Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["objUsergroupmembership"] = o.ObjUsergroupmembership
	return toSerialize, nil
}

type NullableUsergroupmembershipEditObjectV1Request struct {
	value *UsergroupmembershipEditObjectV1Request
	isSet bool
}

func (v NullableUsergroupmembershipEditObjectV1Request) Get() *UsergroupmembershipEditObjectV1Request {
	return v.value
}

func (v *NullableUsergroupmembershipEditObjectV1Request) Set(val *UsergroupmembershipEditObjectV1Request) {
	v.value = val
	v.isSet = true
}

func (v NullableUsergroupmembershipEditObjectV1Request) IsSet() bool {
	return v.isSet
}

func (v *NullableUsergroupmembershipEditObjectV1Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsergroupmembershipEditObjectV1Request(val *UsergroupmembershipEditObjectV1Request) *NullableUsergroupmembershipEditObjectV1Request {
	return &NullableUsergroupmembershipEditObjectV1Request{value: val, isSet: true}
}

func (v NullableUsergroupmembershipEditObjectV1Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsergroupmembershipEditObjectV1Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


