/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// checks if the BrandingRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BrandingRequest{}

// BrandingRequest A Branding Object
type BrandingRequest struct {
	// The unique ID of the Branding
	PkiBrandingID *int32 `json:"pkiBrandingID,omitempty"`
	ObjBrandingDescription MultilingualBrandingDescription `json:"objBrandingDescription"`
	EBrandingLogo FieldEBrandingLogo `json:"eBrandingLogo"`
	// The Base64 encoded binary content of the branding logo. This need to match image type selected in eBrandingLogo if you supply an image. If you select 'Default', the logo will be deleted and the default one will be used.
	SBrandingBase64 *string `json:"sBrandingBase64,omitempty"`
	// The color of the text. This is a RGB color converted into integer
	IBrandingColortext int32 `json:"iBrandingColortext"`
	// The color of the text in the link box. This is a RGB color converted into integer
	IBrandingColortextlinkbox int32 `json:"iBrandingColortextlinkbox"`
	// The color of the text in the button. This is a RGB color converted into integer
	IBrandingColortextbutton int32 `json:"iBrandingColortextbutton"`
	// The color of the background. This is a RGB color converted into integer
	IBrandingColorbackground int32 `json:"iBrandingColorbackground"`
	// The color of the background of the button. This is a RGB color converted into integer
	IBrandingColorbackgroundbutton int32 `json:"iBrandingColorbackgroundbutton"`
	// The color of the background of the small box. This is a RGB color converted into integer
	IBrandingColorbackgroundsmallbox int32 `json:"iBrandingColorbackgroundsmallbox"`
	// The name of the Branding  This value will only be set if you wish to overwrite the default name. If you want to keep the default name, leave this property empty
	SBrandingName *string `json:"sBrandingName,omitempty"`
	// The email address.
	SEmailAddress *string `json:"sEmailAddress,omitempty"`
	// Whether the Branding is active or not
	BBrandingIsactive bool `json:"bBrandingIsactive"`
}

// NewBrandingRequest instantiates a new BrandingRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBrandingRequest(objBrandingDescription MultilingualBrandingDescription, eBrandingLogo FieldEBrandingLogo, iBrandingColortext int32, iBrandingColortextlinkbox int32, iBrandingColortextbutton int32, iBrandingColorbackground int32, iBrandingColorbackgroundbutton int32, iBrandingColorbackgroundsmallbox int32, bBrandingIsactive bool) *BrandingRequest {
	this := BrandingRequest{}
	this.ObjBrandingDescription = objBrandingDescription
	this.EBrandingLogo = eBrandingLogo
	this.IBrandingColortext = iBrandingColortext
	this.IBrandingColortextlinkbox = iBrandingColortextlinkbox
	this.IBrandingColortextbutton = iBrandingColortextbutton
	this.IBrandingColorbackground = iBrandingColorbackground
	this.IBrandingColorbackgroundbutton = iBrandingColorbackgroundbutton
	this.IBrandingColorbackgroundsmallbox = iBrandingColorbackgroundsmallbox
	this.BBrandingIsactive = bBrandingIsactive
	return &this
}

// NewBrandingRequestWithDefaults instantiates a new BrandingRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBrandingRequestWithDefaults() *BrandingRequest {
	this := BrandingRequest{}
	return &this
}

// GetPkiBrandingID returns the PkiBrandingID field value if set, zero value otherwise.
func (o *BrandingRequest) GetPkiBrandingID() int32 {
	if o == nil || IsNil(o.PkiBrandingID) {
		var ret int32
		return ret
	}
	return *o.PkiBrandingID
}

// GetPkiBrandingIDOk returns a tuple with the PkiBrandingID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandingRequest) GetPkiBrandingIDOk() (*int32, bool) {
	if o == nil || IsNil(o.PkiBrandingID) {
		return nil, false
	}
	return o.PkiBrandingID, true
}

// HasPkiBrandingID returns a boolean if a field has been set.
func (o *BrandingRequest) HasPkiBrandingID() bool {
	if o != nil && !IsNil(o.PkiBrandingID) {
		return true
	}

	return false
}

// SetPkiBrandingID gets a reference to the given int32 and assigns it to the PkiBrandingID field.
func (o *BrandingRequest) SetPkiBrandingID(v int32) {
	o.PkiBrandingID = &v
}

// GetObjBrandingDescription returns the ObjBrandingDescription field value
func (o *BrandingRequest) GetObjBrandingDescription() MultilingualBrandingDescription {
	if o == nil {
		var ret MultilingualBrandingDescription
		return ret
	}

	return o.ObjBrandingDescription
}

// GetObjBrandingDescriptionOk returns a tuple with the ObjBrandingDescription field value
// and a boolean to check if the value has been set.
func (o *BrandingRequest) GetObjBrandingDescriptionOk() (*MultilingualBrandingDescription, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjBrandingDescription, true
}

// SetObjBrandingDescription sets field value
func (o *BrandingRequest) SetObjBrandingDescription(v MultilingualBrandingDescription) {
	o.ObjBrandingDescription = v
}

// GetEBrandingLogo returns the EBrandingLogo field value
func (o *BrandingRequest) GetEBrandingLogo() FieldEBrandingLogo {
	if o == nil {
		var ret FieldEBrandingLogo
		return ret
	}

	return o.EBrandingLogo
}

// GetEBrandingLogoOk returns a tuple with the EBrandingLogo field value
// and a boolean to check if the value has been set.
func (o *BrandingRequest) GetEBrandingLogoOk() (*FieldEBrandingLogo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EBrandingLogo, true
}

// SetEBrandingLogo sets field value
func (o *BrandingRequest) SetEBrandingLogo(v FieldEBrandingLogo) {
	o.EBrandingLogo = v
}

// GetSBrandingBase64 returns the SBrandingBase64 field value if set, zero value otherwise.
func (o *BrandingRequest) GetSBrandingBase64() string {
	if o == nil || IsNil(o.SBrandingBase64) {
		var ret string
		return ret
	}
	return *o.SBrandingBase64
}

// GetSBrandingBase64Ok returns a tuple with the SBrandingBase64 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandingRequest) GetSBrandingBase64Ok() (*string, bool) {
	if o == nil || IsNil(o.SBrandingBase64) {
		return nil, false
	}
	return o.SBrandingBase64, true
}

// HasSBrandingBase64 returns a boolean if a field has been set.
func (o *BrandingRequest) HasSBrandingBase64() bool {
	if o != nil && !IsNil(o.SBrandingBase64) {
		return true
	}

	return false
}

// SetSBrandingBase64 gets a reference to the given string and assigns it to the SBrandingBase64 field.
func (o *BrandingRequest) SetSBrandingBase64(v string) {
	o.SBrandingBase64 = &v
}

// GetIBrandingColortext returns the IBrandingColortext field value
func (o *BrandingRequest) GetIBrandingColortext() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IBrandingColortext
}

// GetIBrandingColortextOk returns a tuple with the IBrandingColortext field value
// and a boolean to check if the value has been set.
func (o *BrandingRequest) GetIBrandingColortextOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IBrandingColortext, true
}

// SetIBrandingColortext sets field value
func (o *BrandingRequest) SetIBrandingColortext(v int32) {
	o.IBrandingColortext = v
}

// GetIBrandingColortextlinkbox returns the IBrandingColortextlinkbox field value
func (o *BrandingRequest) GetIBrandingColortextlinkbox() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IBrandingColortextlinkbox
}

// GetIBrandingColortextlinkboxOk returns a tuple with the IBrandingColortextlinkbox field value
// and a boolean to check if the value has been set.
func (o *BrandingRequest) GetIBrandingColortextlinkboxOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IBrandingColortextlinkbox, true
}

// SetIBrandingColortextlinkbox sets field value
func (o *BrandingRequest) SetIBrandingColortextlinkbox(v int32) {
	o.IBrandingColortextlinkbox = v
}

// GetIBrandingColortextbutton returns the IBrandingColortextbutton field value
func (o *BrandingRequest) GetIBrandingColortextbutton() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IBrandingColortextbutton
}

// GetIBrandingColortextbuttonOk returns a tuple with the IBrandingColortextbutton field value
// and a boolean to check if the value has been set.
func (o *BrandingRequest) GetIBrandingColortextbuttonOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IBrandingColortextbutton, true
}

// SetIBrandingColortextbutton sets field value
func (o *BrandingRequest) SetIBrandingColortextbutton(v int32) {
	o.IBrandingColortextbutton = v
}

// GetIBrandingColorbackground returns the IBrandingColorbackground field value
func (o *BrandingRequest) GetIBrandingColorbackground() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IBrandingColorbackground
}

// GetIBrandingColorbackgroundOk returns a tuple with the IBrandingColorbackground field value
// and a boolean to check if the value has been set.
func (o *BrandingRequest) GetIBrandingColorbackgroundOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IBrandingColorbackground, true
}

// SetIBrandingColorbackground sets field value
func (o *BrandingRequest) SetIBrandingColorbackground(v int32) {
	o.IBrandingColorbackground = v
}

// GetIBrandingColorbackgroundbutton returns the IBrandingColorbackgroundbutton field value
func (o *BrandingRequest) GetIBrandingColorbackgroundbutton() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IBrandingColorbackgroundbutton
}

// GetIBrandingColorbackgroundbuttonOk returns a tuple with the IBrandingColorbackgroundbutton field value
// and a boolean to check if the value has been set.
func (o *BrandingRequest) GetIBrandingColorbackgroundbuttonOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IBrandingColorbackgroundbutton, true
}

// SetIBrandingColorbackgroundbutton sets field value
func (o *BrandingRequest) SetIBrandingColorbackgroundbutton(v int32) {
	o.IBrandingColorbackgroundbutton = v
}

// GetIBrandingColorbackgroundsmallbox returns the IBrandingColorbackgroundsmallbox field value
func (o *BrandingRequest) GetIBrandingColorbackgroundsmallbox() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IBrandingColorbackgroundsmallbox
}

// GetIBrandingColorbackgroundsmallboxOk returns a tuple with the IBrandingColorbackgroundsmallbox field value
// and a boolean to check if the value has been set.
func (o *BrandingRequest) GetIBrandingColorbackgroundsmallboxOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IBrandingColorbackgroundsmallbox, true
}

// SetIBrandingColorbackgroundsmallbox sets field value
func (o *BrandingRequest) SetIBrandingColorbackgroundsmallbox(v int32) {
	o.IBrandingColorbackgroundsmallbox = v
}

// GetSBrandingName returns the SBrandingName field value if set, zero value otherwise.
func (o *BrandingRequest) GetSBrandingName() string {
	if o == nil || IsNil(o.SBrandingName) {
		var ret string
		return ret
	}
	return *o.SBrandingName
}

// GetSBrandingNameOk returns a tuple with the SBrandingName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandingRequest) GetSBrandingNameOk() (*string, bool) {
	if o == nil || IsNil(o.SBrandingName) {
		return nil, false
	}
	return o.SBrandingName, true
}

// HasSBrandingName returns a boolean if a field has been set.
func (o *BrandingRequest) HasSBrandingName() bool {
	if o != nil && !IsNil(o.SBrandingName) {
		return true
	}

	return false
}

// SetSBrandingName gets a reference to the given string and assigns it to the SBrandingName field.
func (o *BrandingRequest) SetSBrandingName(v string) {
	o.SBrandingName = &v
}

// GetSEmailAddress returns the SEmailAddress field value if set, zero value otherwise.
func (o *BrandingRequest) GetSEmailAddress() string {
	if o == nil || IsNil(o.SEmailAddress) {
		var ret string
		return ret
	}
	return *o.SEmailAddress
}

// GetSEmailAddressOk returns a tuple with the SEmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandingRequest) GetSEmailAddressOk() (*string, bool) {
	if o == nil || IsNil(o.SEmailAddress) {
		return nil, false
	}
	return o.SEmailAddress, true
}

// HasSEmailAddress returns a boolean if a field has been set.
func (o *BrandingRequest) HasSEmailAddress() bool {
	if o != nil && !IsNil(o.SEmailAddress) {
		return true
	}

	return false
}

// SetSEmailAddress gets a reference to the given string and assigns it to the SEmailAddress field.
func (o *BrandingRequest) SetSEmailAddress(v string) {
	o.SEmailAddress = &v
}

// GetBBrandingIsactive returns the BBrandingIsactive field value
func (o *BrandingRequest) GetBBrandingIsactive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BBrandingIsactive
}

// GetBBrandingIsactiveOk returns a tuple with the BBrandingIsactive field value
// and a boolean to check if the value has been set.
func (o *BrandingRequest) GetBBrandingIsactiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BBrandingIsactive, true
}

// SetBBrandingIsactive sets field value
func (o *BrandingRequest) SetBBrandingIsactive(v bool) {
	o.BBrandingIsactive = v
}

func (o BrandingRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BrandingRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PkiBrandingID) {
		toSerialize["pkiBrandingID"] = o.PkiBrandingID
	}
	toSerialize["objBrandingDescription"] = o.ObjBrandingDescription
	toSerialize["eBrandingLogo"] = o.EBrandingLogo
	if !IsNil(o.SBrandingBase64) {
		toSerialize["sBrandingBase64"] = o.SBrandingBase64
	}
	toSerialize["iBrandingColortext"] = o.IBrandingColortext
	toSerialize["iBrandingColortextlinkbox"] = o.IBrandingColortextlinkbox
	toSerialize["iBrandingColortextbutton"] = o.IBrandingColortextbutton
	toSerialize["iBrandingColorbackground"] = o.IBrandingColorbackground
	toSerialize["iBrandingColorbackgroundbutton"] = o.IBrandingColorbackgroundbutton
	toSerialize["iBrandingColorbackgroundsmallbox"] = o.IBrandingColorbackgroundsmallbox
	if !IsNil(o.SBrandingName) {
		toSerialize["sBrandingName"] = o.SBrandingName
	}
	if !IsNil(o.SEmailAddress) {
		toSerialize["sEmailAddress"] = o.SEmailAddress
	}
	toSerialize["bBrandingIsactive"] = o.BBrandingIsactive
	return toSerialize, nil
}

type NullableBrandingRequest struct {
	value *BrandingRequest
	isSet bool
}

func (v NullableBrandingRequest) Get() *BrandingRequest {
	return v.value
}

func (v *NullableBrandingRequest) Set(val *BrandingRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBrandingRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBrandingRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBrandingRequest(val *BrandingRequest) *NullableBrandingRequest {
	return &NullableBrandingRequest{value: val, isSet: true}
}

func (v NullableBrandingRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBrandingRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


