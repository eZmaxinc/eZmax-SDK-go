/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.2
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CommonResponseRedirectSSecretquestionTextX type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonResponseRedirectSSecretquestionTextX{}

// CommonResponseRedirectSSecretquestionTextX 352 Redirect Message containing secret question
type CommonResponseRedirectSSecretquestionTextX struct {
	// The text of the Secretquestion in the language of the requester
	SSecretquestionTextX string `json:"sSecretquestionTextX"`
}

type _CommonResponseRedirectSSecretquestionTextX CommonResponseRedirectSSecretquestionTextX

// NewCommonResponseRedirectSSecretquestionTextX instantiates a new CommonResponseRedirectSSecretquestionTextX object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonResponseRedirectSSecretquestionTextX(sSecretquestionTextX string) *CommonResponseRedirectSSecretquestionTextX {
	this := CommonResponseRedirectSSecretquestionTextX{}
	this.SSecretquestionTextX = sSecretquestionTextX
	return &this
}

// NewCommonResponseRedirectSSecretquestionTextXWithDefaults instantiates a new CommonResponseRedirectSSecretquestionTextX object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonResponseRedirectSSecretquestionTextXWithDefaults() *CommonResponseRedirectSSecretquestionTextX {
	this := CommonResponseRedirectSSecretquestionTextX{}
	return &this
}

// GetSSecretquestionTextX returns the SSecretquestionTextX field value
func (o *CommonResponseRedirectSSecretquestionTextX) GetSSecretquestionTextX() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SSecretquestionTextX
}

// GetSSecretquestionTextXOk returns a tuple with the SSecretquestionTextX field value
// and a boolean to check if the value has been set.
func (o *CommonResponseRedirectSSecretquestionTextX) GetSSecretquestionTextXOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SSecretquestionTextX, true
}

// SetSSecretquestionTextX sets field value
func (o *CommonResponseRedirectSSecretquestionTextX) SetSSecretquestionTextX(v string) {
	o.SSecretquestionTextX = v
}

func (o CommonResponseRedirectSSecretquestionTextX) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonResponseRedirectSSecretquestionTextX) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sSecretquestionTextX"] = o.SSecretquestionTextX
	return toSerialize, nil
}

func (o *CommonResponseRedirectSSecretquestionTextX) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sSecretquestionTextX",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCommonResponseRedirectSSecretquestionTextX := _CommonResponseRedirectSSecretquestionTextX{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCommonResponseRedirectSSecretquestionTextX)

	if err != nil {
		return err
	}

	*o = CommonResponseRedirectSSecretquestionTextX(varCommonResponseRedirectSSecretquestionTextX)

	return err
}

type NullableCommonResponseRedirectSSecretquestionTextX struct {
	value *CommonResponseRedirectSSecretquestionTextX
	isSet bool
}

func (v NullableCommonResponseRedirectSSecretquestionTextX) Get() *CommonResponseRedirectSSecretquestionTextX {
	return v.value
}

func (v *NullableCommonResponseRedirectSSecretquestionTextX) Set(val *CommonResponseRedirectSSecretquestionTextX) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonResponseRedirectSSecretquestionTextX) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonResponseRedirectSSecretquestionTextX) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonResponseRedirectSSecretquestionTextX(val *CommonResponseRedirectSSecretquestionTextX) *NullableCommonResponseRedirectSSecretquestionTextX {
	return &NullableCommonResponseRedirectSSecretquestionTextX{value: val, isSet: true}
}

func (v NullableCommonResponseRedirectSSecretquestionTextX) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonResponseRedirectSSecretquestionTextX) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


