/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.2
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// checks if the EzmaxcaseRequestPatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzmaxcaseRequestPatch{}

// EzmaxcaseRequestPatch An Ezmaxcase Object
type EzmaxcaseRequestPatch struct {
	// The unique ID of the Ezmaxcasequeue
	FkiEzmaxcasequeueID *int32 `json:"fkiEzmaxcasequeueID,omitempty"`
	// The unique ID of the Ezmaxcasepriority
	FkiEzmaxcasepriorityID *int32 `json:"fkiEzmaxcasepriorityID,omitempty"`
	// The unique ID of the Ezmaxcasestate
	FkiEzmaxcasestateID *int32 `json:"fkiEzmaxcasestateID,omitempty"`
	// The unique ID of the Ezmaxfeaturerequest
	FkiEzmaxfeaturerequestID *int32 `json:"fkiEzmaxfeaturerequestID,omitempty"`
	// The unique ID of the Ezmaxknownissue
	FkiEzmaxknownissueID *int32 `json:"fkiEzmaxknownissueID,omitempty"`
	// The unique ID of the User
	FkiUserIDOwner *int32 `json:"fkiUserIDOwner,omitempty"`
}

// NewEzmaxcaseRequestPatch instantiates a new EzmaxcaseRequestPatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzmaxcaseRequestPatch() *EzmaxcaseRequestPatch {
	this := EzmaxcaseRequestPatch{}
	return &this
}

// NewEzmaxcaseRequestPatchWithDefaults instantiates a new EzmaxcaseRequestPatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzmaxcaseRequestPatchWithDefaults() *EzmaxcaseRequestPatch {
	this := EzmaxcaseRequestPatch{}
	return &this
}

// GetFkiEzmaxcasequeueID returns the FkiEzmaxcasequeueID field value if set, zero value otherwise.
func (o *EzmaxcaseRequestPatch) GetFkiEzmaxcasequeueID() int32 {
	if o == nil || IsNil(o.FkiEzmaxcasequeueID) {
		var ret int32
		return ret
	}
	return *o.FkiEzmaxcasequeueID
}

// GetFkiEzmaxcasequeueIDOk returns a tuple with the FkiEzmaxcasequeueID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzmaxcaseRequestPatch) GetFkiEzmaxcasequeueIDOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiEzmaxcasequeueID) {
		return nil, false
	}
	return o.FkiEzmaxcasequeueID, true
}

// HasFkiEzmaxcasequeueID returns a boolean if a field has been set.
func (o *EzmaxcaseRequestPatch) HasFkiEzmaxcasequeueID() bool {
	if o != nil && !IsNil(o.FkiEzmaxcasequeueID) {
		return true
	}

	return false
}

// SetFkiEzmaxcasequeueID gets a reference to the given int32 and assigns it to the FkiEzmaxcasequeueID field.
func (o *EzmaxcaseRequestPatch) SetFkiEzmaxcasequeueID(v int32) {
	o.FkiEzmaxcasequeueID = &v
}

// GetFkiEzmaxcasepriorityID returns the FkiEzmaxcasepriorityID field value if set, zero value otherwise.
func (o *EzmaxcaseRequestPatch) GetFkiEzmaxcasepriorityID() int32 {
	if o == nil || IsNil(o.FkiEzmaxcasepriorityID) {
		var ret int32
		return ret
	}
	return *o.FkiEzmaxcasepriorityID
}

// GetFkiEzmaxcasepriorityIDOk returns a tuple with the FkiEzmaxcasepriorityID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzmaxcaseRequestPatch) GetFkiEzmaxcasepriorityIDOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiEzmaxcasepriorityID) {
		return nil, false
	}
	return o.FkiEzmaxcasepriorityID, true
}

// HasFkiEzmaxcasepriorityID returns a boolean if a field has been set.
func (o *EzmaxcaseRequestPatch) HasFkiEzmaxcasepriorityID() bool {
	if o != nil && !IsNil(o.FkiEzmaxcasepriorityID) {
		return true
	}

	return false
}

// SetFkiEzmaxcasepriorityID gets a reference to the given int32 and assigns it to the FkiEzmaxcasepriorityID field.
func (o *EzmaxcaseRequestPatch) SetFkiEzmaxcasepriorityID(v int32) {
	o.FkiEzmaxcasepriorityID = &v
}

// GetFkiEzmaxcasestateID returns the FkiEzmaxcasestateID field value if set, zero value otherwise.
func (o *EzmaxcaseRequestPatch) GetFkiEzmaxcasestateID() int32 {
	if o == nil || IsNil(o.FkiEzmaxcasestateID) {
		var ret int32
		return ret
	}
	return *o.FkiEzmaxcasestateID
}

// GetFkiEzmaxcasestateIDOk returns a tuple with the FkiEzmaxcasestateID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzmaxcaseRequestPatch) GetFkiEzmaxcasestateIDOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiEzmaxcasestateID) {
		return nil, false
	}
	return o.FkiEzmaxcasestateID, true
}

// HasFkiEzmaxcasestateID returns a boolean if a field has been set.
func (o *EzmaxcaseRequestPatch) HasFkiEzmaxcasestateID() bool {
	if o != nil && !IsNil(o.FkiEzmaxcasestateID) {
		return true
	}

	return false
}

// SetFkiEzmaxcasestateID gets a reference to the given int32 and assigns it to the FkiEzmaxcasestateID field.
func (o *EzmaxcaseRequestPatch) SetFkiEzmaxcasestateID(v int32) {
	o.FkiEzmaxcasestateID = &v
}

// GetFkiEzmaxfeaturerequestID returns the FkiEzmaxfeaturerequestID field value if set, zero value otherwise.
func (o *EzmaxcaseRequestPatch) GetFkiEzmaxfeaturerequestID() int32 {
	if o == nil || IsNil(o.FkiEzmaxfeaturerequestID) {
		var ret int32
		return ret
	}
	return *o.FkiEzmaxfeaturerequestID
}

// GetFkiEzmaxfeaturerequestIDOk returns a tuple with the FkiEzmaxfeaturerequestID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzmaxcaseRequestPatch) GetFkiEzmaxfeaturerequestIDOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiEzmaxfeaturerequestID) {
		return nil, false
	}
	return o.FkiEzmaxfeaturerequestID, true
}

// HasFkiEzmaxfeaturerequestID returns a boolean if a field has been set.
func (o *EzmaxcaseRequestPatch) HasFkiEzmaxfeaturerequestID() bool {
	if o != nil && !IsNil(o.FkiEzmaxfeaturerequestID) {
		return true
	}

	return false
}

// SetFkiEzmaxfeaturerequestID gets a reference to the given int32 and assigns it to the FkiEzmaxfeaturerequestID field.
func (o *EzmaxcaseRequestPatch) SetFkiEzmaxfeaturerequestID(v int32) {
	o.FkiEzmaxfeaturerequestID = &v
}

// GetFkiEzmaxknownissueID returns the FkiEzmaxknownissueID field value if set, zero value otherwise.
func (o *EzmaxcaseRequestPatch) GetFkiEzmaxknownissueID() int32 {
	if o == nil || IsNil(o.FkiEzmaxknownissueID) {
		var ret int32
		return ret
	}
	return *o.FkiEzmaxknownissueID
}

// GetFkiEzmaxknownissueIDOk returns a tuple with the FkiEzmaxknownissueID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzmaxcaseRequestPatch) GetFkiEzmaxknownissueIDOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiEzmaxknownissueID) {
		return nil, false
	}
	return o.FkiEzmaxknownissueID, true
}

// HasFkiEzmaxknownissueID returns a boolean if a field has been set.
func (o *EzmaxcaseRequestPatch) HasFkiEzmaxknownissueID() bool {
	if o != nil && !IsNil(o.FkiEzmaxknownissueID) {
		return true
	}

	return false
}

// SetFkiEzmaxknownissueID gets a reference to the given int32 and assigns it to the FkiEzmaxknownissueID field.
func (o *EzmaxcaseRequestPatch) SetFkiEzmaxknownissueID(v int32) {
	o.FkiEzmaxknownissueID = &v
}

// GetFkiUserIDOwner returns the FkiUserIDOwner field value if set, zero value otherwise.
func (o *EzmaxcaseRequestPatch) GetFkiUserIDOwner() int32 {
	if o == nil || IsNil(o.FkiUserIDOwner) {
		var ret int32
		return ret
	}
	return *o.FkiUserIDOwner
}

// GetFkiUserIDOwnerOk returns a tuple with the FkiUserIDOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzmaxcaseRequestPatch) GetFkiUserIDOwnerOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiUserIDOwner) {
		return nil, false
	}
	return o.FkiUserIDOwner, true
}

// HasFkiUserIDOwner returns a boolean if a field has been set.
func (o *EzmaxcaseRequestPatch) HasFkiUserIDOwner() bool {
	if o != nil && !IsNil(o.FkiUserIDOwner) {
		return true
	}

	return false
}

// SetFkiUserIDOwner gets a reference to the given int32 and assigns it to the FkiUserIDOwner field.
func (o *EzmaxcaseRequestPatch) SetFkiUserIDOwner(v int32) {
	o.FkiUserIDOwner = &v
}

func (o EzmaxcaseRequestPatch) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzmaxcaseRequestPatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FkiEzmaxcasequeueID) {
		toSerialize["fkiEzmaxcasequeueID"] = o.FkiEzmaxcasequeueID
	}
	if !IsNil(o.FkiEzmaxcasepriorityID) {
		toSerialize["fkiEzmaxcasepriorityID"] = o.FkiEzmaxcasepriorityID
	}
	if !IsNil(o.FkiEzmaxcasestateID) {
		toSerialize["fkiEzmaxcasestateID"] = o.FkiEzmaxcasestateID
	}
	if !IsNil(o.FkiEzmaxfeaturerequestID) {
		toSerialize["fkiEzmaxfeaturerequestID"] = o.FkiEzmaxfeaturerequestID
	}
	if !IsNil(o.FkiEzmaxknownissueID) {
		toSerialize["fkiEzmaxknownissueID"] = o.FkiEzmaxknownissueID
	}
	if !IsNil(o.FkiUserIDOwner) {
		toSerialize["fkiUserIDOwner"] = o.FkiUserIDOwner
	}
	return toSerialize, nil
}

type NullableEzmaxcaseRequestPatch struct {
	value *EzmaxcaseRequestPatch
	isSet bool
}

func (v NullableEzmaxcaseRequestPatch) Get() *EzmaxcaseRequestPatch {
	return v.value
}

func (v *NullableEzmaxcaseRequestPatch) Set(val *EzmaxcaseRequestPatch) {
	v.value = val
	v.isSet = true
}

func (v NullableEzmaxcaseRequestPatch) IsSet() bool {
	return v.isSet
}

func (v *NullableEzmaxcaseRequestPatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzmaxcaseRequestPatch(val *EzmaxcaseRequestPatch) *NullableEzmaxcaseRequestPatch {
	return &NullableEzmaxcaseRequestPatch{value: val, isSet: true}
}

func (v NullableEzmaxcaseRequestPatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzmaxcaseRequestPatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


