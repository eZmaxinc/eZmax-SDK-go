/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload{}

// EzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload Payload for GET /1/object/ezsignfoldersignerassociation/getInPersonLoginUrl
type EzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload struct {
	// The Url to login to the signing application.    Url will expire after 30 minutes.  
	SLoginUrl string `json:"sLoginUrl"`
}

type _EzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload EzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload

// NewEzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload instantiates a new EzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload(sLoginUrl string) *EzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload {
	this := EzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload{}
	this.SLoginUrl = sLoginUrl
	return &this
}

// NewEzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayloadWithDefaults instantiates a new EzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayloadWithDefaults() *EzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload {
	this := EzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload{}
	return &this
}

// GetSLoginUrl returns the SLoginUrl field value
func (o *EzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload) GetSLoginUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SLoginUrl
}

// GetSLoginUrlOk returns a tuple with the SLoginUrl field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload) GetSLoginUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SLoginUrl, true
}

// SetSLoginUrl sets field value
func (o *EzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload) SetSLoginUrl(v string) {
	o.SLoginUrl = v
}

func (o EzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sLoginUrl"] = o.SLoginUrl
	return toSerialize, nil
}

func (o *EzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sLoginUrl",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload := _EzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload)

	if err != nil {
		return err
	}

	*o = EzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload(varEzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload)

	return err
}

type NullableEzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload struct {
	value *EzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload
	isSet bool
}

func (v NullableEzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload) Get() *EzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload {
	return v.value
}

func (v *NullableEzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload) Set(val *EzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload(val *EzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload) *NullableEzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload {
	return &NullableEzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload{value: val, isSet: true}
}

func (v NullableEzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsignfoldersignerassociationGetInPersonLoginUrlV1ResponseMPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


