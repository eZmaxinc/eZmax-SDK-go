/*
eZmax API Definition

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.1.4
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// EzsignfoldersignerassociationResponseCompoundAllOf struct for EzsignfoldersignerassociationResponseCompoundAllOf
type EzsignfoldersignerassociationResponseCompoundAllOf struct {
	ObjUser *EzsignfoldersignerassociationResponseCompoundUser `json:"objUser,omitempty"`
	ObjEzsignsigner *EzsignsignerResponseCompound `json:"objEzsignsigner,omitempty"`
}

// NewEzsignfoldersignerassociationResponseCompoundAllOf instantiates a new EzsignfoldersignerassociationResponseCompoundAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsignfoldersignerassociationResponseCompoundAllOf() *EzsignfoldersignerassociationResponseCompoundAllOf {
	this := EzsignfoldersignerassociationResponseCompoundAllOf{}
	return &this
}

// NewEzsignfoldersignerassociationResponseCompoundAllOfWithDefaults instantiates a new EzsignfoldersignerassociationResponseCompoundAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsignfoldersignerassociationResponseCompoundAllOfWithDefaults() *EzsignfoldersignerassociationResponseCompoundAllOf {
	this := EzsignfoldersignerassociationResponseCompoundAllOf{}
	return &this
}

// GetObjUser returns the ObjUser field value if set, zero value otherwise.
func (o *EzsignfoldersignerassociationResponseCompoundAllOf) GetObjUser() EzsignfoldersignerassociationResponseCompoundUser {
	if o == nil || o.ObjUser == nil {
		var ret EzsignfoldersignerassociationResponseCompoundUser
		return ret
	}
	return *o.ObjUser
}

// GetObjUserOk returns a tuple with the ObjUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldersignerassociationResponseCompoundAllOf) GetObjUserOk() (*EzsignfoldersignerassociationResponseCompoundUser, bool) {
	if o == nil || o.ObjUser == nil {
		return nil, false
	}
	return o.ObjUser, true
}

// HasObjUser returns a boolean if a field has been set.
func (o *EzsignfoldersignerassociationResponseCompoundAllOf) HasObjUser() bool {
	if o != nil && o.ObjUser != nil {
		return true
	}

	return false
}

// SetObjUser gets a reference to the given EzsignfoldersignerassociationResponseCompoundUser and assigns it to the ObjUser field.
func (o *EzsignfoldersignerassociationResponseCompoundAllOf) SetObjUser(v EzsignfoldersignerassociationResponseCompoundUser) {
	o.ObjUser = &v
}

// GetObjEzsignsigner returns the ObjEzsignsigner field value if set, zero value otherwise.
func (o *EzsignfoldersignerassociationResponseCompoundAllOf) GetObjEzsignsigner() EzsignsignerResponseCompound {
	if o == nil || o.ObjEzsignsigner == nil {
		var ret EzsignsignerResponseCompound
		return ret
	}
	return *o.ObjEzsignsigner
}

// GetObjEzsignsignerOk returns a tuple with the ObjEzsignsigner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldersignerassociationResponseCompoundAllOf) GetObjEzsignsignerOk() (*EzsignsignerResponseCompound, bool) {
	if o == nil || o.ObjEzsignsigner == nil {
		return nil, false
	}
	return o.ObjEzsignsigner, true
}

// HasObjEzsignsigner returns a boolean if a field has been set.
func (o *EzsignfoldersignerassociationResponseCompoundAllOf) HasObjEzsignsigner() bool {
	if o != nil && o.ObjEzsignsigner != nil {
		return true
	}

	return false
}

// SetObjEzsignsigner gets a reference to the given EzsignsignerResponseCompound and assigns it to the ObjEzsignsigner field.
func (o *EzsignfoldersignerassociationResponseCompoundAllOf) SetObjEzsignsigner(v EzsignsignerResponseCompound) {
	o.ObjEzsignsigner = &v
}

func (o EzsignfoldersignerassociationResponseCompoundAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ObjUser != nil {
		toSerialize["objUser"] = o.ObjUser
	}
	if o.ObjEzsignsigner != nil {
		toSerialize["objEzsignsigner"] = o.ObjEzsignsigner
	}
	return json.Marshal(toSerialize)
}

type NullableEzsignfoldersignerassociationResponseCompoundAllOf struct {
	value *EzsignfoldersignerassociationResponseCompoundAllOf
	isSet bool
}

func (v NullableEzsignfoldersignerassociationResponseCompoundAllOf) Get() *EzsignfoldersignerassociationResponseCompoundAllOf {
	return v.value
}

func (v *NullableEzsignfoldersignerassociationResponseCompoundAllOf) Set(val *EzsignfoldersignerassociationResponseCompoundAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsignfoldersignerassociationResponseCompoundAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsignfoldersignerassociationResponseCompoundAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsignfoldersignerassociationResponseCompoundAllOf(val *EzsignfoldersignerassociationResponseCompoundAllOf) *NullableEzsignfoldersignerassociationResponseCompoundAllOf {
	return &NullableEzsignfoldersignerassociationResponseCompoundAllOf{value: val, isSet: true}
}

func (v NullableEzsignfoldersignerassociationResponseCompoundAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsignfoldersignerassociationResponseCompoundAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


