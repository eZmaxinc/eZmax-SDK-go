/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.2
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"fmt"
)

// EnumHorizontalalignment The Horizontal alignment
type EnumHorizontalalignment string

// List of Enum-Horizontalalignment
const (
	CENTER EnumHorizontalalignment = "Center"
	LEFT EnumHorizontalalignment = "Left"
	RIGHT EnumHorizontalalignment = "Right"
)

// All allowed values of EnumHorizontalalignment enum
var AllowedEnumHorizontalalignmentEnumValues = []EnumHorizontalalignment{
	"Center",
	"Left",
	"Right",
}

func (v *EnumHorizontalalignment) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumHorizontalalignment(value)
	for _, existing := range AllowedEnumHorizontalalignmentEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumHorizontalalignment", value)
}

// NewEnumHorizontalalignmentFromValue returns a pointer to a valid EnumHorizontalalignment
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumHorizontalalignmentFromValue(v string) (*EnumHorizontalalignment, error) {
	ev := EnumHorizontalalignment(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumHorizontalalignment: valid values are %v", v, AllowedEnumHorizontalalignmentEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumHorizontalalignment) IsValid() bool {
	for _, existing := range AllowedEnumHorizontalalignmentEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enum-Horizontalalignment value
func (v EnumHorizontalalignment) Ptr() *EnumHorizontalalignment {
	return &v
}

type NullableEnumHorizontalalignment struct {
	value *EnumHorizontalalignment
	isSet bool
}

func (v NullableEnumHorizontalalignment) Get() *EnumHorizontalalignment {
	return v.value
}

func (v *NullableEnumHorizontalalignment) Set(val *EnumHorizontalalignment) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumHorizontalalignment) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumHorizontalalignment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumHorizontalalignment(val *EnumHorizontalalignment) *NullableEnumHorizontalalignment {
	return &NullableEnumHorizontalalignment{value: val, isSet: true}
}

func (v NullableEnumHorizontalalignment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumHorizontalalignment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

