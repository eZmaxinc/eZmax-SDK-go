/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"fmt"
)

// FieldEWebhookManagementevent This Management Event. This property will be set only if the Module is \"Management\".
type FieldEWebhookManagementevent string

// List of Field-eWebhookManagementevent
const (
	USER_CREATED FieldEWebhookManagementevent = "UserCreated"
	USERSTAGED_CREATED FieldEWebhookManagementevent = "UserstagedCreated"
)

// All allowed values of FieldEWebhookManagementevent enum
var AllowedFieldEWebhookManagementeventEnumValues = []FieldEWebhookManagementevent{
	"UserCreated",
	"UserstagedCreated",
}

func (v *FieldEWebhookManagementevent) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := FieldEWebhookManagementevent(value)
	for _, existing := range AllowedFieldEWebhookManagementeventEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid FieldEWebhookManagementevent", value)
}

// NewFieldEWebhookManagementeventFromValue returns a pointer to a valid FieldEWebhookManagementevent
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewFieldEWebhookManagementeventFromValue(v string) (*FieldEWebhookManagementevent, error) {
	ev := FieldEWebhookManagementevent(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for FieldEWebhookManagementevent: valid values are %v", v, AllowedFieldEWebhookManagementeventEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v FieldEWebhookManagementevent) IsValid() bool {
	for _, existing := range AllowedFieldEWebhookManagementeventEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Field-eWebhookManagementevent value
func (v FieldEWebhookManagementevent) Ptr() *FieldEWebhookManagementevent {
	return &v
}

type NullableFieldEWebhookManagementevent struct {
	value *FieldEWebhookManagementevent
	isSet bool
}

func (v NullableFieldEWebhookManagementevent) Get() *FieldEWebhookManagementevent {
	return v.value
}

func (v *NullableFieldEWebhookManagementevent) Set(val *FieldEWebhookManagementevent) {
	v.value = val
	v.isSet = true
}

func (v NullableFieldEWebhookManagementevent) IsSet() bool {
	return v.isSet
}

func (v *NullableFieldEWebhookManagementevent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFieldEWebhookManagementevent(val *FieldEWebhookManagementevent) *NullableFieldEWebhookManagementevent {
	return &NullableFieldEWebhookManagementevent{value: val, isSet: true}
}

func (v NullableFieldEWebhookManagementevent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFieldEWebhookManagementevent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

