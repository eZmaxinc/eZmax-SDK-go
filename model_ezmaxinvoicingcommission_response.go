/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzmaxinvoicingcommissionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzmaxinvoicingcommissionResponse{}

// EzmaxinvoicingcommissionResponse A Ezmaxinvoicingcommission Object
type EzmaxinvoicingcommissionResponse struct {
	// The unique ID of the Ezmaxinvoicingcommission
	PkiEzmaxinvoicingcommissionID *int32 `json:"pkiEzmaxinvoicingcommissionID,omitempty"`
	// The unique ID of the Ezmaxinvoicingsummaryglobal
	FkiEzmaxinvoicingsummaryglobalID *int32 `json:"fkiEzmaxinvoicingsummaryglobalID,omitempty"`
	// The unique ID of the Ezmaxpartner
	FkiEzmaxpartnerID *int32 `json:"fkiEzmaxpartnerID,omitempty"`
	// The unique ID of the Ezmaxrepresentative
	FkiEzmaxrepresentativeID *int32 `json:"fkiEzmaxrepresentativeID,omitempty"`
	// The start date for the Ezmaxinvoicingcommission
	DtEzmaxinvoicingcommissionStart string `json:"dtEzmaxinvoicingcommissionStart"`
	// The end date for the Ezmaxinvoicingcommission
	DtEzmaxinvoicingcommissionEnd string `json:"dtEzmaxinvoicingcommissionEnd"`
	// This is the number of days during the month on which the Ezmaxinvoigcommission applies
	IEzmaxinvoicingcommissionDays int32 `json:"iEzmaxinvoicingcommissionDays"`
	// The amount of Ezmaxinvoicingcommission
	DEzmaxinvoicingcommissionAmount string `json:"dEzmaxinvoicingcommissionAmount"`
}

type _EzmaxinvoicingcommissionResponse EzmaxinvoicingcommissionResponse

// NewEzmaxinvoicingcommissionResponse instantiates a new EzmaxinvoicingcommissionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzmaxinvoicingcommissionResponse(dtEzmaxinvoicingcommissionStart string, dtEzmaxinvoicingcommissionEnd string, iEzmaxinvoicingcommissionDays int32, dEzmaxinvoicingcommissionAmount string) *EzmaxinvoicingcommissionResponse {
	this := EzmaxinvoicingcommissionResponse{}
	this.DtEzmaxinvoicingcommissionStart = dtEzmaxinvoicingcommissionStart
	this.DtEzmaxinvoicingcommissionEnd = dtEzmaxinvoicingcommissionEnd
	this.IEzmaxinvoicingcommissionDays = iEzmaxinvoicingcommissionDays
	this.DEzmaxinvoicingcommissionAmount = dEzmaxinvoicingcommissionAmount
	return &this
}

// NewEzmaxinvoicingcommissionResponseWithDefaults instantiates a new EzmaxinvoicingcommissionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzmaxinvoicingcommissionResponseWithDefaults() *EzmaxinvoicingcommissionResponse {
	this := EzmaxinvoicingcommissionResponse{}
	return &this
}

// GetPkiEzmaxinvoicingcommissionID returns the PkiEzmaxinvoicingcommissionID field value if set, zero value otherwise.
func (o *EzmaxinvoicingcommissionResponse) GetPkiEzmaxinvoicingcommissionID() int32 {
	if o == nil || IsNil(o.PkiEzmaxinvoicingcommissionID) {
		var ret int32
		return ret
	}
	return *o.PkiEzmaxinvoicingcommissionID
}

// GetPkiEzmaxinvoicingcommissionIDOk returns a tuple with the PkiEzmaxinvoicingcommissionID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzmaxinvoicingcommissionResponse) GetPkiEzmaxinvoicingcommissionIDOk() (*int32, bool) {
	if o == nil || IsNil(o.PkiEzmaxinvoicingcommissionID) {
		return nil, false
	}
	return o.PkiEzmaxinvoicingcommissionID, true
}

// HasPkiEzmaxinvoicingcommissionID returns a boolean if a field has been set.
func (o *EzmaxinvoicingcommissionResponse) HasPkiEzmaxinvoicingcommissionID() bool {
	if o != nil && !IsNil(o.PkiEzmaxinvoicingcommissionID) {
		return true
	}

	return false
}

// SetPkiEzmaxinvoicingcommissionID gets a reference to the given int32 and assigns it to the PkiEzmaxinvoicingcommissionID field.
func (o *EzmaxinvoicingcommissionResponse) SetPkiEzmaxinvoicingcommissionID(v int32) {
	o.PkiEzmaxinvoicingcommissionID = &v
}

// GetFkiEzmaxinvoicingsummaryglobalID returns the FkiEzmaxinvoicingsummaryglobalID field value if set, zero value otherwise.
func (o *EzmaxinvoicingcommissionResponse) GetFkiEzmaxinvoicingsummaryglobalID() int32 {
	if o == nil || IsNil(o.FkiEzmaxinvoicingsummaryglobalID) {
		var ret int32
		return ret
	}
	return *o.FkiEzmaxinvoicingsummaryglobalID
}

// GetFkiEzmaxinvoicingsummaryglobalIDOk returns a tuple with the FkiEzmaxinvoicingsummaryglobalID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzmaxinvoicingcommissionResponse) GetFkiEzmaxinvoicingsummaryglobalIDOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiEzmaxinvoicingsummaryglobalID) {
		return nil, false
	}
	return o.FkiEzmaxinvoicingsummaryglobalID, true
}

// HasFkiEzmaxinvoicingsummaryglobalID returns a boolean if a field has been set.
func (o *EzmaxinvoicingcommissionResponse) HasFkiEzmaxinvoicingsummaryglobalID() bool {
	if o != nil && !IsNil(o.FkiEzmaxinvoicingsummaryglobalID) {
		return true
	}

	return false
}

// SetFkiEzmaxinvoicingsummaryglobalID gets a reference to the given int32 and assigns it to the FkiEzmaxinvoicingsummaryglobalID field.
func (o *EzmaxinvoicingcommissionResponse) SetFkiEzmaxinvoicingsummaryglobalID(v int32) {
	o.FkiEzmaxinvoicingsummaryglobalID = &v
}

// GetFkiEzmaxpartnerID returns the FkiEzmaxpartnerID field value if set, zero value otherwise.
func (o *EzmaxinvoicingcommissionResponse) GetFkiEzmaxpartnerID() int32 {
	if o == nil || IsNil(o.FkiEzmaxpartnerID) {
		var ret int32
		return ret
	}
	return *o.FkiEzmaxpartnerID
}

// GetFkiEzmaxpartnerIDOk returns a tuple with the FkiEzmaxpartnerID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzmaxinvoicingcommissionResponse) GetFkiEzmaxpartnerIDOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiEzmaxpartnerID) {
		return nil, false
	}
	return o.FkiEzmaxpartnerID, true
}

// HasFkiEzmaxpartnerID returns a boolean if a field has been set.
func (o *EzmaxinvoicingcommissionResponse) HasFkiEzmaxpartnerID() bool {
	if o != nil && !IsNil(o.FkiEzmaxpartnerID) {
		return true
	}

	return false
}

// SetFkiEzmaxpartnerID gets a reference to the given int32 and assigns it to the FkiEzmaxpartnerID field.
func (o *EzmaxinvoicingcommissionResponse) SetFkiEzmaxpartnerID(v int32) {
	o.FkiEzmaxpartnerID = &v
}

// GetFkiEzmaxrepresentativeID returns the FkiEzmaxrepresentativeID field value if set, zero value otherwise.
func (o *EzmaxinvoicingcommissionResponse) GetFkiEzmaxrepresentativeID() int32 {
	if o == nil || IsNil(o.FkiEzmaxrepresentativeID) {
		var ret int32
		return ret
	}
	return *o.FkiEzmaxrepresentativeID
}

// GetFkiEzmaxrepresentativeIDOk returns a tuple with the FkiEzmaxrepresentativeID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzmaxinvoicingcommissionResponse) GetFkiEzmaxrepresentativeIDOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiEzmaxrepresentativeID) {
		return nil, false
	}
	return o.FkiEzmaxrepresentativeID, true
}

// HasFkiEzmaxrepresentativeID returns a boolean if a field has been set.
func (o *EzmaxinvoicingcommissionResponse) HasFkiEzmaxrepresentativeID() bool {
	if o != nil && !IsNil(o.FkiEzmaxrepresentativeID) {
		return true
	}

	return false
}

// SetFkiEzmaxrepresentativeID gets a reference to the given int32 and assigns it to the FkiEzmaxrepresentativeID field.
func (o *EzmaxinvoicingcommissionResponse) SetFkiEzmaxrepresentativeID(v int32) {
	o.FkiEzmaxrepresentativeID = &v
}

// GetDtEzmaxinvoicingcommissionStart returns the DtEzmaxinvoicingcommissionStart field value
func (o *EzmaxinvoicingcommissionResponse) GetDtEzmaxinvoicingcommissionStart() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DtEzmaxinvoicingcommissionStart
}

// GetDtEzmaxinvoicingcommissionStartOk returns a tuple with the DtEzmaxinvoicingcommissionStart field value
// and a boolean to check if the value has been set.
func (o *EzmaxinvoicingcommissionResponse) GetDtEzmaxinvoicingcommissionStartOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DtEzmaxinvoicingcommissionStart, true
}

// SetDtEzmaxinvoicingcommissionStart sets field value
func (o *EzmaxinvoicingcommissionResponse) SetDtEzmaxinvoicingcommissionStart(v string) {
	o.DtEzmaxinvoicingcommissionStart = v
}

// GetDtEzmaxinvoicingcommissionEnd returns the DtEzmaxinvoicingcommissionEnd field value
func (o *EzmaxinvoicingcommissionResponse) GetDtEzmaxinvoicingcommissionEnd() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DtEzmaxinvoicingcommissionEnd
}

// GetDtEzmaxinvoicingcommissionEndOk returns a tuple with the DtEzmaxinvoicingcommissionEnd field value
// and a boolean to check if the value has been set.
func (o *EzmaxinvoicingcommissionResponse) GetDtEzmaxinvoicingcommissionEndOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DtEzmaxinvoicingcommissionEnd, true
}

// SetDtEzmaxinvoicingcommissionEnd sets field value
func (o *EzmaxinvoicingcommissionResponse) SetDtEzmaxinvoicingcommissionEnd(v string) {
	o.DtEzmaxinvoicingcommissionEnd = v
}

// GetIEzmaxinvoicingcommissionDays returns the IEzmaxinvoicingcommissionDays field value
func (o *EzmaxinvoicingcommissionResponse) GetIEzmaxinvoicingcommissionDays() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IEzmaxinvoicingcommissionDays
}

// GetIEzmaxinvoicingcommissionDaysOk returns a tuple with the IEzmaxinvoicingcommissionDays field value
// and a boolean to check if the value has been set.
func (o *EzmaxinvoicingcommissionResponse) GetIEzmaxinvoicingcommissionDaysOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IEzmaxinvoicingcommissionDays, true
}

// SetIEzmaxinvoicingcommissionDays sets field value
func (o *EzmaxinvoicingcommissionResponse) SetIEzmaxinvoicingcommissionDays(v int32) {
	o.IEzmaxinvoicingcommissionDays = v
}

// GetDEzmaxinvoicingcommissionAmount returns the DEzmaxinvoicingcommissionAmount field value
func (o *EzmaxinvoicingcommissionResponse) GetDEzmaxinvoicingcommissionAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DEzmaxinvoicingcommissionAmount
}

// GetDEzmaxinvoicingcommissionAmountOk returns a tuple with the DEzmaxinvoicingcommissionAmount field value
// and a boolean to check if the value has been set.
func (o *EzmaxinvoicingcommissionResponse) GetDEzmaxinvoicingcommissionAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DEzmaxinvoicingcommissionAmount, true
}

// SetDEzmaxinvoicingcommissionAmount sets field value
func (o *EzmaxinvoicingcommissionResponse) SetDEzmaxinvoicingcommissionAmount(v string) {
	o.DEzmaxinvoicingcommissionAmount = v
}

func (o EzmaxinvoicingcommissionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzmaxinvoicingcommissionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PkiEzmaxinvoicingcommissionID) {
		toSerialize["pkiEzmaxinvoicingcommissionID"] = o.PkiEzmaxinvoicingcommissionID
	}
	if !IsNil(o.FkiEzmaxinvoicingsummaryglobalID) {
		toSerialize["fkiEzmaxinvoicingsummaryglobalID"] = o.FkiEzmaxinvoicingsummaryglobalID
	}
	if !IsNil(o.FkiEzmaxpartnerID) {
		toSerialize["fkiEzmaxpartnerID"] = o.FkiEzmaxpartnerID
	}
	if !IsNil(o.FkiEzmaxrepresentativeID) {
		toSerialize["fkiEzmaxrepresentativeID"] = o.FkiEzmaxrepresentativeID
	}
	toSerialize["dtEzmaxinvoicingcommissionStart"] = o.DtEzmaxinvoicingcommissionStart
	toSerialize["dtEzmaxinvoicingcommissionEnd"] = o.DtEzmaxinvoicingcommissionEnd
	toSerialize["iEzmaxinvoicingcommissionDays"] = o.IEzmaxinvoicingcommissionDays
	toSerialize["dEzmaxinvoicingcommissionAmount"] = o.DEzmaxinvoicingcommissionAmount
	return toSerialize, nil
}

func (o *EzmaxinvoicingcommissionResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dtEzmaxinvoicingcommissionStart",
		"dtEzmaxinvoicingcommissionEnd",
		"iEzmaxinvoicingcommissionDays",
		"dEzmaxinvoicingcommissionAmount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzmaxinvoicingcommissionResponse := _EzmaxinvoicingcommissionResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzmaxinvoicingcommissionResponse)

	if err != nil {
		return err
	}

	*o = EzmaxinvoicingcommissionResponse(varEzmaxinvoicingcommissionResponse)

	return err
}

type NullableEzmaxinvoicingcommissionResponse struct {
	value *EzmaxinvoicingcommissionResponse
	isSet bool
}

func (v NullableEzmaxinvoicingcommissionResponse) Get() *EzmaxinvoicingcommissionResponse {
	return v.value
}

func (v *NullableEzmaxinvoicingcommissionResponse) Set(val *EzmaxinvoicingcommissionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableEzmaxinvoicingcommissionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableEzmaxinvoicingcommissionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzmaxinvoicingcommissionResponse(val *EzmaxinvoicingcommissionResponse) *NullableEzmaxinvoicingcommissionResponse {
	return &NullableEzmaxinvoicingcommissionResponse{value: val, isSet: true}
}

func (v NullableEzmaxinvoicingcommissionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzmaxinvoicingcommissionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


