/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// checks if the UsergroupdelegationEditObjectV1Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UsergroupdelegationEditObjectV1Request{}

// UsergroupdelegationEditObjectV1Request Request for PUT /1/object/usergroupdelegation/{pkiUsergroupdelegationID}
type UsergroupdelegationEditObjectV1Request struct {
	ObjUsergroupdelegation UsergroupdelegationRequestCompound `json:"objUsergroupdelegation"`
}

// NewUsergroupdelegationEditObjectV1Request instantiates a new UsergroupdelegationEditObjectV1Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsergroupdelegationEditObjectV1Request(objUsergroupdelegation UsergroupdelegationRequestCompound) *UsergroupdelegationEditObjectV1Request {
	this := UsergroupdelegationEditObjectV1Request{}
	this.ObjUsergroupdelegation = objUsergroupdelegation
	return &this
}

// NewUsergroupdelegationEditObjectV1RequestWithDefaults instantiates a new UsergroupdelegationEditObjectV1Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsergroupdelegationEditObjectV1RequestWithDefaults() *UsergroupdelegationEditObjectV1Request {
	this := UsergroupdelegationEditObjectV1Request{}
	return &this
}

// GetObjUsergroupdelegation returns the ObjUsergroupdelegation field value
func (o *UsergroupdelegationEditObjectV1Request) GetObjUsergroupdelegation() UsergroupdelegationRequestCompound {
	if o == nil {
		var ret UsergroupdelegationRequestCompound
		return ret
	}

	return o.ObjUsergroupdelegation
}

// GetObjUsergroupdelegationOk returns a tuple with the ObjUsergroupdelegation field value
// and a boolean to check if the value has been set.
func (o *UsergroupdelegationEditObjectV1Request) GetObjUsergroupdelegationOk() (*UsergroupdelegationRequestCompound, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjUsergroupdelegation, true
}

// SetObjUsergroupdelegation sets field value
func (o *UsergroupdelegationEditObjectV1Request) SetObjUsergroupdelegation(v UsergroupdelegationRequestCompound) {
	o.ObjUsergroupdelegation = v
}

func (o UsergroupdelegationEditObjectV1Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UsergroupdelegationEditObjectV1Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["objUsergroupdelegation"] = o.ObjUsergroupdelegation
	return toSerialize, nil
}

type NullableUsergroupdelegationEditObjectV1Request struct {
	value *UsergroupdelegationEditObjectV1Request
	isSet bool
}

func (v NullableUsergroupdelegationEditObjectV1Request) Get() *UsergroupdelegationEditObjectV1Request {
	return v.value
}

func (v *NullableUsergroupdelegationEditObjectV1Request) Set(val *UsergroupdelegationEditObjectV1Request) {
	v.value = val
	v.isSet = true
}

func (v NullableUsergroupdelegationEditObjectV1Request) IsSet() bool {
	return v.isSet
}

func (v *NullableUsergroupdelegationEditObjectV1Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsergroupdelegationEditObjectV1Request(val *UsergroupdelegationEditObjectV1Request) *NullableUsergroupdelegationEditObjectV1Request {
	return &NullableUsergroupdelegationEditObjectV1Request{value: val, isSet: true}
}

func (v NullableUsergroupdelegationEditObjectV1Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsergroupdelegationEditObjectV1Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


