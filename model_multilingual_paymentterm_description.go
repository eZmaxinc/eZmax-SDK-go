/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// checks if the MultilingualPaymenttermDescription type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultilingualPaymenttermDescription{}

// MultilingualPaymenttermDescription Description of the Paymentterm
type MultilingualPaymenttermDescription struct {
	// The description of the Paymentterm in French
	SPaymenttermDescription1 *string `json:"sPaymenttermDescription1,omitempty"`
	// The description of the Paymentterm in English
	SPaymenttermDescription2 *string `json:"sPaymenttermDescription2,omitempty"`
}

// NewMultilingualPaymenttermDescription instantiates a new MultilingualPaymenttermDescription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultilingualPaymenttermDescription() *MultilingualPaymenttermDescription {
	this := MultilingualPaymenttermDescription{}
	return &this
}

// NewMultilingualPaymenttermDescriptionWithDefaults instantiates a new MultilingualPaymenttermDescription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultilingualPaymenttermDescriptionWithDefaults() *MultilingualPaymenttermDescription {
	this := MultilingualPaymenttermDescription{}
	return &this
}

// GetSPaymenttermDescription1 returns the SPaymenttermDescription1 field value if set, zero value otherwise.
func (o *MultilingualPaymenttermDescription) GetSPaymenttermDescription1() string {
	if o == nil || IsNil(o.SPaymenttermDescription1) {
		var ret string
		return ret
	}
	return *o.SPaymenttermDescription1
}

// GetSPaymenttermDescription1Ok returns a tuple with the SPaymenttermDescription1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultilingualPaymenttermDescription) GetSPaymenttermDescription1Ok() (*string, bool) {
	if o == nil || IsNil(o.SPaymenttermDescription1) {
		return nil, false
	}
	return o.SPaymenttermDescription1, true
}

// HasSPaymenttermDescription1 returns a boolean if a field has been set.
func (o *MultilingualPaymenttermDescription) HasSPaymenttermDescription1() bool {
	if o != nil && !IsNil(o.SPaymenttermDescription1) {
		return true
	}

	return false
}

// SetSPaymenttermDescription1 gets a reference to the given string and assigns it to the SPaymenttermDescription1 field.
func (o *MultilingualPaymenttermDescription) SetSPaymenttermDescription1(v string) {
	o.SPaymenttermDescription1 = &v
}

// GetSPaymenttermDescription2 returns the SPaymenttermDescription2 field value if set, zero value otherwise.
func (o *MultilingualPaymenttermDescription) GetSPaymenttermDescription2() string {
	if o == nil || IsNil(o.SPaymenttermDescription2) {
		var ret string
		return ret
	}
	return *o.SPaymenttermDescription2
}

// GetSPaymenttermDescription2Ok returns a tuple with the SPaymenttermDescription2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultilingualPaymenttermDescription) GetSPaymenttermDescription2Ok() (*string, bool) {
	if o == nil || IsNil(o.SPaymenttermDescription2) {
		return nil, false
	}
	return o.SPaymenttermDescription2, true
}

// HasSPaymenttermDescription2 returns a boolean if a field has been set.
func (o *MultilingualPaymenttermDescription) HasSPaymenttermDescription2() bool {
	if o != nil && !IsNil(o.SPaymenttermDescription2) {
		return true
	}

	return false
}

// SetSPaymenttermDescription2 gets a reference to the given string and assigns it to the SPaymenttermDescription2 field.
func (o *MultilingualPaymenttermDescription) SetSPaymenttermDescription2(v string) {
	o.SPaymenttermDescription2 = &v
}

func (o MultilingualPaymenttermDescription) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultilingualPaymenttermDescription) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SPaymenttermDescription1) {
		toSerialize["sPaymenttermDescription1"] = o.SPaymenttermDescription1
	}
	if !IsNil(o.SPaymenttermDescription2) {
		toSerialize["sPaymenttermDescription2"] = o.SPaymenttermDescription2
	}
	return toSerialize, nil
}

type NullableMultilingualPaymenttermDescription struct {
	value *MultilingualPaymenttermDescription
	isSet bool
}

func (v NullableMultilingualPaymenttermDescription) Get() *MultilingualPaymenttermDescription {
	return v.value
}

func (v *NullableMultilingualPaymenttermDescription) Set(val *MultilingualPaymenttermDescription) {
	v.value = val
	v.isSet = true
}

func (v NullableMultilingualPaymenttermDescription) IsSet() bool {
	return v.isSet
}

func (v *NullableMultilingualPaymenttermDescription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultilingualPaymenttermDescription(val *MultilingualPaymenttermDescription) *NullableMultilingualPaymenttermDescription {
	return &NullableMultilingualPaymenttermDescription{value: val, isSet: true}
}

func (v NullableMultilingualPaymenttermDescription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultilingualPaymenttermDescription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


