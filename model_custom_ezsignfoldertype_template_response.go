/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.2
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CustomEzsignfoldertypeTemplateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomEzsignfoldertypeTemplateResponse{}

// CustomEzsignfoldertypeTemplateResponse A Custom Ezsignfoldertype Object
type CustomEzsignfoldertypeTemplateResponse struct {
	// The unique ID of the Ezsignfoldertype.
	PkiEzsignfoldertypeID int32 `json:"pkiEzsignfoldertypeID"`
	// Whether we allow the proof to be downloaded by an Ezsignsigner
	BEzsignfoldertypeAllowdownloadproofezsignsigner *bool `json:"bEzsignfoldertypeAllowdownloadproofezsignsigner,omitempty"`
}

type _CustomEzsignfoldertypeTemplateResponse CustomEzsignfoldertypeTemplateResponse

// NewCustomEzsignfoldertypeTemplateResponse instantiates a new CustomEzsignfoldertypeTemplateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomEzsignfoldertypeTemplateResponse(pkiEzsignfoldertypeID int32) *CustomEzsignfoldertypeTemplateResponse {
	this := CustomEzsignfoldertypeTemplateResponse{}
	this.PkiEzsignfoldertypeID = pkiEzsignfoldertypeID
	return &this
}

// NewCustomEzsignfoldertypeTemplateResponseWithDefaults instantiates a new CustomEzsignfoldertypeTemplateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomEzsignfoldertypeTemplateResponseWithDefaults() *CustomEzsignfoldertypeTemplateResponse {
	this := CustomEzsignfoldertypeTemplateResponse{}
	return &this
}

// GetPkiEzsignfoldertypeID returns the PkiEzsignfoldertypeID field value
func (o *CustomEzsignfoldertypeTemplateResponse) GetPkiEzsignfoldertypeID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PkiEzsignfoldertypeID
}

// GetPkiEzsignfoldertypeIDOk returns a tuple with the PkiEzsignfoldertypeID field value
// and a boolean to check if the value has been set.
func (o *CustomEzsignfoldertypeTemplateResponse) GetPkiEzsignfoldertypeIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkiEzsignfoldertypeID, true
}

// SetPkiEzsignfoldertypeID sets field value
func (o *CustomEzsignfoldertypeTemplateResponse) SetPkiEzsignfoldertypeID(v int32) {
	o.PkiEzsignfoldertypeID = v
}

// GetBEzsignfoldertypeAllowdownloadproofezsignsigner returns the BEzsignfoldertypeAllowdownloadproofezsignsigner field value if set, zero value otherwise.
func (o *CustomEzsignfoldertypeTemplateResponse) GetBEzsignfoldertypeAllowdownloadproofezsignsigner() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeAllowdownloadproofezsignsigner) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeAllowdownloadproofezsignsigner
}

// GetBEzsignfoldertypeAllowdownloadproofezsignsignerOk returns a tuple with the BEzsignfoldertypeAllowdownloadproofezsignsigner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomEzsignfoldertypeTemplateResponse) GetBEzsignfoldertypeAllowdownloadproofezsignsignerOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeAllowdownloadproofezsignsigner) {
		return nil, false
	}
	return o.BEzsignfoldertypeAllowdownloadproofezsignsigner, true
}

// HasBEzsignfoldertypeAllowdownloadproofezsignsigner returns a boolean if a field has been set.
func (o *CustomEzsignfoldertypeTemplateResponse) HasBEzsignfoldertypeAllowdownloadproofezsignsigner() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeAllowdownloadproofezsignsigner) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeAllowdownloadproofezsignsigner gets a reference to the given bool and assigns it to the BEzsignfoldertypeAllowdownloadproofezsignsigner field.
func (o *CustomEzsignfoldertypeTemplateResponse) SetBEzsignfoldertypeAllowdownloadproofezsignsigner(v bool) {
	o.BEzsignfoldertypeAllowdownloadproofezsignsigner = &v
}

func (o CustomEzsignfoldertypeTemplateResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomEzsignfoldertypeTemplateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pkiEzsignfoldertypeID"] = o.PkiEzsignfoldertypeID
	if !IsNil(o.BEzsignfoldertypeAllowdownloadproofezsignsigner) {
		toSerialize["bEzsignfoldertypeAllowdownloadproofezsignsigner"] = o.BEzsignfoldertypeAllowdownloadproofezsignsigner
	}
	return toSerialize, nil
}

func (o *CustomEzsignfoldertypeTemplateResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pkiEzsignfoldertypeID",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomEzsignfoldertypeTemplateResponse := _CustomEzsignfoldertypeTemplateResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCustomEzsignfoldertypeTemplateResponse)

	if err != nil {
		return err
	}

	*o = CustomEzsignfoldertypeTemplateResponse(varCustomEzsignfoldertypeTemplateResponse)

	return err
}

type NullableCustomEzsignfoldertypeTemplateResponse struct {
	value *CustomEzsignfoldertypeTemplateResponse
	isSet bool
}

func (v NullableCustomEzsignfoldertypeTemplateResponse) Get() *CustomEzsignfoldertypeTemplateResponse {
	return v.value
}

func (v *NullableCustomEzsignfoldertypeTemplateResponse) Set(val *CustomEzsignfoldertypeTemplateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomEzsignfoldertypeTemplateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomEzsignfoldertypeTemplateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomEzsignfoldertypeTemplateResponse(val *CustomEzsignfoldertypeTemplateResponse) *NullableCustomEzsignfoldertypeTemplateResponse {
	return &NullableCustomEzsignfoldertypeTemplateResponse{value: val, isSet: true}
}

func (v NullableCustomEzsignfoldertypeTemplateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomEzsignfoldertypeTemplateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


