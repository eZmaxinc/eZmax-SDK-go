/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.2
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// checks if the MultilingualUserlogintypeDescription type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultilingualUserlogintypeDescription{}

// MultilingualUserlogintypeDescription The description of the Userlogintype
type MultilingualUserlogintypeDescription struct {
	// The description of the Userlogintype in French
	SUserlogintypeDescription1 *string `json:"sUserlogintypeDescription1,omitempty" validate:"regexp=^.{0,50}$"`
	// The description of the Userlogintype in English
	SUserlogintypeDescription2 *string `json:"sUserlogintypeDescription2,omitempty" validate:"regexp=^.{0,50}$"`
}

// NewMultilingualUserlogintypeDescription instantiates a new MultilingualUserlogintypeDescription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultilingualUserlogintypeDescription() *MultilingualUserlogintypeDescription {
	this := MultilingualUserlogintypeDescription{}
	return &this
}

// NewMultilingualUserlogintypeDescriptionWithDefaults instantiates a new MultilingualUserlogintypeDescription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultilingualUserlogintypeDescriptionWithDefaults() *MultilingualUserlogintypeDescription {
	this := MultilingualUserlogintypeDescription{}
	return &this
}

// GetSUserlogintypeDescription1 returns the SUserlogintypeDescription1 field value if set, zero value otherwise.
func (o *MultilingualUserlogintypeDescription) GetSUserlogintypeDescription1() string {
	if o == nil || IsNil(o.SUserlogintypeDescription1) {
		var ret string
		return ret
	}
	return *o.SUserlogintypeDescription1
}

// GetSUserlogintypeDescription1Ok returns a tuple with the SUserlogintypeDescription1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultilingualUserlogintypeDescription) GetSUserlogintypeDescription1Ok() (*string, bool) {
	if o == nil || IsNil(o.SUserlogintypeDescription1) {
		return nil, false
	}
	return o.SUserlogintypeDescription1, true
}

// HasSUserlogintypeDescription1 returns a boolean if a field has been set.
func (o *MultilingualUserlogintypeDescription) HasSUserlogintypeDescription1() bool {
	if o != nil && !IsNil(o.SUserlogintypeDescription1) {
		return true
	}

	return false
}

// SetSUserlogintypeDescription1 gets a reference to the given string and assigns it to the SUserlogintypeDescription1 field.
func (o *MultilingualUserlogintypeDescription) SetSUserlogintypeDescription1(v string) {
	o.SUserlogintypeDescription1 = &v
}

// GetSUserlogintypeDescription2 returns the SUserlogintypeDescription2 field value if set, zero value otherwise.
func (o *MultilingualUserlogintypeDescription) GetSUserlogintypeDescription2() string {
	if o == nil || IsNil(o.SUserlogintypeDescription2) {
		var ret string
		return ret
	}
	return *o.SUserlogintypeDescription2
}

// GetSUserlogintypeDescription2Ok returns a tuple with the SUserlogintypeDescription2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultilingualUserlogintypeDescription) GetSUserlogintypeDescription2Ok() (*string, bool) {
	if o == nil || IsNil(o.SUserlogintypeDescription2) {
		return nil, false
	}
	return o.SUserlogintypeDescription2, true
}

// HasSUserlogintypeDescription2 returns a boolean if a field has been set.
func (o *MultilingualUserlogintypeDescription) HasSUserlogintypeDescription2() bool {
	if o != nil && !IsNil(o.SUserlogintypeDescription2) {
		return true
	}

	return false
}

// SetSUserlogintypeDescription2 gets a reference to the given string and assigns it to the SUserlogintypeDescription2 field.
func (o *MultilingualUserlogintypeDescription) SetSUserlogintypeDescription2(v string) {
	o.SUserlogintypeDescription2 = &v
}

func (o MultilingualUserlogintypeDescription) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultilingualUserlogintypeDescription) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SUserlogintypeDescription1) {
		toSerialize["sUserlogintypeDescription1"] = o.SUserlogintypeDescription1
	}
	if !IsNil(o.SUserlogintypeDescription2) {
		toSerialize["sUserlogintypeDescription2"] = o.SUserlogintypeDescription2
	}
	return toSerialize, nil
}

type NullableMultilingualUserlogintypeDescription struct {
	value *MultilingualUserlogintypeDescription
	isSet bool
}

func (v NullableMultilingualUserlogintypeDescription) Get() *MultilingualUserlogintypeDescription {
	return v.value
}

func (v *NullableMultilingualUserlogintypeDescription) Set(val *MultilingualUserlogintypeDescription) {
	v.value = val
	v.isSet = true
}

func (v NullableMultilingualUserlogintypeDescription) IsSet() bool {
	return v.isSet
}

func (v *NullableMultilingualUserlogintypeDescription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultilingualUserlogintypeDescription(val *MultilingualUserlogintypeDescription) *NullableMultilingualUserlogintypeDescription {
	return &NullableMultilingualUserlogintypeDescription{value: val, isSet: true}
}

func (v NullableMultilingualUserlogintypeDescription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultilingualUserlogintypeDescription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


