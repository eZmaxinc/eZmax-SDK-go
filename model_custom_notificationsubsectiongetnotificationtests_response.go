/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CustomNotificationsubsectiongetnotificationtestsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomNotificationsubsectiongetnotificationtestsResponse{}

// CustomNotificationsubsectiongetnotificationtestsResponse A Notificationsubsection Object in the context of getNotificationtests
type CustomNotificationsubsectiongetnotificationtestsResponse struct {
	NotificationsubsectionResponse
	AObjNotificationtest []CustomNotificationtestgetnotificationtestsResponse `json:"a_objNotificationtest"`
}

type _CustomNotificationsubsectiongetnotificationtestsResponse CustomNotificationsubsectiongetnotificationtestsResponse

// NewCustomNotificationsubsectiongetnotificationtestsResponse instantiates a new CustomNotificationsubsectiongetnotificationtestsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomNotificationsubsectiongetnotificationtestsResponse(aObjNotificationtest []CustomNotificationtestgetnotificationtestsResponse, pkiNotificationsubsectionID int32, fkiNotificationsectionID int32, sNotificationsubsectionNameX string) *CustomNotificationsubsectiongetnotificationtestsResponse {
	this := CustomNotificationsubsectiongetnotificationtestsResponse{}
	this.PkiNotificationsubsectionID = pkiNotificationsubsectionID
	this.FkiNotificationsectionID = fkiNotificationsectionID
	this.SNotificationsubsectionNameX = sNotificationsubsectionNameX
	this.AObjNotificationtest = aObjNotificationtest
	return &this
}

// NewCustomNotificationsubsectiongetnotificationtestsResponseWithDefaults instantiates a new CustomNotificationsubsectiongetnotificationtestsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomNotificationsubsectiongetnotificationtestsResponseWithDefaults() *CustomNotificationsubsectiongetnotificationtestsResponse {
	this := CustomNotificationsubsectiongetnotificationtestsResponse{}
	return &this
}

// GetAObjNotificationtest returns the AObjNotificationtest field value
func (o *CustomNotificationsubsectiongetnotificationtestsResponse) GetAObjNotificationtest() []CustomNotificationtestgetnotificationtestsResponse {
	if o == nil {
		var ret []CustomNotificationtestgetnotificationtestsResponse
		return ret
	}

	return o.AObjNotificationtest
}

// GetAObjNotificationtestOk returns a tuple with the AObjNotificationtest field value
// and a boolean to check if the value has been set.
func (o *CustomNotificationsubsectiongetnotificationtestsResponse) GetAObjNotificationtestOk() ([]CustomNotificationtestgetnotificationtestsResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.AObjNotificationtest, true
}

// SetAObjNotificationtest sets field value
func (o *CustomNotificationsubsectiongetnotificationtestsResponse) SetAObjNotificationtest(v []CustomNotificationtestgetnotificationtestsResponse) {
	o.AObjNotificationtest = v
}

func (o CustomNotificationsubsectiongetnotificationtestsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomNotificationsubsectiongetnotificationtestsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["a_objNotificationtest"] = o.AObjNotificationtest
	return toSerialize, nil
}

func (o *CustomNotificationsubsectiongetnotificationtestsResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"a_objNotificationtest",
		"pkiNotificationsubsectionID",
		"fkiNotificationsectionID",
		"sNotificationsubsectionNameX",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomNotificationsubsectiongetnotificationtestsResponse := _CustomNotificationsubsectiongetnotificationtestsResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCustomNotificationsubsectiongetnotificationtestsResponse)

	if err != nil {
		return err
	}

	*o = CustomNotificationsubsectiongetnotificationtestsResponse(varCustomNotificationsubsectiongetnotificationtestsResponse)

	return err
}

type NullableCustomNotificationsubsectiongetnotificationtestsResponse struct {
	value *CustomNotificationsubsectiongetnotificationtestsResponse
	isSet bool
}

func (v NullableCustomNotificationsubsectiongetnotificationtestsResponse) Get() *CustomNotificationsubsectiongetnotificationtestsResponse {
	return v.value
}

func (v *NullableCustomNotificationsubsectiongetnotificationtestsResponse) Set(val *CustomNotificationsubsectiongetnotificationtestsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomNotificationsubsectiongetnotificationtestsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomNotificationsubsectiongetnotificationtestsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomNotificationsubsectiongetnotificationtestsResponse(val *CustomNotificationsubsectiongetnotificationtestsResponse) *NullableCustomNotificationsubsectiongetnotificationtestsResponse {
	return &NullableCustomNotificationsubsectiongetnotificationtestsResponse{value: val, isSet: true}
}

func (v NullableCustomNotificationsubsectiongetnotificationtestsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomNotificationsubsectiongetnotificationtestsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


