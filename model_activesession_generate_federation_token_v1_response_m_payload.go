/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ActivesessionGenerateFederationTokenV1ResponseMPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActivesessionGenerateFederationTokenV1ResponseMPayload{}

// ActivesessionGenerateFederationTokenV1ResponseMPayload Payload for POST /1/object/activesession/generateFederationToken
type ActivesessionGenerateFederationTokenV1ResponseMPayload struct {
	ObjApikeyfederation CustomApikeyfederation `json:"objApikeyfederation"`
	// The url of the server the Ezmaxcustomer is located
	SEzmaxcustomercodeUrl string `json:"sEzmaxcustomercodeUrl" validate:"regexp=^(https|http):\\/\\/[^\\\\s\\/$.?#].[^\\\\s]*$"`
}

type _ActivesessionGenerateFederationTokenV1ResponseMPayload ActivesessionGenerateFederationTokenV1ResponseMPayload

// NewActivesessionGenerateFederationTokenV1ResponseMPayload instantiates a new ActivesessionGenerateFederationTokenV1ResponseMPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivesessionGenerateFederationTokenV1ResponseMPayload(objApikeyfederation CustomApikeyfederation, sEzmaxcustomercodeUrl string) *ActivesessionGenerateFederationTokenV1ResponseMPayload {
	this := ActivesessionGenerateFederationTokenV1ResponseMPayload{}
	this.ObjApikeyfederation = objApikeyfederation
	this.SEzmaxcustomercodeUrl = sEzmaxcustomercodeUrl
	return &this
}

// NewActivesessionGenerateFederationTokenV1ResponseMPayloadWithDefaults instantiates a new ActivesessionGenerateFederationTokenV1ResponseMPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivesessionGenerateFederationTokenV1ResponseMPayloadWithDefaults() *ActivesessionGenerateFederationTokenV1ResponseMPayload {
	this := ActivesessionGenerateFederationTokenV1ResponseMPayload{}
	return &this
}

// GetObjApikeyfederation returns the ObjApikeyfederation field value
func (o *ActivesessionGenerateFederationTokenV1ResponseMPayload) GetObjApikeyfederation() CustomApikeyfederation {
	if o == nil {
		var ret CustomApikeyfederation
		return ret
	}

	return o.ObjApikeyfederation
}

// GetObjApikeyfederationOk returns a tuple with the ObjApikeyfederation field value
// and a boolean to check if the value has been set.
func (o *ActivesessionGenerateFederationTokenV1ResponseMPayload) GetObjApikeyfederationOk() (*CustomApikeyfederation, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjApikeyfederation, true
}

// SetObjApikeyfederation sets field value
func (o *ActivesessionGenerateFederationTokenV1ResponseMPayload) SetObjApikeyfederation(v CustomApikeyfederation) {
	o.ObjApikeyfederation = v
}

// GetSEzmaxcustomercodeUrl returns the SEzmaxcustomercodeUrl field value
func (o *ActivesessionGenerateFederationTokenV1ResponseMPayload) GetSEzmaxcustomercodeUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SEzmaxcustomercodeUrl
}

// GetSEzmaxcustomercodeUrlOk returns a tuple with the SEzmaxcustomercodeUrl field value
// and a boolean to check if the value has been set.
func (o *ActivesessionGenerateFederationTokenV1ResponseMPayload) GetSEzmaxcustomercodeUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SEzmaxcustomercodeUrl, true
}

// SetSEzmaxcustomercodeUrl sets field value
func (o *ActivesessionGenerateFederationTokenV1ResponseMPayload) SetSEzmaxcustomercodeUrl(v string) {
	o.SEzmaxcustomercodeUrl = v
}

func (o ActivesessionGenerateFederationTokenV1ResponseMPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActivesessionGenerateFederationTokenV1ResponseMPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["objApikeyfederation"] = o.ObjApikeyfederation
	toSerialize["sEzmaxcustomercodeUrl"] = o.SEzmaxcustomercodeUrl
	return toSerialize, nil
}

func (o *ActivesessionGenerateFederationTokenV1ResponseMPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"objApikeyfederation",
		"sEzmaxcustomercodeUrl",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varActivesessionGenerateFederationTokenV1ResponseMPayload := _ActivesessionGenerateFederationTokenV1ResponseMPayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varActivesessionGenerateFederationTokenV1ResponseMPayload)

	if err != nil {
		return err
	}

	*o = ActivesessionGenerateFederationTokenV1ResponseMPayload(varActivesessionGenerateFederationTokenV1ResponseMPayload)

	return err
}

type NullableActivesessionGenerateFederationTokenV1ResponseMPayload struct {
	value *ActivesessionGenerateFederationTokenV1ResponseMPayload
	isSet bool
}

func (v NullableActivesessionGenerateFederationTokenV1ResponseMPayload) Get() *ActivesessionGenerateFederationTokenV1ResponseMPayload {
	return v.value
}

func (v *NullableActivesessionGenerateFederationTokenV1ResponseMPayload) Set(val *ActivesessionGenerateFederationTokenV1ResponseMPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableActivesessionGenerateFederationTokenV1ResponseMPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableActivesessionGenerateFederationTokenV1ResponseMPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivesessionGenerateFederationTokenV1ResponseMPayload(val *ActivesessionGenerateFederationTokenV1ResponseMPayload) *NullableActivesessionGenerateFederationTokenV1ResponseMPayload {
	return &NullableActivesessionGenerateFederationTokenV1ResponseMPayload{value: val, isSet: true}
}

func (v NullableActivesessionGenerateFederationTokenV1ResponseMPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivesessionGenerateFederationTokenV1ResponseMPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


