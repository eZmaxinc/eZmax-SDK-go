/*
eZmax API Definition

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.1.4
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// EzsignsignatureRequestCompoundAllOf struct for EzsignsignatureRequestCompoundAllOf
type EzsignsignatureRequestCompoundAllOf struct {
	// Whether the Ezsignsignature has a custom date format or not. (Only possible when eEzsignsignatureType is \"Name\" or \"Handwritten\")
	BEzsignsignatureCustomdate *bool `json:"bEzsignsignatureCustomdate,omitempty"`
	// An array of custom date blocks that will be filled at the time of signature.  Can only be used if bEzsignsignatureCustomdate is true.  Use an empty array if you don't want to have a date at all.
	AObjEzsignsignaturecustomdate []EzsignsignaturecustomdateRequest `json:"a_objEzsignsignaturecustomdate,omitempty"`
}

// NewEzsignsignatureRequestCompoundAllOf instantiates a new EzsignsignatureRequestCompoundAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsignsignatureRequestCompoundAllOf() *EzsignsignatureRequestCompoundAllOf {
	this := EzsignsignatureRequestCompoundAllOf{}
	return &this
}

// NewEzsignsignatureRequestCompoundAllOfWithDefaults instantiates a new EzsignsignatureRequestCompoundAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsignsignatureRequestCompoundAllOfWithDefaults() *EzsignsignatureRequestCompoundAllOf {
	this := EzsignsignatureRequestCompoundAllOf{}
	return &this
}

// GetBEzsignsignatureCustomdate returns the BEzsignsignatureCustomdate field value if set, zero value otherwise.
func (o *EzsignsignatureRequestCompoundAllOf) GetBEzsignsignatureCustomdate() bool {
	if o == nil || o.BEzsignsignatureCustomdate == nil {
		var ret bool
		return ret
	}
	return *o.BEzsignsignatureCustomdate
}

// GetBEzsignsignatureCustomdateOk returns a tuple with the BEzsignsignatureCustomdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignsignatureRequestCompoundAllOf) GetBEzsignsignatureCustomdateOk() (*bool, bool) {
	if o == nil || o.BEzsignsignatureCustomdate == nil {
		return nil, false
	}
	return o.BEzsignsignatureCustomdate, true
}

// HasBEzsignsignatureCustomdate returns a boolean if a field has been set.
func (o *EzsignsignatureRequestCompoundAllOf) HasBEzsignsignatureCustomdate() bool {
	if o != nil && o.BEzsignsignatureCustomdate != nil {
		return true
	}

	return false
}

// SetBEzsignsignatureCustomdate gets a reference to the given bool and assigns it to the BEzsignsignatureCustomdate field.
func (o *EzsignsignatureRequestCompoundAllOf) SetBEzsignsignatureCustomdate(v bool) {
	o.BEzsignsignatureCustomdate = &v
}

// GetAObjEzsignsignaturecustomdate returns the AObjEzsignsignaturecustomdate field value if set, zero value otherwise.
func (o *EzsignsignatureRequestCompoundAllOf) GetAObjEzsignsignaturecustomdate() []EzsignsignaturecustomdateRequest {
	if o == nil || o.AObjEzsignsignaturecustomdate == nil {
		var ret []EzsignsignaturecustomdateRequest
		return ret
	}
	return o.AObjEzsignsignaturecustomdate
}

// GetAObjEzsignsignaturecustomdateOk returns a tuple with the AObjEzsignsignaturecustomdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignsignatureRequestCompoundAllOf) GetAObjEzsignsignaturecustomdateOk() ([]EzsignsignaturecustomdateRequest, bool) {
	if o == nil || o.AObjEzsignsignaturecustomdate == nil {
		return nil, false
	}
	return o.AObjEzsignsignaturecustomdate, true
}

// HasAObjEzsignsignaturecustomdate returns a boolean if a field has been set.
func (o *EzsignsignatureRequestCompoundAllOf) HasAObjEzsignsignaturecustomdate() bool {
	if o != nil && o.AObjEzsignsignaturecustomdate != nil {
		return true
	}

	return false
}

// SetAObjEzsignsignaturecustomdate gets a reference to the given []EzsignsignaturecustomdateRequest and assigns it to the AObjEzsignsignaturecustomdate field.
func (o *EzsignsignatureRequestCompoundAllOf) SetAObjEzsignsignaturecustomdate(v []EzsignsignaturecustomdateRequest) {
	o.AObjEzsignsignaturecustomdate = v
}

func (o EzsignsignatureRequestCompoundAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BEzsignsignatureCustomdate != nil {
		toSerialize["bEzsignsignatureCustomdate"] = o.BEzsignsignatureCustomdate
	}
	if o.AObjEzsignsignaturecustomdate != nil {
		toSerialize["a_objEzsignsignaturecustomdate"] = o.AObjEzsignsignaturecustomdate
	}
	return json.Marshal(toSerialize)
}

type NullableEzsignsignatureRequestCompoundAllOf struct {
	value *EzsignsignatureRequestCompoundAllOf
	isSet bool
}

func (v NullableEzsignsignatureRequestCompoundAllOf) Get() *EzsignsignatureRequestCompoundAllOf {
	return v.value
}

func (v *NullableEzsignsignatureRequestCompoundAllOf) Set(val *EzsignsignatureRequestCompoundAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsignsignatureRequestCompoundAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsignsignatureRequestCompoundAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsignsignatureRequestCompoundAllOf(val *EzsignsignatureRequestCompoundAllOf) *NullableEzsignsignatureRequestCompoundAllOf {
	return &NullableEzsignsignatureRequestCompoundAllOf{value: val, isSet: true}
}

func (v NullableEzsignsignatureRequestCompoundAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsignsignatureRequestCompoundAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


