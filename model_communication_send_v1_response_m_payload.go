/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CommunicationSendV1ResponseMPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommunicationSendV1ResponseMPayload{}

// CommunicationSendV1ResponseMPayload Payload for POST /1/object/communication
type CommunicationSendV1ResponseMPayload struct {
	// An array of unique IDs representing the object that were requested to be created.  They are returned in the same order as the array containing the objects to be created that was sent in the request.
	APkiCommunicationID []int32 `json:"a_pkiCommunicationID"`
}

type _CommunicationSendV1ResponseMPayload CommunicationSendV1ResponseMPayload

// NewCommunicationSendV1ResponseMPayload instantiates a new CommunicationSendV1ResponseMPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommunicationSendV1ResponseMPayload(aPkiCommunicationID []int32) *CommunicationSendV1ResponseMPayload {
	this := CommunicationSendV1ResponseMPayload{}
	this.APkiCommunicationID = aPkiCommunicationID
	return &this
}

// NewCommunicationSendV1ResponseMPayloadWithDefaults instantiates a new CommunicationSendV1ResponseMPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommunicationSendV1ResponseMPayloadWithDefaults() *CommunicationSendV1ResponseMPayload {
	this := CommunicationSendV1ResponseMPayload{}
	return &this
}

// GetAPkiCommunicationID returns the APkiCommunicationID field value
func (o *CommunicationSendV1ResponseMPayload) GetAPkiCommunicationID() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.APkiCommunicationID
}

// GetAPkiCommunicationIDOk returns a tuple with the APkiCommunicationID field value
// and a boolean to check if the value has been set.
func (o *CommunicationSendV1ResponseMPayload) GetAPkiCommunicationIDOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.APkiCommunicationID, true
}

// SetAPkiCommunicationID sets field value
func (o *CommunicationSendV1ResponseMPayload) SetAPkiCommunicationID(v []int32) {
	o.APkiCommunicationID = v
}

func (o CommunicationSendV1ResponseMPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommunicationSendV1ResponseMPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["a_pkiCommunicationID"] = o.APkiCommunicationID
	return toSerialize, nil
}

func (o *CommunicationSendV1ResponseMPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"a_pkiCommunicationID",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCommunicationSendV1ResponseMPayload := _CommunicationSendV1ResponseMPayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCommunicationSendV1ResponseMPayload)

	if err != nil {
		return err
	}

	*o = CommunicationSendV1ResponseMPayload(varCommunicationSendV1ResponseMPayload)

	return err
}

type NullableCommunicationSendV1ResponseMPayload struct {
	value *CommunicationSendV1ResponseMPayload
	isSet bool
}

func (v NullableCommunicationSendV1ResponseMPayload) Get() *CommunicationSendV1ResponseMPayload {
	return v.value
}

func (v *NullableCommunicationSendV1ResponseMPayload) Set(val *CommunicationSendV1ResponseMPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableCommunicationSendV1ResponseMPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableCommunicationSendV1ResponseMPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommunicationSendV1ResponseMPayload(val *CommunicationSendV1ResponseMPayload) *NullableCommunicationSendV1ResponseMPayload {
	return &NullableCommunicationSendV1ResponseMPayload{value: val, isSet: true}
}

func (v NullableCommunicationSendV1ResponseMPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommunicationSendV1ResponseMPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


