/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// checks if the UsergroupmembershipResponseCompound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UsergroupmembershipResponseCompound{}

// UsergroupmembershipResponseCompound A Usergroupmembership Object
type UsergroupmembershipResponseCompound struct {
	// The unique ID of the Usergroupmembership
	PkiUsergroupmembershipID int32 `json:"pkiUsergroupmembershipID"`
	// The unique ID of the Usergroup
	FkiUsergroupID int32 `json:"fkiUsergroupID"`
	// The unique ID of the User
	FkiUserID int32 `json:"fkiUserID"`
	// The first name of the user
	SUserFirstname string `json:"sUserFirstname"`
	// The last name of the user
	SUserLastname string `json:"sUserLastname"`
	// The login name of the User.
	SUserLoginname string `json:"sUserLoginname"`
	// The email address.
	SEmailAddress *string `json:"sEmailAddress,omitempty"`
	// The Name of the Usergroup in the language of the requester
	SUsergroupNameX string `json:"sUsergroupNameX"`
}

// NewUsergroupmembershipResponseCompound instantiates a new UsergroupmembershipResponseCompound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsergroupmembershipResponseCompound(pkiUsergroupmembershipID int32, fkiUsergroupID int32, fkiUserID int32, sUserFirstname string, sUserLastname string, sUserLoginname string, sUsergroupNameX string) *UsergroupmembershipResponseCompound {
	this := UsergroupmembershipResponseCompound{}
	this.PkiUsergroupmembershipID = pkiUsergroupmembershipID
	this.FkiUsergroupID = fkiUsergroupID
	this.FkiUserID = fkiUserID
	this.SUserFirstname = sUserFirstname
	this.SUserLastname = sUserLastname
	this.SUserLoginname = sUserLoginname
	this.SUsergroupNameX = sUsergroupNameX
	return &this
}

// NewUsergroupmembershipResponseCompoundWithDefaults instantiates a new UsergroupmembershipResponseCompound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsergroupmembershipResponseCompoundWithDefaults() *UsergroupmembershipResponseCompound {
	this := UsergroupmembershipResponseCompound{}
	return &this
}

// GetPkiUsergroupmembershipID returns the PkiUsergroupmembershipID field value
func (o *UsergroupmembershipResponseCompound) GetPkiUsergroupmembershipID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PkiUsergroupmembershipID
}

// GetPkiUsergroupmembershipIDOk returns a tuple with the PkiUsergroupmembershipID field value
// and a boolean to check if the value has been set.
func (o *UsergroupmembershipResponseCompound) GetPkiUsergroupmembershipIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkiUsergroupmembershipID, true
}

// SetPkiUsergroupmembershipID sets field value
func (o *UsergroupmembershipResponseCompound) SetPkiUsergroupmembershipID(v int32) {
	o.PkiUsergroupmembershipID = v
}

// GetFkiUsergroupID returns the FkiUsergroupID field value
func (o *UsergroupmembershipResponseCompound) GetFkiUsergroupID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiUsergroupID
}

// GetFkiUsergroupIDOk returns a tuple with the FkiUsergroupID field value
// and a boolean to check if the value has been set.
func (o *UsergroupmembershipResponseCompound) GetFkiUsergroupIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiUsergroupID, true
}

// SetFkiUsergroupID sets field value
func (o *UsergroupmembershipResponseCompound) SetFkiUsergroupID(v int32) {
	o.FkiUsergroupID = v
}

// GetFkiUserID returns the FkiUserID field value
func (o *UsergroupmembershipResponseCompound) GetFkiUserID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiUserID
}

// GetFkiUserIDOk returns a tuple with the FkiUserID field value
// and a boolean to check if the value has been set.
func (o *UsergroupmembershipResponseCompound) GetFkiUserIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiUserID, true
}

// SetFkiUserID sets field value
func (o *UsergroupmembershipResponseCompound) SetFkiUserID(v int32) {
	o.FkiUserID = v
}

// GetSUserFirstname returns the SUserFirstname field value
func (o *UsergroupmembershipResponseCompound) GetSUserFirstname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SUserFirstname
}

// GetSUserFirstnameOk returns a tuple with the SUserFirstname field value
// and a boolean to check if the value has been set.
func (o *UsergroupmembershipResponseCompound) GetSUserFirstnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SUserFirstname, true
}

// SetSUserFirstname sets field value
func (o *UsergroupmembershipResponseCompound) SetSUserFirstname(v string) {
	o.SUserFirstname = v
}

// GetSUserLastname returns the SUserLastname field value
func (o *UsergroupmembershipResponseCompound) GetSUserLastname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SUserLastname
}

// GetSUserLastnameOk returns a tuple with the SUserLastname field value
// and a boolean to check if the value has been set.
func (o *UsergroupmembershipResponseCompound) GetSUserLastnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SUserLastname, true
}

// SetSUserLastname sets field value
func (o *UsergroupmembershipResponseCompound) SetSUserLastname(v string) {
	o.SUserLastname = v
}

// GetSUserLoginname returns the SUserLoginname field value
func (o *UsergroupmembershipResponseCompound) GetSUserLoginname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SUserLoginname
}

// GetSUserLoginnameOk returns a tuple with the SUserLoginname field value
// and a boolean to check if the value has been set.
func (o *UsergroupmembershipResponseCompound) GetSUserLoginnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SUserLoginname, true
}

// SetSUserLoginname sets field value
func (o *UsergroupmembershipResponseCompound) SetSUserLoginname(v string) {
	o.SUserLoginname = v
}

// GetSEmailAddress returns the SEmailAddress field value if set, zero value otherwise.
func (o *UsergroupmembershipResponseCompound) GetSEmailAddress() string {
	if o == nil || IsNil(o.SEmailAddress) {
		var ret string
		return ret
	}
	return *o.SEmailAddress
}

// GetSEmailAddressOk returns a tuple with the SEmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsergroupmembershipResponseCompound) GetSEmailAddressOk() (*string, bool) {
	if o == nil || IsNil(o.SEmailAddress) {
		return nil, false
	}
	return o.SEmailAddress, true
}

// HasSEmailAddress returns a boolean if a field has been set.
func (o *UsergroupmembershipResponseCompound) HasSEmailAddress() bool {
	if o != nil && !IsNil(o.SEmailAddress) {
		return true
	}

	return false
}

// SetSEmailAddress gets a reference to the given string and assigns it to the SEmailAddress field.
func (o *UsergroupmembershipResponseCompound) SetSEmailAddress(v string) {
	o.SEmailAddress = &v
}

// GetSUsergroupNameX returns the SUsergroupNameX field value
func (o *UsergroupmembershipResponseCompound) GetSUsergroupNameX() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SUsergroupNameX
}

// GetSUsergroupNameXOk returns a tuple with the SUsergroupNameX field value
// and a boolean to check if the value has been set.
func (o *UsergroupmembershipResponseCompound) GetSUsergroupNameXOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SUsergroupNameX, true
}

// SetSUsergroupNameX sets field value
func (o *UsergroupmembershipResponseCompound) SetSUsergroupNameX(v string) {
	o.SUsergroupNameX = v
}

func (o UsergroupmembershipResponseCompound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UsergroupmembershipResponseCompound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pkiUsergroupmembershipID"] = o.PkiUsergroupmembershipID
	toSerialize["fkiUsergroupID"] = o.FkiUsergroupID
	toSerialize["fkiUserID"] = o.FkiUserID
	toSerialize["sUserFirstname"] = o.SUserFirstname
	toSerialize["sUserLastname"] = o.SUserLastname
	toSerialize["sUserLoginname"] = o.SUserLoginname
	if !IsNil(o.SEmailAddress) {
		toSerialize["sEmailAddress"] = o.SEmailAddress
	}
	toSerialize["sUsergroupNameX"] = o.SUsergroupNameX
	return toSerialize, nil
}

type NullableUsergroupmembershipResponseCompound struct {
	value *UsergroupmembershipResponseCompound
	isSet bool
}

func (v NullableUsergroupmembershipResponseCompound) Get() *UsergroupmembershipResponseCompound {
	return v.value
}

func (v *NullableUsergroupmembershipResponseCompound) Set(val *UsergroupmembershipResponseCompound) {
	v.value = val
	v.isSet = true
}

func (v NullableUsergroupmembershipResponseCompound) IsSet() bool {
	return v.isSet
}

func (v *NullableUsergroupmembershipResponseCompound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsergroupmembershipResponseCompound(val *UsergroupmembershipResponseCompound) *NullableUsergroupmembershipResponseCompound {
	return &NullableUsergroupmembershipResponseCompound{value: val, isSet: true}
}

func (v NullableUsergroupmembershipResponseCompound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsergroupmembershipResponseCompound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


