/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.2
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CustomEzsignimportdocumentResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomEzsignimportdocumentResponse{}

// CustomEzsignimportdocumentResponse An Ezsignimportdocument
type CustomEzsignimportdocumentResponse struct {
	// The unique ID of the Ezsignimportdocument
	PkiEzsignimportdocumentID int32 `json:"pkiEzsignimportdocumentID"`
	// The name of the Ezsignimportdocument
	SEzsignimportdocumentName string `json:"sEzsignimportdocumentName" validate:"regexp=^.{0,150}$"`
	// The unique ID of the Ezsignfolder
	FkiEzsignfolderID *int32 `json:"fkiEzsignfolderID,omitempty"`
	// The description of the Ezsignfolder
	SEzsignfolderDescription *string `json:"sEzsignfolderDescription,omitempty" validate:"regexp=^.{0,75}$"`
}

type _CustomEzsignimportdocumentResponse CustomEzsignimportdocumentResponse

// NewCustomEzsignimportdocumentResponse instantiates a new CustomEzsignimportdocumentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomEzsignimportdocumentResponse(pkiEzsignimportdocumentID int32, sEzsignimportdocumentName string) *CustomEzsignimportdocumentResponse {
	this := CustomEzsignimportdocumentResponse{}
	this.PkiEzsignimportdocumentID = pkiEzsignimportdocumentID
	this.SEzsignimportdocumentName = sEzsignimportdocumentName
	return &this
}

// NewCustomEzsignimportdocumentResponseWithDefaults instantiates a new CustomEzsignimportdocumentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomEzsignimportdocumentResponseWithDefaults() *CustomEzsignimportdocumentResponse {
	this := CustomEzsignimportdocumentResponse{}
	return &this
}

// GetPkiEzsignimportdocumentID returns the PkiEzsignimportdocumentID field value
func (o *CustomEzsignimportdocumentResponse) GetPkiEzsignimportdocumentID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PkiEzsignimportdocumentID
}

// GetPkiEzsignimportdocumentIDOk returns a tuple with the PkiEzsignimportdocumentID field value
// and a boolean to check if the value has been set.
func (o *CustomEzsignimportdocumentResponse) GetPkiEzsignimportdocumentIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkiEzsignimportdocumentID, true
}

// SetPkiEzsignimportdocumentID sets field value
func (o *CustomEzsignimportdocumentResponse) SetPkiEzsignimportdocumentID(v int32) {
	o.PkiEzsignimportdocumentID = v
}

// GetSEzsignimportdocumentName returns the SEzsignimportdocumentName field value
func (o *CustomEzsignimportdocumentResponse) GetSEzsignimportdocumentName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SEzsignimportdocumentName
}

// GetSEzsignimportdocumentNameOk returns a tuple with the SEzsignimportdocumentName field value
// and a boolean to check if the value has been set.
func (o *CustomEzsignimportdocumentResponse) GetSEzsignimportdocumentNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SEzsignimportdocumentName, true
}

// SetSEzsignimportdocumentName sets field value
func (o *CustomEzsignimportdocumentResponse) SetSEzsignimportdocumentName(v string) {
	o.SEzsignimportdocumentName = v
}

// GetFkiEzsignfolderID returns the FkiEzsignfolderID field value if set, zero value otherwise.
func (o *CustomEzsignimportdocumentResponse) GetFkiEzsignfolderID() int32 {
	if o == nil || IsNil(o.FkiEzsignfolderID) {
		var ret int32
		return ret
	}
	return *o.FkiEzsignfolderID
}

// GetFkiEzsignfolderIDOk returns a tuple with the FkiEzsignfolderID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomEzsignimportdocumentResponse) GetFkiEzsignfolderIDOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiEzsignfolderID) {
		return nil, false
	}
	return o.FkiEzsignfolderID, true
}

// HasFkiEzsignfolderID returns a boolean if a field has been set.
func (o *CustomEzsignimportdocumentResponse) HasFkiEzsignfolderID() bool {
	if o != nil && !IsNil(o.FkiEzsignfolderID) {
		return true
	}

	return false
}

// SetFkiEzsignfolderID gets a reference to the given int32 and assigns it to the FkiEzsignfolderID field.
func (o *CustomEzsignimportdocumentResponse) SetFkiEzsignfolderID(v int32) {
	o.FkiEzsignfolderID = &v
}

// GetSEzsignfolderDescription returns the SEzsignfolderDescription field value if set, zero value otherwise.
func (o *CustomEzsignimportdocumentResponse) GetSEzsignfolderDescription() string {
	if o == nil || IsNil(o.SEzsignfolderDescription) {
		var ret string
		return ret
	}
	return *o.SEzsignfolderDescription
}

// GetSEzsignfolderDescriptionOk returns a tuple with the SEzsignfolderDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomEzsignimportdocumentResponse) GetSEzsignfolderDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.SEzsignfolderDescription) {
		return nil, false
	}
	return o.SEzsignfolderDescription, true
}

// HasSEzsignfolderDescription returns a boolean if a field has been set.
func (o *CustomEzsignimportdocumentResponse) HasSEzsignfolderDescription() bool {
	if o != nil && !IsNil(o.SEzsignfolderDescription) {
		return true
	}

	return false
}

// SetSEzsignfolderDescription gets a reference to the given string and assigns it to the SEzsignfolderDescription field.
func (o *CustomEzsignimportdocumentResponse) SetSEzsignfolderDescription(v string) {
	o.SEzsignfolderDescription = &v
}

func (o CustomEzsignimportdocumentResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomEzsignimportdocumentResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pkiEzsignimportdocumentID"] = o.PkiEzsignimportdocumentID
	toSerialize["sEzsignimportdocumentName"] = o.SEzsignimportdocumentName
	if !IsNil(o.FkiEzsignfolderID) {
		toSerialize["fkiEzsignfolderID"] = o.FkiEzsignfolderID
	}
	if !IsNil(o.SEzsignfolderDescription) {
		toSerialize["sEzsignfolderDescription"] = o.SEzsignfolderDescription
	}
	return toSerialize, nil
}

func (o *CustomEzsignimportdocumentResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pkiEzsignimportdocumentID",
		"sEzsignimportdocumentName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomEzsignimportdocumentResponse := _CustomEzsignimportdocumentResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCustomEzsignimportdocumentResponse)

	if err != nil {
		return err
	}

	*o = CustomEzsignimportdocumentResponse(varCustomEzsignimportdocumentResponse)

	return err
}

type NullableCustomEzsignimportdocumentResponse struct {
	value *CustomEzsignimportdocumentResponse
	isSet bool
}

func (v NullableCustomEzsignimportdocumentResponse) Get() *CustomEzsignimportdocumentResponse {
	return v.value
}

func (v *NullableCustomEzsignimportdocumentResponse) Set(val *CustomEzsignimportdocumentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomEzsignimportdocumentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomEzsignimportdocumentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomEzsignimportdocumentResponse(val *CustomEzsignimportdocumentResponse) *NullableCustomEzsignimportdocumentResponse {
	return &NullableCustomEzsignimportdocumentResponse{value: val, isSet: true}
}

func (v NullableCustomEzsignimportdocumentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomEzsignimportdocumentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


