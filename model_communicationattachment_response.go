/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// checks if the CommunicationattachmentResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommunicationattachmentResponse{}

// CommunicationattachmentResponse A Communicationattachment Object
type CommunicationattachmentResponse struct {
	// The unique ID of the Communicationattachment
	PkiCommunicationattachmentID int32 `json:"pkiCommunicationattachmentID"`
	// The unique ID of the Attachment.
	FkiAttachmentID *int32 `json:"fkiAttachmentID,omitempty"`
	// The unique ID of the Invoice.
	FkiInvoiceID *int32 `json:"fkiInvoiceID,omitempty"`
	// The unique ID of the Salarypreparation.
	FkiSalarypreparationID *int32 `json:"fkiSalarypreparationID,omitempty"`
	// The name of the Communicationattachment
	SCommunicationattachmentName string `json:"sCommunicationattachmentName"`
	// The Url to the requested document.  Url will expire after 3 hours.
	SDownloadUrl *string `json:"sDownloadUrl,omitempty"`
}

// NewCommunicationattachmentResponse instantiates a new CommunicationattachmentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommunicationattachmentResponse(pkiCommunicationattachmentID int32, sCommunicationattachmentName string) *CommunicationattachmentResponse {
	this := CommunicationattachmentResponse{}
	this.PkiCommunicationattachmentID = pkiCommunicationattachmentID
	this.SCommunicationattachmentName = sCommunicationattachmentName
	return &this
}

// NewCommunicationattachmentResponseWithDefaults instantiates a new CommunicationattachmentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommunicationattachmentResponseWithDefaults() *CommunicationattachmentResponse {
	this := CommunicationattachmentResponse{}
	return &this
}

// GetPkiCommunicationattachmentID returns the PkiCommunicationattachmentID field value
func (o *CommunicationattachmentResponse) GetPkiCommunicationattachmentID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PkiCommunicationattachmentID
}

// GetPkiCommunicationattachmentIDOk returns a tuple with the PkiCommunicationattachmentID field value
// and a boolean to check if the value has been set.
func (o *CommunicationattachmentResponse) GetPkiCommunicationattachmentIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkiCommunicationattachmentID, true
}

// SetPkiCommunicationattachmentID sets field value
func (o *CommunicationattachmentResponse) SetPkiCommunicationattachmentID(v int32) {
	o.PkiCommunicationattachmentID = v
}

// GetFkiAttachmentID returns the FkiAttachmentID field value if set, zero value otherwise.
func (o *CommunicationattachmentResponse) GetFkiAttachmentID() int32 {
	if o == nil || IsNil(o.FkiAttachmentID) {
		var ret int32
		return ret
	}
	return *o.FkiAttachmentID
}

// GetFkiAttachmentIDOk returns a tuple with the FkiAttachmentID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommunicationattachmentResponse) GetFkiAttachmentIDOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiAttachmentID) {
		return nil, false
	}
	return o.FkiAttachmentID, true
}

// HasFkiAttachmentID returns a boolean if a field has been set.
func (o *CommunicationattachmentResponse) HasFkiAttachmentID() bool {
	if o != nil && !IsNil(o.FkiAttachmentID) {
		return true
	}

	return false
}

// SetFkiAttachmentID gets a reference to the given int32 and assigns it to the FkiAttachmentID field.
func (o *CommunicationattachmentResponse) SetFkiAttachmentID(v int32) {
	o.FkiAttachmentID = &v
}

// GetFkiInvoiceID returns the FkiInvoiceID field value if set, zero value otherwise.
func (o *CommunicationattachmentResponse) GetFkiInvoiceID() int32 {
	if o == nil || IsNil(o.FkiInvoiceID) {
		var ret int32
		return ret
	}
	return *o.FkiInvoiceID
}

// GetFkiInvoiceIDOk returns a tuple with the FkiInvoiceID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommunicationattachmentResponse) GetFkiInvoiceIDOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiInvoiceID) {
		return nil, false
	}
	return o.FkiInvoiceID, true
}

// HasFkiInvoiceID returns a boolean if a field has been set.
func (o *CommunicationattachmentResponse) HasFkiInvoiceID() bool {
	if o != nil && !IsNil(o.FkiInvoiceID) {
		return true
	}

	return false
}

// SetFkiInvoiceID gets a reference to the given int32 and assigns it to the FkiInvoiceID field.
func (o *CommunicationattachmentResponse) SetFkiInvoiceID(v int32) {
	o.FkiInvoiceID = &v
}

// GetFkiSalarypreparationID returns the FkiSalarypreparationID field value if set, zero value otherwise.
func (o *CommunicationattachmentResponse) GetFkiSalarypreparationID() int32 {
	if o == nil || IsNil(o.FkiSalarypreparationID) {
		var ret int32
		return ret
	}
	return *o.FkiSalarypreparationID
}

// GetFkiSalarypreparationIDOk returns a tuple with the FkiSalarypreparationID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommunicationattachmentResponse) GetFkiSalarypreparationIDOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiSalarypreparationID) {
		return nil, false
	}
	return o.FkiSalarypreparationID, true
}

// HasFkiSalarypreparationID returns a boolean if a field has been set.
func (o *CommunicationattachmentResponse) HasFkiSalarypreparationID() bool {
	if o != nil && !IsNil(o.FkiSalarypreparationID) {
		return true
	}

	return false
}

// SetFkiSalarypreparationID gets a reference to the given int32 and assigns it to the FkiSalarypreparationID field.
func (o *CommunicationattachmentResponse) SetFkiSalarypreparationID(v int32) {
	o.FkiSalarypreparationID = &v
}

// GetSCommunicationattachmentName returns the SCommunicationattachmentName field value
func (o *CommunicationattachmentResponse) GetSCommunicationattachmentName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SCommunicationattachmentName
}

// GetSCommunicationattachmentNameOk returns a tuple with the SCommunicationattachmentName field value
// and a boolean to check if the value has been set.
func (o *CommunicationattachmentResponse) GetSCommunicationattachmentNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SCommunicationattachmentName, true
}

// SetSCommunicationattachmentName sets field value
func (o *CommunicationattachmentResponse) SetSCommunicationattachmentName(v string) {
	o.SCommunicationattachmentName = v
}

// GetSDownloadUrl returns the SDownloadUrl field value if set, zero value otherwise.
func (o *CommunicationattachmentResponse) GetSDownloadUrl() string {
	if o == nil || IsNil(o.SDownloadUrl) {
		var ret string
		return ret
	}
	return *o.SDownloadUrl
}

// GetSDownloadUrlOk returns a tuple with the SDownloadUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommunicationattachmentResponse) GetSDownloadUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SDownloadUrl) {
		return nil, false
	}
	return o.SDownloadUrl, true
}

// HasSDownloadUrl returns a boolean if a field has been set.
func (o *CommunicationattachmentResponse) HasSDownloadUrl() bool {
	if o != nil && !IsNil(o.SDownloadUrl) {
		return true
	}

	return false
}

// SetSDownloadUrl gets a reference to the given string and assigns it to the SDownloadUrl field.
func (o *CommunicationattachmentResponse) SetSDownloadUrl(v string) {
	o.SDownloadUrl = &v
}

func (o CommunicationattachmentResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommunicationattachmentResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pkiCommunicationattachmentID"] = o.PkiCommunicationattachmentID
	if !IsNil(o.FkiAttachmentID) {
		toSerialize["fkiAttachmentID"] = o.FkiAttachmentID
	}
	if !IsNil(o.FkiInvoiceID) {
		toSerialize["fkiInvoiceID"] = o.FkiInvoiceID
	}
	if !IsNil(o.FkiSalarypreparationID) {
		toSerialize["fkiSalarypreparationID"] = o.FkiSalarypreparationID
	}
	toSerialize["sCommunicationattachmentName"] = o.SCommunicationattachmentName
	if !IsNil(o.SDownloadUrl) {
		toSerialize["sDownloadUrl"] = o.SDownloadUrl
	}
	return toSerialize, nil
}

type NullableCommunicationattachmentResponse struct {
	value *CommunicationattachmentResponse
	isSet bool
}

func (v NullableCommunicationattachmentResponse) Get() *CommunicationattachmentResponse {
	return v.value
}

func (v *NullableCommunicationattachmentResponse) Set(val *CommunicationattachmentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCommunicationattachmentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCommunicationattachmentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommunicationattachmentResponse(val *CommunicationattachmentResponse) *NullableCommunicationattachmentResponse {
	return &NullableCommunicationattachmentResponse{value: val, isSet: true}
}

func (v NullableCommunicationattachmentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommunicationattachmentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


