/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// checks if the ScimServiceProviderConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScimServiceProviderConfig{}

// ScimServiceProviderConfig struct for ScimServiceProviderConfig
type ScimServiceProviderConfig struct {
	// A multi-valued complex type that specifies supported authentication scheme properties.
	AuthenticationSchemes []ScimAuthenticationScheme `json:"authenticationSchemes"`
	Bulk ScimServiceProviderConfigBulk `json:"bulk"`
	ChangePassword ScimServiceProviderConfigChangePassword `json:"changePassword"`
	// An HTTP-addressable URL pointing to the service provider's human-consumable help documentation
	DocumentationUri string `json:"documentationUri"`
	Etag ScimServiceProviderConfigEtag `json:"etag"`
	Filter ScimServiceProviderConfigFilter `json:"filter"`
	Patch ScimServiceProviderConfigPatch `json:"patch"`
	Sort ScimServiceProviderConfigSort `json:"sort"`
}

// NewScimServiceProviderConfig instantiates a new ScimServiceProviderConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScimServiceProviderConfig(authenticationSchemes []ScimAuthenticationScheme, bulk ScimServiceProviderConfigBulk, changePassword ScimServiceProviderConfigChangePassword, documentationUri string, etag ScimServiceProviderConfigEtag, filter ScimServiceProviderConfigFilter, patch ScimServiceProviderConfigPatch, sort ScimServiceProviderConfigSort) *ScimServiceProviderConfig {
	this := ScimServiceProviderConfig{}
	this.AuthenticationSchemes = authenticationSchemes
	this.Bulk = bulk
	this.ChangePassword = changePassword
	this.DocumentationUri = documentationUri
	this.Etag = etag
	this.Filter = filter
	this.Patch = patch
	this.Sort = sort
	return &this
}

// NewScimServiceProviderConfigWithDefaults instantiates a new ScimServiceProviderConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScimServiceProviderConfigWithDefaults() *ScimServiceProviderConfig {
	this := ScimServiceProviderConfig{}
	return &this
}

// GetAuthenticationSchemes returns the AuthenticationSchemes field value
func (o *ScimServiceProviderConfig) GetAuthenticationSchemes() []ScimAuthenticationScheme {
	if o == nil {
		var ret []ScimAuthenticationScheme
		return ret
	}

	return o.AuthenticationSchemes
}

// GetAuthenticationSchemesOk returns a tuple with the AuthenticationSchemes field value
// and a boolean to check if the value has been set.
func (o *ScimServiceProviderConfig) GetAuthenticationSchemesOk() ([]ScimAuthenticationScheme, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuthenticationSchemes, true
}

// SetAuthenticationSchemes sets field value
func (o *ScimServiceProviderConfig) SetAuthenticationSchemes(v []ScimAuthenticationScheme) {
	o.AuthenticationSchemes = v
}

// GetBulk returns the Bulk field value
func (o *ScimServiceProviderConfig) GetBulk() ScimServiceProviderConfigBulk {
	if o == nil {
		var ret ScimServiceProviderConfigBulk
		return ret
	}

	return o.Bulk
}

// GetBulkOk returns a tuple with the Bulk field value
// and a boolean to check if the value has been set.
func (o *ScimServiceProviderConfig) GetBulkOk() (*ScimServiceProviderConfigBulk, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bulk, true
}

// SetBulk sets field value
func (o *ScimServiceProviderConfig) SetBulk(v ScimServiceProviderConfigBulk) {
	o.Bulk = v
}

// GetChangePassword returns the ChangePassword field value
func (o *ScimServiceProviderConfig) GetChangePassword() ScimServiceProviderConfigChangePassword {
	if o == nil {
		var ret ScimServiceProviderConfigChangePassword
		return ret
	}

	return o.ChangePassword
}

// GetChangePasswordOk returns a tuple with the ChangePassword field value
// and a boolean to check if the value has been set.
func (o *ScimServiceProviderConfig) GetChangePasswordOk() (*ScimServiceProviderConfigChangePassword, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChangePassword, true
}

// SetChangePassword sets field value
func (o *ScimServiceProviderConfig) SetChangePassword(v ScimServiceProviderConfigChangePassword) {
	o.ChangePassword = v
}

// GetDocumentationUri returns the DocumentationUri field value
func (o *ScimServiceProviderConfig) GetDocumentationUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DocumentationUri
}

// GetDocumentationUriOk returns a tuple with the DocumentationUri field value
// and a boolean to check if the value has been set.
func (o *ScimServiceProviderConfig) GetDocumentationUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DocumentationUri, true
}

// SetDocumentationUri sets field value
func (o *ScimServiceProviderConfig) SetDocumentationUri(v string) {
	o.DocumentationUri = v
}

// GetEtag returns the Etag field value
func (o *ScimServiceProviderConfig) GetEtag() ScimServiceProviderConfigEtag {
	if o == nil {
		var ret ScimServiceProviderConfigEtag
		return ret
	}

	return o.Etag
}

// GetEtagOk returns a tuple with the Etag field value
// and a boolean to check if the value has been set.
func (o *ScimServiceProviderConfig) GetEtagOk() (*ScimServiceProviderConfigEtag, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Etag, true
}

// SetEtag sets field value
func (o *ScimServiceProviderConfig) SetEtag(v ScimServiceProviderConfigEtag) {
	o.Etag = v
}

// GetFilter returns the Filter field value
func (o *ScimServiceProviderConfig) GetFilter() ScimServiceProviderConfigFilter {
	if o == nil {
		var ret ScimServiceProviderConfigFilter
		return ret
	}

	return o.Filter
}

// GetFilterOk returns a tuple with the Filter field value
// and a boolean to check if the value has been set.
func (o *ScimServiceProviderConfig) GetFilterOk() (*ScimServiceProviderConfigFilter, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Filter, true
}

// SetFilter sets field value
func (o *ScimServiceProviderConfig) SetFilter(v ScimServiceProviderConfigFilter) {
	o.Filter = v
}

// GetPatch returns the Patch field value
func (o *ScimServiceProviderConfig) GetPatch() ScimServiceProviderConfigPatch {
	if o == nil {
		var ret ScimServiceProviderConfigPatch
		return ret
	}

	return o.Patch
}

// GetPatchOk returns a tuple with the Patch field value
// and a boolean to check if the value has been set.
func (o *ScimServiceProviderConfig) GetPatchOk() (*ScimServiceProviderConfigPatch, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Patch, true
}

// SetPatch sets field value
func (o *ScimServiceProviderConfig) SetPatch(v ScimServiceProviderConfigPatch) {
	o.Patch = v
}

// GetSort returns the Sort field value
func (o *ScimServiceProviderConfig) GetSort() ScimServiceProviderConfigSort {
	if o == nil {
		var ret ScimServiceProviderConfigSort
		return ret
	}

	return o.Sort
}

// GetSortOk returns a tuple with the Sort field value
// and a boolean to check if the value has been set.
func (o *ScimServiceProviderConfig) GetSortOk() (*ScimServiceProviderConfigSort, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sort, true
}

// SetSort sets field value
func (o *ScimServiceProviderConfig) SetSort(v ScimServiceProviderConfigSort) {
	o.Sort = v
}

func (o ScimServiceProviderConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScimServiceProviderConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["authenticationSchemes"] = o.AuthenticationSchemes
	toSerialize["bulk"] = o.Bulk
	toSerialize["changePassword"] = o.ChangePassword
	toSerialize["documentationUri"] = o.DocumentationUri
	toSerialize["etag"] = o.Etag
	toSerialize["filter"] = o.Filter
	toSerialize["patch"] = o.Patch
	toSerialize["sort"] = o.Sort
	return toSerialize, nil
}

type NullableScimServiceProviderConfig struct {
	value *ScimServiceProviderConfig
	isSet bool
}

func (v NullableScimServiceProviderConfig) Get() *ScimServiceProviderConfig {
	return v.value
}

func (v *NullableScimServiceProviderConfig) Set(val *ScimServiceProviderConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableScimServiceProviderConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableScimServiceProviderConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScimServiceProviderConfig(val *ScimServiceProviderConfig) *NullableScimServiceProviderConfig {
	return &NullableScimServiceProviderConfig{value: val, isSet: true}
}

func (v NullableScimServiceProviderConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScimServiceProviderConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


