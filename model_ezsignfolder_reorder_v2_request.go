/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.2
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsignfolderReorderV2Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsignfolderReorderV2Request{}

// EzsignfolderReorderV2Request Request for POST /2/object/ezsignfolder/{pkiEzsignfolderID}/reorder
type EzsignfolderReorderV2Request struct {
	EEzsignfolderDocumentdependency *FieldEEzsignfolderDocumentdependency `json:"eEzsignfolderDocumentdependency,omitempty"`
	AObjEzsigndocument []CustomEzsigndocumentRequest `json:"a_objEzsigndocument"`
}

type _EzsignfolderReorderV2Request EzsignfolderReorderV2Request

// NewEzsignfolderReorderV2Request instantiates a new EzsignfolderReorderV2Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsignfolderReorderV2Request(aObjEzsigndocument []CustomEzsigndocumentRequest) *EzsignfolderReorderV2Request {
	this := EzsignfolderReorderV2Request{}
	this.AObjEzsigndocument = aObjEzsigndocument
	return &this
}

// NewEzsignfolderReorderV2RequestWithDefaults instantiates a new EzsignfolderReorderV2Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsignfolderReorderV2RequestWithDefaults() *EzsignfolderReorderV2Request {
	this := EzsignfolderReorderV2Request{}
	return &this
}

// GetEEzsignfolderDocumentdependency returns the EEzsignfolderDocumentdependency field value if set, zero value otherwise.
func (o *EzsignfolderReorderV2Request) GetEEzsignfolderDocumentdependency() FieldEEzsignfolderDocumentdependency {
	if o == nil || IsNil(o.EEzsignfolderDocumentdependency) {
		var ret FieldEEzsignfolderDocumentdependency
		return ret
	}
	return *o.EEzsignfolderDocumentdependency
}

// GetEEzsignfolderDocumentdependencyOk returns a tuple with the EEzsignfolderDocumentdependency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfolderReorderV2Request) GetEEzsignfolderDocumentdependencyOk() (*FieldEEzsignfolderDocumentdependency, bool) {
	if o == nil || IsNil(o.EEzsignfolderDocumentdependency) {
		return nil, false
	}
	return o.EEzsignfolderDocumentdependency, true
}

// HasEEzsignfolderDocumentdependency returns a boolean if a field has been set.
func (o *EzsignfolderReorderV2Request) HasEEzsignfolderDocumentdependency() bool {
	if o != nil && !IsNil(o.EEzsignfolderDocumentdependency) {
		return true
	}

	return false
}

// SetEEzsignfolderDocumentdependency gets a reference to the given FieldEEzsignfolderDocumentdependency and assigns it to the EEzsignfolderDocumentdependency field.
func (o *EzsignfolderReorderV2Request) SetEEzsignfolderDocumentdependency(v FieldEEzsignfolderDocumentdependency) {
	o.EEzsignfolderDocumentdependency = &v
}

// GetAObjEzsigndocument returns the AObjEzsigndocument field value
func (o *EzsignfolderReorderV2Request) GetAObjEzsigndocument() []CustomEzsigndocumentRequest {
	if o == nil {
		var ret []CustomEzsigndocumentRequest
		return ret
	}

	return o.AObjEzsigndocument
}

// GetAObjEzsigndocumentOk returns a tuple with the AObjEzsigndocument field value
// and a boolean to check if the value has been set.
func (o *EzsignfolderReorderV2Request) GetAObjEzsigndocumentOk() ([]CustomEzsigndocumentRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.AObjEzsigndocument, true
}

// SetAObjEzsigndocument sets field value
func (o *EzsignfolderReorderV2Request) SetAObjEzsigndocument(v []CustomEzsigndocumentRequest) {
	o.AObjEzsigndocument = v
}

func (o EzsignfolderReorderV2Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsignfolderReorderV2Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EEzsignfolderDocumentdependency) {
		toSerialize["eEzsignfolderDocumentdependency"] = o.EEzsignfolderDocumentdependency
	}
	toSerialize["a_objEzsigndocument"] = o.AObjEzsigndocument
	return toSerialize, nil
}

func (o *EzsignfolderReorderV2Request) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"a_objEzsigndocument",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsignfolderReorderV2Request := _EzsignfolderReorderV2Request{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsignfolderReorderV2Request)

	if err != nil {
		return err
	}

	*o = EzsignfolderReorderV2Request(varEzsignfolderReorderV2Request)

	return err
}

type NullableEzsignfolderReorderV2Request struct {
	value *EzsignfolderReorderV2Request
	isSet bool
}

func (v NullableEzsignfolderReorderV2Request) Get() *EzsignfolderReorderV2Request {
	return v.value
}

func (v *NullableEzsignfolderReorderV2Request) Set(val *EzsignfolderReorderV2Request) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsignfolderReorderV2Request) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsignfolderReorderV2Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsignfolderReorderV2Request(val *EzsignfolderReorderV2Request) *NullableEzsignfolderReorderV2Request {
	return &NullableEzsignfolderReorderV2Request{value: val, isSet: true}
}

func (v NullableEzsignfolderReorderV2Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsignfolderReorderV2Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


