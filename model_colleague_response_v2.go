/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.2
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ColleagueResponseV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ColleagueResponseV2{}

// ColleagueResponseV2 A Colleague Object
type ColleagueResponseV2 struct {
	// The unique ID of the Colleague
	PkiColleagueID int32 `json:"pkiColleagueID"`
	// The unique ID of the User
	FkiUserID int32 `json:"fkiUserID"`
	// The unique ID of the User
	FkiUserIDColleague int32 `json:"fkiUserIDColleague"`
	// Whether the email can be used by the cloning user in Ezsign
	BColleagueEzsignemail bool `json:"bColleagueEzsignemail"`
	// Whether the cloning user has access to the financial
	BColleagueFinancial bool `json:"bColleagueFinancial"`
	// Whether the cloning user has access to the cloned user email to send communications
	BColleagueUsecloneemail bool `json:"bColleagueUsecloneemail"`
	// Whether the cloning user has access to the attachment
	BColleagueAttachment bool `json:"bColleagueAttachment"`
	// Whether the cloning user has access to canafe
	BColleagueCanafe bool `json:"bColleagueCanafe"`
	// Whether the cloning user copies the permission of the cloned user
	BColleaguePermission bool `json:"bColleaguePermission"`
	// Whether if the cloning user has access to the completed folders in real estate
	BColleagueRealestatecompleted bool `json:"bColleagueRealestatecompleted"`
	// The from of the Colleague
	DtColleagueFrom *string `json:"dtColleagueFrom,omitempty" validate:"regexp=^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$"`
	// The to of the Colleague
	DtColleagueTo *string `json:"dtColleagueTo,omitempty" validate:"regexp=^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$"`
	EColleagueEzsign FieldEColleagueEzsign `json:"eColleagueEzsign"`
	EColleagueRealestateinprogress FieldEColleagueRealestateinprogess `json:"eColleagueRealestateinprogress"`
	ObjUserName CustomUserNameResponse `json:"objUserName"`
	ObjAudit CommonAudit `json:"objAudit"`
}

type _ColleagueResponseV2 ColleagueResponseV2

// NewColleagueResponseV2 instantiates a new ColleagueResponseV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewColleagueResponseV2(pkiColleagueID int32, fkiUserID int32, fkiUserIDColleague int32, bColleagueEzsignemail bool, bColleagueFinancial bool, bColleagueUsecloneemail bool, bColleagueAttachment bool, bColleagueCanafe bool, bColleaguePermission bool, bColleagueRealestatecompleted bool, eColleagueEzsign FieldEColleagueEzsign, eColleagueRealestateinprogress FieldEColleagueRealestateinprogess, objUserName CustomUserNameResponse, objAudit CommonAudit) *ColleagueResponseV2 {
	this := ColleagueResponseV2{}
	this.PkiColleagueID = pkiColleagueID
	this.FkiUserID = fkiUserID
	this.FkiUserIDColleague = fkiUserIDColleague
	this.BColleagueEzsignemail = bColleagueEzsignemail
	this.BColleagueFinancial = bColleagueFinancial
	this.BColleagueUsecloneemail = bColleagueUsecloneemail
	this.BColleagueAttachment = bColleagueAttachment
	this.BColleagueCanafe = bColleagueCanafe
	this.BColleaguePermission = bColleaguePermission
	this.BColleagueRealestatecompleted = bColleagueRealestatecompleted
	this.EColleagueEzsign = eColleagueEzsign
	this.EColleagueRealestateinprogress = eColleagueRealestateinprogress
	this.ObjUserName = objUserName
	this.ObjAudit = objAudit
	return &this
}

// NewColleagueResponseV2WithDefaults instantiates a new ColleagueResponseV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewColleagueResponseV2WithDefaults() *ColleagueResponseV2 {
	this := ColleagueResponseV2{}
	return &this
}

// GetPkiColleagueID returns the PkiColleagueID field value
func (o *ColleagueResponseV2) GetPkiColleagueID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PkiColleagueID
}

// GetPkiColleagueIDOk returns a tuple with the PkiColleagueID field value
// and a boolean to check if the value has been set.
func (o *ColleagueResponseV2) GetPkiColleagueIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkiColleagueID, true
}

// SetPkiColleagueID sets field value
func (o *ColleagueResponseV2) SetPkiColleagueID(v int32) {
	o.PkiColleagueID = v
}

// GetFkiUserID returns the FkiUserID field value
func (o *ColleagueResponseV2) GetFkiUserID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiUserID
}

// GetFkiUserIDOk returns a tuple with the FkiUserID field value
// and a boolean to check if the value has been set.
func (o *ColleagueResponseV2) GetFkiUserIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiUserID, true
}

// SetFkiUserID sets field value
func (o *ColleagueResponseV2) SetFkiUserID(v int32) {
	o.FkiUserID = v
}

// GetFkiUserIDColleague returns the FkiUserIDColleague field value
func (o *ColleagueResponseV2) GetFkiUserIDColleague() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiUserIDColleague
}

// GetFkiUserIDColleagueOk returns a tuple with the FkiUserIDColleague field value
// and a boolean to check if the value has been set.
func (o *ColleagueResponseV2) GetFkiUserIDColleagueOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiUserIDColleague, true
}

// SetFkiUserIDColleague sets field value
func (o *ColleagueResponseV2) SetFkiUserIDColleague(v int32) {
	o.FkiUserIDColleague = v
}

// GetBColleagueEzsignemail returns the BColleagueEzsignemail field value
func (o *ColleagueResponseV2) GetBColleagueEzsignemail() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BColleagueEzsignemail
}

// GetBColleagueEzsignemailOk returns a tuple with the BColleagueEzsignemail field value
// and a boolean to check if the value has been set.
func (o *ColleagueResponseV2) GetBColleagueEzsignemailOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BColleagueEzsignemail, true
}

// SetBColleagueEzsignemail sets field value
func (o *ColleagueResponseV2) SetBColleagueEzsignemail(v bool) {
	o.BColleagueEzsignemail = v
}

// GetBColleagueFinancial returns the BColleagueFinancial field value
func (o *ColleagueResponseV2) GetBColleagueFinancial() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BColleagueFinancial
}

// GetBColleagueFinancialOk returns a tuple with the BColleagueFinancial field value
// and a boolean to check if the value has been set.
func (o *ColleagueResponseV2) GetBColleagueFinancialOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BColleagueFinancial, true
}

// SetBColleagueFinancial sets field value
func (o *ColleagueResponseV2) SetBColleagueFinancial(v bool) {
	o.BColleagueFinancial = v
}

// GetBColleagueUsecloneemail returns the BColleagueUsecloneemail field value
func (o *ColleagueResponseV2) GetBColleagueUsecloneemail() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BColleagueUsecloneemail
}

// GetBColleagueUsecloneemailOk returns a tuple with the BColleagueUsecloneemail field value
// and a boolean to check if the value has been set.
func (o *ColleagueResponseV2) GetBColleagueUsecloneemailOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BColleagueUsecloneemail, true
}

// SetBColleagueUsecloneemail sets field value
func (o *ColleagueResponseV2) SetBColleagueUsecloneemail(v bool) {
	o.BColleagueUsecloneemail = v
}

// GetBColleagueAttachment returns the BColleagueAttachment field value
func (o *ColleagueResponseV2) GetBColleagueAttachment() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BColleagueAttachment
}

// GetBColleagueAttachmentOk returns a tuple with the BColleagueAttachment field value
// and a boolean to check if the value has been set.
func (o *ColleagueResponseV2) GetBColleagueAttachmentOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BColleagueAttachment, true
}

// SetBColleagueAttachment sets field value
func (o *ColleagueResponseV2) SetBColleagueAttachment(v bool) {
	o.BColleagueAttachment = v
}

// GetBColleagueCanafe returns the BColleagueCanafe field value
func (o *ColleagueResponseV2) GetBColleagueCanafe() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BColleagueCanafe
}

// GetBColleagueCanafeOk returns a tuple with the BColleagueCanafe field value
// and a boolean to check if the value has been set.
func (o *ColleagueResponseV2) GetBColleagueCanafeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BColleagueCanafe, true
}

// SetBColleagueCanafe sets field value
func (o *ColleagueResponseV2) SetBColleagueCanafe(v bool) {
	o.BColleagueCanafe = v
}

// GetBColleaguePermission returns the BColleaguePermission field value
func (o *ColleagueResponseV2) GetBColleaguePermission() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BColleaguePermission
}

// GetBColleaguePermissionOk returns a tuple with the BColleaguePermission field value
// and a boolean to check if the value has been set.
func (o *ColleagueResponseV2) GetBColleaguePermissionOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BColleaguePermission, true
}

// SetBColleaguePermission sets field value
func (o *ColleagueResponseV2) SetBColleaguePermission(v bool) {
	o.BColleaguePermission = v
}

// GetBColleagueRealestatecompleted returns the BColleagueRealestatecompleted field value
func (o *ColleagueResponseV2) GetBColleagueRealestatecompleted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BColleagueRealestatecompleted
}

// GetBColleagueRealestatecompletedOk returns a tuple with the BColleagueRealestatecompleted field value
// and a boolean to check if the value has been set.
func (o *ColleagueResponseV2) GetBColleagueRealestatecompletedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BColleagueRealestatecompleted, true
}

// SetBColleagueRealestatecompleted sets field value
func (o *ColleagueResponseV2) SetBColleagueRealestatecompleted(v bool) {
	o.BColleagueRealestatecompleted = v
}

// GetDtColleagueFrom returns the DtColleagueFrom field value if set, zero value otherwise.
func (o *ColleagueResponseV2) GetDtColleagueFrom() string {
	if o == nil || IsNil(o.DtColleagueFrom) {
		var ret string
		return ret
	}
	return *o.DtColleagueFrom
}

// GetDtColleagueFromOk returns a tuple with the DtColleagueFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ColleagueResponseV2) GetDtColleagueFromOk() (*string, bool) {
	if o == nil || IsNil(o.DtColleagueFrom) {
		return nil, false
	}
	return o.DtColleagueFrom, true
}

// HasDtColleagueFrom returns a boolean if a field has been set.
func (o *ColleagueResponseV2) HasDtColleagueFrom() bool {
	if o != nil && !IsNil(o.DtColleagueFrom) {
		return true
	}

	return false
}

// SetDtColleagueFrom gets a reference to the given string and assigns it to the DtColleagueFrom field.
func (o *ColleagueResponseV2) SetDtColleagueFrom(v string) {
	o.DtColleagueFrom = &v
}

// GetDtColleagueTo returns the DtColleagueTo field value if set, zero value otherwise.
func (o *ColleagueResponseV2) GetDtColleagueTo() string {
	if o == nil || IsNil(o.DtColleagueTo) {
		var ret string
		return ret
	}
	return *o.DtColleagueTo
}

// GetDtColleagueToOk returns a tuple with the DtColleagueTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ColleagueResponseV2) GetDtColleagueToOk() (*string, bool) {
	if o == nil || IsNil(o.DtColleagueTo) {
		return nil, false
	}
	return o.DtColleagueTo, true
}

// HasDtColleagueTo returns a boolean if a field has been set.
func (o *ColleagueResponseV2) HasDtColleagueTo() bool {
	if o != nil && !IsNil(o.DtColleagueTo) {
		return true
	}

	return false
}

// SetDtColleagueTo gets a reference to the given string and assigns it to the DtColleagueTo field.
func (o *ColleagueResponseV2) SetDtColleagueTo(v string) {
	o.DtColleagueTo = &v
}

// GetEColleagueEzsign returns the EColleagueEzsign field value
func (o *ColleagueResponseV2) GetEColleagueEzsign() FieldEColleagueEzsign {
	if o == nil {
		var ret FieldEColleagueEzsign
		return ret
	}

	return o.EColleagueEzsign
}

// GetEColleagueEzsignOk returns a tuple with the EColleagueEzsign field value
// and a boolean to check if the value has been set.
func (o *ColleagueResponseV2) GetEColleagueEzsignOk() (*FieldEColleagueEzsign, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EColleagueEzsign, true
}

// SetEColleagueEzsign sets field value
func (o *ColleagueResponseV2) SetEColleagueEzsign(v FieldEColleagueEzsign) {
	o.EColleagueEzsign = v
}

// GetEColleagueRealestateinprogress returns the EColleagueRealestateinprogress field value
func (o *ColleagueResponseV2) GetEColleagueRealestateinprogress() FieldEColleagueRealestateinprogess {
	if o == nil {
		var ret FieldEColleagueRealestateinprogess
		return ret
	}

	return o.EColleagueRealestateinprogress
}

// GetEColleagueRealestateinprogressOk returns a tuple with the EColleagueRealestateinprogress field value
// and a boolean to check if the value has been set.
func (o *ColleagueResponseV2) GetEColleagueRealestateinprogressOk() (*FieldEColleagueRealestateinprogess, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EColleagueRealestateinprogress, true
}

// SetEColleagueRealestateinprogress sets field value
func (o *ColleagueResponseV2) SetEColleagueRealestateinprogress(v FieldEColleagueRealestateinprogess) {
	o.EColleagueRealestateinprogress = v
}

// GetObjUserName returns the ObjUserName field value
func (o *ColleagueResponseV2) GetObjUserName() CustomUserNameResponse {
	if o == nil {
		var ret CustomUserNameResponse
		return ret
	}

	return o.ObjUserName
}

// GetObjUserNameOk returns a tuple with the ObjUserName field value
// and a boolean to check if the value has been set.
func (o *ColleagueResponseV2) GetObjUserNameOk() (*CustomUserNameResponse, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjUserName, true
}

// SetObjUserName sets field value
func (o *ColleagueResponseV2) SetObjUserName(v CustomUserNameResponse) {
	o.ObjUserName = v
}

// GetObjAudit returns the ObjAudit field value
func (o *ColleagueResponseV2) GetObjAudit() CommonAudit {
	if o == nil {
		var ret CommonAudit
		return ret
	}

	return o.ObjAudit
}

// GetObjAuditOk returns a tuple with the ObjAudit field value
// and a boolean to check if the value has been set.
func (o *ColleagueResponseV2) GetObjAuditOk() (*CommonAudit, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjAudit, true
}

// SetObjAudit sets field value
func (o *ColleagueResponseV2) SetObjAudit(v CommonAudit) {
	o.ObjAudit = v
}

func (o ColleagueResponseV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ColleagueResponseV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pkiColleagueID"] = o.PkiColleagueID
	toSerialize["fkiUserID"] = o.FkiUserID
	toSerialize["fkiUserIDColleague"] = o.FkiUserIDColleague
	toSerialize["bColleagueEzsignemail"] = o.BColleagueEzsignemail
	toSerialize["bColleagueFinancial"] = o.BColleagueFinancial
	toSerialize["bColleagueUsecloneemail"] = o.BColleagueUsecloneemail
	toSerialize["bColleagueAttachment"] = o.BColleagueAttachment
	toSerialize["bColleagueCanafe"] = o.BColleagueCanafe
	toSerialize["bColleaguePermission"] = o.BColleaguePermission
	toSerialize["bColleagueRealestatecompleted"] = o.BColleagueRealestatecompleted
	if !IsNil(o.DtColleagueFrom) {
		toSerialize["dtColleagueFrom"] = o.DtColleagueFrom
	}
	if !IsNil(o.DtColleagueTo) {
		toSerialize["dtColleagueTo"] = o.DtColleagueTo
	}
	toSerialize["eColleagueEzsign"] = o.EColleagueEzsign
	toSerialize["eColleagueRealestateinprogress"] = o.EColleagueRealestateinprogress
	toSerialize["objUserName"] = o.ObjUserName
	toSerialize["objAudit"] = o.ObjAudit
	return toSerialize, nil
}

func (o *ColleagueResponseV2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pkiColleagueID",
		"fkiUserID",
		"fkiUserIDColleague",
		"bColleagueEzsignemail",
		"bColleagueFinancial",
		"bColleagueUsecloneemail",
		"bColleagueAttachment",
		"bColleagueCanafe",
		"bColleaguePermission",
		"bColleagueRealestatecompleted",
		"eColleagueEzsign",
		"eColleagueRealestateinprogress",
		"objUserName",
		"objAudit",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varColleagueResponseV2 := _ColleagueResponseV2{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varColleagueResponseV2)

	if err != nil {
		return err
	}

	*o = ColleagueResponseV2(varColleagueResponseV2)

	return err
}

type NullableColleagueResponseV2 struct {
	value *ColleagueResponseV2
	isSet bool
}

func (v NullableColleagueResponseV2) Get() *ColleagueResponseV2 {
	return v.value
}

func (v *NullableColleagueResponseV2) Set(val *ColleagueResponseV2) {
	v.value = val
	v.isSet = true
}

func (v NullableColleagueResponseV2) IsSet() bool {
	return v.isSet
}

func (v *NullableColleagueResponseV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableColleagueResponseV2(val *ColleagueResponseV2) *NullableColleagueResponseV2 {
	return &NullableColleagueResponseV2{value: val, isSet: true}
}

func (v NullableColleagueResponseV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableColleagueResponseV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


