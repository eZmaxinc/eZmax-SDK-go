/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SubnetCreateObjectV1ResponseMPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubnetCreateObjectV1ResponseMPayload{}

// SubnetCreateObjectV1ResponseMPayload Payload for POST /1/object/subnet
type SubnetCreateObjectV1ResponseMPayload struct {
	// An array of unique IDs representing the object that were requested to be created.  They are returned in the same order as the array containing the objects to be created that was sent in the request.
	APkiSubnetID []int32 `json:"a_pkiSubnetID"`
}

type _SubnetCreateObjectV1ResponseMPayload SubnetCreateObjectV1ResponseMPayload

// NewSubnetCreateObjectV1ResponseMPayload instantiates a new SubnetCreateObjectV1ResponseMPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubnetCreateObjectV1ResponseMPayload(aPkiSubnetID []int32) *SubnetCreateObjectV1ResponseMPayload {
	this := SubnetCreateObjectV1ResponseMPayload{}
	this.APkiSubnetID = aPkiSubnetID
	return &this
}

// NewSubnetCreateObjectV1ResponseMPayloadWithDefaults instantiates a new SubnetCreateObjectV1ResponseMPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubnetCreateObjectV1ResponseMPayloadWithDefaults() *SubnetCreateObjectV1ResponseMPayload {
	this := SubnetCreateObjectV1ResponseMPayload{}
	return &this
}

// GetAPkiSubnetID returns the APkiSubnetID field value
func (o *SubnetCreateObjectV1ResponseMPayload) GetAPkiSubnetID() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.APkiSubnetID
}

// GetAPkiSubnetIDOk returns a tuple with the APkiSubnetID field value
// and a boolean to check if the value has been set.
func (o *SubnetCreateObjectV1ResponseMPayload) GetAPkiSubnetIDOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.APkiSubnetID, true
}

// SetAPkiSubnetID sets field value
func (o *SubnetCreateObjectV1ResponseMPayload) SetAPkiSubnetID(v []int32) {
	o.APkiSubnetID = v
}

func (o SubnetCreateObjectV1ResponseMPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubnetCreateObjectV1ResponseMPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["a_pkiSubnetID"] = o.APkiSubnetID
	return toSerialize, nil
}

func (o *SubnetCreateObjectV1ResponseMPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"a_pkiSubnetID",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSubnetCreateObjectV1ResponseMPayload := _SubnetCreateObjectV1ResponseMPayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSubnetCreateObjectV1ResponseMPayload)

	if err != nil {
		return err
	}

	*o = SubnetCreateObjectV1ResponseMPayload(varSubnetCreateObjectV1ResponseMPayload)

	return err
}

type NullableSubnetCreateObjectV1ResponseMPayload struct {
	value *SubnetCreateObjectV1ResponseMPayload
	isSet bool
}

func (v NullableSubnetCreateObjectV1ResponseMPayload) Get() *SubnetCreateObjectV1ResponseMPayload {
	return v.value
}

func (v *NullableSubnetCreateObjectV1ResponseMPayload) Set(val *SubnetCreateObjectV1ResponseMPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableSubnetCreateObjectV1ResponseMPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableSubnetCreateObjectV1ResponseMPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubnetCreateObjectV1ResponseMPayload(val *SubnetCreateObjectV1ResponseMPayload) *NullableSubnetCreateObjectV1ResponseMPayload {
	return &NullableSubnetCreateObjectV1ResponseMPayload{value: val, isSet: true}
}

func (v NullableSubnetCreateObjectV1ResponseMPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubnetCreateObjectV1ResponseMPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


