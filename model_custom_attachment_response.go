/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CustomAttachmentResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomAttachmentResponse{}

// CustomAttachmentResponse A Custom Attachment Object
type CustomAttachmentResponse struct {
	AttachmentResponse
	ObjAttachmentProof *AttachmentResponseCompound `json:"objAttachmentProof,omitempty"`
	ObjAttachmentProofdocument *AttachmentResponseCompound `json:"objAttachmentProofdocument,omitempty"`
	AObjAttachmentAttachment []AttachmentResponseCompound `json:"a_objAttachmentAttachment,omitempty"`
	AObjAttachmentVersion []AttachmentResponseCompound `json:"a_objAttachmentVersion,omitempty"`
}

type _CustomAttachmentResponse CustomAttachmentResponse

// NewCustomAttachmentResponse instantiates a new CustomAttachmentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomAttachmentResponse(pkiAttachmentID int32, eAttachmentDocumenttype FieldEAttachmentDocumenttype, sAttachmentName string, eAttachmentPrivacy FieldEAttachmentPrivacy, eAttachmentType FieldEAttachmentType, iAttachmentSize int32, sAttachmentMD5 string, bAttachmentDeleted bool, bAttachmentValid bool, eAttachmentVerified FieldEAttachmentVerified) *CustomAttachmentResponse {
	this := CustomAttachmentResponse{}
	this.PkiAttachmentID = pkiAttachmentID
	this.EAttachmentDocumenttype = eAttachmentDocumenttype
	this.SAttachmentName = sAttachmentName
	this.EAttachmentPrivacy = eAttachmentPrivacy
	this.EAttachmentType = eAttachmentType
	this.IAttachmentSize = iAttachmentSize
	this.SAttachmentMD5 = sAttachmentMD5
	this.BAttachmentDeleted = bAttachmentDeleted
	this.BAttachmentValid = bAttachmentValid
	this.EAttachmentVerified = eAttachmentVerified
	return &this
}

// NewCustomAttachmentResponseWithDefaults instantiates a new CustomAttachmentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomAttachmentResponseWithDefaults() *CustomAttachmentResponse {
	this := CustomAttachmentResponse{}
	return &this
}

// GetObjAttachmentProof returns the ObjAttachmentProof field value if set, zero value otherwise.
func (o *CustomAttachmentResponse) GetObjAttachmentProof() AttachmentResponseCompound {
	if o == nil || IsNil(o.ObjAttachmentProof) {
		var ret AttachmentResponseCompound
		return ret
	}
	return *o.ObjAttachmentProof
}

// GetObjAttachmentProofOk returns a tuple with the ObjAttachmentProof field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomAttachmentResponse) GetObjAttachmentProofOk() (*AttachmentResponseCompound, bool) {
	if o == nil || IsNil(o.ObjAttachmentProof) {
		return nil, false
	}
	return o.ObjAttachmentProof, true
}

// HasObjAttachmentProof returns a boolean if a field has been set.
func (o *CustomAttachmentResponse) HasObjAttachmentProof() bool {
	if o != nil && !IsNil(o.ObjAttachmentProof) {
		return true
	}

	return false
}

// SetObjAttachmentProof gets a reference to the given AttachmentResponseCompound and assigns it to the ObjAttachmentProof field.
func (o *CustomAttachmentResponse) SetObjAttachmentProof(v AttachmentResponseCompound) {
	o.ObjAttachmentProof = &v
}

// GetObjAttachmentProofdocument returns the ObjAttachmentProofdocument field value if set, zero value otherwise.
func (o *CustomAttachmentResponse) GetObjAttachmentProofdocument() AttachmentResponseCompound {
	if o == nil || IsNil(o.ObjAttachmentProofdocument) {
		var ret AttachmentResponseCompound
		return ret
	}
	return *o.ObjAttachmentProofdocument
}

// GetObjAttachmentProofdocumentOk returns a tuple with the ObjAttachmentProofdocument field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomAttachmentResponse) GetObjAttachmentProofdocumentOk() (*AttachmentResponseCompound, bool) {
	if o == nil || IsNil(o.ObjAttachmentProofdocument) {
		return nil, false
	}
	return o.ObjAttachmentProofdocument, true
}

// HasObjAttachmentProofdocument returns a boolean if a field has been set.
func (o *CustomAttachmentResponse) HasObjAttachmentProofdocument() bool {
	if o != nil && !IsNil(o.ObjAttachmentProofdocument) {
		return true
	}

	return false
}

// SetObjAttachmentProofdocument gets a reference to the given AttachmentResponseCompound and assigns it to the ObjAttachmentProofdocument field.
func (o *CustomAttachmentResponse) SetObjAttachmentProofdocument(v AttachmentResponseCompound) {
	o.ObjAttachmentProofdocument = &v
}

// GetAObjAttachmentAttachment returns the AObjAttachmentAttachment field value if set, zero value otherwise.
func (o *CustomAttachmentResponse) GetAObjAttachmentAttachment() []AttachmentResponseCompound {
	if o == nil || IsNil(o.AObjAttachmentAttachment) {
		var ret []AttachmentResponseCompound
		return ret
	}
	return o.AObjAttachmentAttachment
}

// GetAObjAttachmentAttachmentOk returns a tuple with the AObjAttachmentAttachment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomAttachmentResponse) GetAObjAttachmentAttachmentOk() ([]AttachmentResponseCompound, bool) {
	if o == nil || IsNil(o.AObjAttachmentAttachment) {
		return nil, false
	}
	return o.AObjAttachmentAttachment, true
}

// HasAObjAttachmentAttachment returns a boolean if a field has been set.
func (o *CustomAttachmentResponse) HasAObjAttachmentAttachment() bool {
	if o != nil && !IsNil(o.AObjAttachmentAttachment) {
		return true
	}

	return false
}

// SetAObjAttachmentAttachment gets a reference to the given []AttachmentResponseCompound and assigns it to the AObjAttachmentAttachment field.
func (o *CustomAttachmentResponse) SetAObjAttachmentAttachment(v []AttachmentResponseCompound) {
	o.AObjAttachmentAttachment = v
}

// GetAObjAttachmentVersion returns the AObjAttachmentVersion field value if set, zero value otherwise.
func (o *CustomAttachmentResponse) GetAObjAttachmentVersion() []AttachmentResponseCompound {
	if o == nil || IsNil(o.AObjAttachmentVersion) {
		var ret []AttachmentResponseCompound
		return ret
	}
	return o.AObjAttachmentVersion
}

// GetAObjAttachmentVersionOk returns a tuple with the AObjAttachmentVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomAttachmentResponse) GetAObjAttachmentVersionOk() ([]AttachmentResponseCompound, bool) {
	if o == nil || IsNil(o.AObjAttachmentVersion) {
		return nil, false
	}
	return o.AObjAttachmentVersion, true
}

// HasAObjAttachmentVersion returns a boolean if a field has been set.
func (o *CustomAttachmentResponse) HasAObjAttachmentVersion() bool {
	if o != nil && !IsNil(o.AObjAttachmentVersion) {
		return true
	}

	return false
}

// SetAObjAttachmentVersion gets a reference to the given []AttachmentResponseCompound and assigns it to the AObjAttachmentVersion field.
func (o *CustomAttachmentResponse) SetAObjAttachmentVersion(v []AttachmentResponseCompound) {
	o.AObjAttachmentVersion = v
}

func (o CustomAttachmentResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomAttachmentResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ObjAttachmentProof) {
		toSerialize["objAttachmentProof"] = o.ObjAttachmentProof
	}
	if !IsNil(o.ObjAttachmentProofdocument) {
		toSerialize["objAttachmentProofdocument"] = o.ObjAttachmentProofdocument
	}
	if !IsNil(o.AObjAttachmentAttachment) {
		toSerialize["a_objAttachmentAttachment"] = o.AObjAttachmentAttachment
	}
	if !IsNil(o.AObjAttachmentVersion) {
		toSerialize["a_objAttachmentVersion"] = o.AObjAttachmentVersion
	}
	return toSerialize, nil
}

func (o *CustomAttachmentResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pkiAttachmentID",
		"eAttachmentDocumenttype",
		"sAttachmentName",
		"eAttachmentPrivacy",
		"eAttachmentType",
		"iAttachmentSize",
		"sAttachmentMD5",
		"bAttachmentDeleted",
		"bAttachmentValid",
		"eAttachmentVerified",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomAttachmentResponse := _CustomAttachmentResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCustomAttachmentResponse)

	if err != nil {
		return err
	}

	*o = CustomAttachmentResponse(varCustomAttachmentResponse)

	return err
}

type NullableCustomAttachmentResponse struct {
	value *CustomAttachmentResponse
	isSet bool
}

func (v NullableCustomAttachmentResponse) Get() *CustomAttachmentResponse {
	return v.value
}

func (v *NullableCustomAttachmentResponse) Set(val *CustomAttachmentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomAttachmentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomAttachmentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomAttachmentResponse(val *CustomAttachmentResponse) *NullableCustomAttachmentResponse {
	return &NullableCustomAttachmentResponse{value: val, isSet: true}
}

func (v NullableCustomAttachmentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomAttachmentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


