/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsigntemplatedocumentExtractTextV1Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsigntemplatedocumentExtractTextV1Request{}

// EzsigntemplatedocumentExtractTextV1Request Request for POST /1/object/ezsigntemplatedocument/{pkiEzsigntemplatedocumentID}/extractText
type EzsigntemplatedocumentExtractTextV1Request struct {
	// The page where the area is located
	IPage int32 `json:"iPage"`
	// The section of the page
	ESection *string `json:"eSection,omitempty"`
	// The X coordinate (Horizontal). Require when eSection = 'Region' or eSection is not set.
	IX *int32 `json:"iX,omitempty"`
	// The Y coordinate (Vertical). Require when eSection = 'Region' or eSection is not set.
	IY *int32 `json:"iY,omitempty"`
	// Area's width. Require when eSection = 'Region' or eSection is not set.
	IWidth *int32 `json:"iWidth,omitempty"`
	// Area's height. Require when eSection = 'Region' or eSection is not set.
	IHeight *int32 `json:"iHeight,omitempty"`
}

type _EzsigntemplatedocumentExtractTextV1Request EzsigntemplatedocumentExtractTextV1Request

// NewEzsigntemplatedocumentExtractTextV1Request instantiates a new EzsigntemplatedocumentExtractTextV1Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsigntemplatedocumentExtractTextV1Request(iPage int32) *EzsigntemplatedocumentExtractTextV1Request {
	this := EzsigntemplatedocumentExtractTextV1Request{}
	this.IPage = iPage
	return &this
}

// NewEzsigntemplatedocumentExtractTextV1RequestWithDefaults instantiates a new EzsigntemplatedocumentExtractTextV1Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsigntemplatedocumentExtractTextV1RequestWithDefaults() *EzsigntemplatedocumentExtractTextV1Request {
	this := EzsigntemplatedocumentExtractTextV1Request{}
	return &this
}

// GetIPage returns the IPage field value
func (o *EzsigntemplatedocumentExtractTextV1Request) GetIPage() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IPage
}

// GetIPageOk returns a tuple with the IPage field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplatedocumentExtractTextV1Request) GetIPageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IPage, true
}

// SetIPage sets field value
func (o *EzsigntemplatedocumentExtractTextV1Request) SetIPage(v int32) {
	o.IPage = v
}

// GetESection returns the ESection field value if set, zero value otherwise.
func (o *EzsigntemplatedocumentExtractTextV1Request) GetESection() string {
	if o == nil || IsNil(o.ESection) {
		var ret string
		return ret
	}
	return *o.ESection
}

// GetESectionOk returns a tuple with the ESection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplatedocumentExtractTextV1Request) GetESectionOk() (*string, bool) {
	if o == nil || IsNil(o.ESection) {
		return nil, false
	}
	return o.ESection, true
}

// HasESection returns a boolean if a field has been set.
func (o *EzsigntemplatedocumentExtractTextV1Request) HasESection() bool {
	if o != nil && !IsNil(o.ESection) {
		return true
	}

	return false
}

// SetESection gets a reference to the given string and assigns it to the ESection field.
func (o *EzsigntemplatedocumentExtractTextV1Request) SetESection(v string) {
	o.ESection = &v
}

// GetIX returns the IX field value if set, zero value otherwise.
func (o *EzsigntemplatedocumentExtractTextV1Request) GetIX() int32 {
	if o == nil || IsNil(o.IX) {
		var ret int32
		return ret
	}
	return *o.IX
}

// GetIXOk returns a tuple with the IX field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplatedocumentExtractTextV1Request) GetIXOk() (*int32, bool) {
	if o == nil || IsNil(o.IX) {
		return nil, false
	}
	return o.IX, true
}

// HasIX returns a boolean if a field has been set.
func (o *EzsigntemplatedocumentExtractTextV1Request) HasIX() bool {
	if o != nil && !IsNil(o.IX) {
		return true
	}

	return false
}

// SetIX gets a reference to the given int32 and assigns it to the IX field.
func (o *EzsigntemplatedocumentExtractTextV1Request) SetIX(v int32) {
	o.IX = &v
}

// GetIY returns the IY field value if set, zero value otherwise.
func (o *EzsigntemplatedocumentExtractTextV1Request) GetIY() int32 {
	if o == nil || IsNil(o.IY) {
		var ret int32
		return ret
	}
	return *o.IY
}

// GetIYOk returns a tuple with the IY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplatedocumentExtractTextV1Request) GetIYOk() (*int32, bool) {
	if o == nil || IsNil(o.IY) {
		return nil, false
	}
	return o.IY, true
}

// HasIY returns a boolean if a field has been set.
func (o *EzsigntemplatedocumentExtractTextV1Request) HasIY() bool {
	if o != nil && !IsNil(o.IY) {
		return true
	}

	return false
}

// SetIY gets a reference to the given int32 and assigns it to the IY field.
func (o *EzsigntemplatedocumentExtractTextV1Request) SetIY(v int32) {
	o.IY = &v
}

// GetIWidth returns the IWidth field value if set, zero value otherwise.
func (o *EzsigntemplatedocumentExtractTextV1Request) GetIWidth() int32 {
	if o == nil || IsNil(o.IWidth) {
		var ret int32
		return ret
	}
	return *o.IWidth
}

// GetIWidthOk returns a tuple with the IWidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplatedocumentExtractTextV1Request) GetIWidthOk() (*int32, bool) {
	if o == nil || IsNil(o.IWidth) {
		return nil, false
	}
	return o.IWidth, true
}

// HasIWidth returns a boolean if a field has been set.
func (o *EzsigntemplatedocumentExtractTextV1Request) HasIWidth() bool {
	if o != nil && !IsNil(o.IWidth) {
		return true
	}

	return false
}

// SetIWidth gets a reference to the given int32 and assigns it to the IWidth field.
func (o *EzsigntemplatedocumentExtractTextV1Request) SetIWidth(v int32) {
	o.IWidth = &v
}

// GetIHeight returns the IHeight field value if set, zero value otherwise.
func (o *EzsigntemplatedocumentExtractTextV1Request) GetIHeight() int32 {
	if o == nil || IsNil(o.IHeight) {
		var ret int32
		return ret
	}
	return *o.IHeight
}

// GetIHeightOk returns a tuple with the IHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplatedocumentExtractTextV1Request) GetIHeightOk() (*int32, bool) {
	if o == nil || IsNil(o.IHeight) {
		return nil, false
	}
	return o.IHeight, true
}

// HasIHeight returns a boolean if a field has been set.
func (o *EzsigntemplatedocumentExtractTextV1Request) HasIHeight() bool {
	if o != nil && !IsNil(o.IHeight) {
		return true
	}

	return false
}

// SetIHeight gets a reference to the given int32 and assigns it to the IHeight field.
func (o *EzsigntemplatedocumentExtractTextV1Request) SetIHeight(v int32) {
	o.IHeight = &v
}

func (o EzsigntemplatedocumentExtractTextV1Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsigntemplatedocumentExtractTextV1Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["iPage"] = o.IPage
	if !IsNil(o.ESection) {
		toSerialize["eSection"] = o.ESection
	}
	if !IsNil(o.IX) {
		toSerialize["iX"] = o.IX
	}
	if !IsNil(o.IY) {
		toSerialize["iY"] = o.IY
	}
	if !IsNil(o.IWidth) {
		toSerialize["iWidth"] = o.IWidth
	}
	if !IsNil(o.IHeight) {
		toSerialize["iHeight"] = o.IHeight
	}
	return toSerialize, nil
}

func (o *EzsigntemplatedocumentExtractTextV1Request) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"iPage",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsigntemplatedocumentExtractTextV1Request := _EzsigntemplatedocumentExtractTextV1Request{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsigntemplatedocumentExtractTextV1Request)

	if err != nil {
		return err
	}

	*o = EzsigntemplatedocumentExtractTextV1Request(varEzsigntemplatedocumentExtractTextV1Request)

	return err
}

type NullableEzsigntemplatedocumentExtractTextV1Request struct {
	value *EzsigntemplatedocumentExtractTextV1Request
	isSet bool
}

func (v NullableEzsigntemplatedocumentExtractTextV1Request) Get() *EzsigntemplatedocumentExtractTextV1Request {
	return v.value
}

func (v *NullableEzsigntemplatedocumentExtractTextV1Request) Set(val *EzsigntemplatedocumentExtractTextV1Request) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsigntemplatedocumentExtractTextV1Request) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsigntemplatedocumentExtractTextV1Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsigntemplatedocumentExtractTextV1Request(val *EzsigntemplatedocumentExtractTextV1Request) *NullableEzsigntemplatedocumentExtractTextV1Request {
	return &NullableEzsigntemplatedocumentExtractTextV1Request{value: val, isSet: true}
}

func (v NullableEzsigntemplatedocumentExtractTextV1Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsigntemplatedocumentExtractTextV1Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


