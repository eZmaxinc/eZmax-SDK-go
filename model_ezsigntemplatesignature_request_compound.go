/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsigntemplatesignatureRequestCompound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsigntemplatesignatureRequestCompound{}

// EzsigntemplatesignatureRequestCompound A Ezsigntemplatesignature Object and children
type EzsigntemplatesignatureRequestCompound struct {
	// The unique ID of the Ezsigntemplatesignature
	PkiEzsigntemplatesignatureID *int32 `json:"pkiEzsigntemplatesignatureID,omitempty"`
	// The unique ID of the Ezsigntemplatedocument
	FkiEzsigntemplatedocumentID int32 `json:"fkiEzsigntemplatedocumentID"`
	// The unique ID of the Ezsigntemplatesigner
	FkiEzsigntemplatesignerID int32 `json:"fkiEzsigntemplatesignerID"`
	// The unique ID of the Ezsigntemplatesigner
	FkiEzsigntemplatesignerIDValidation *int32 `json:"fkiEzsigntemplatesignerIDValidation,omitempty"`
	EEzsigntemplatesignaturePositioning *FieldEEzsigntemplatesignaturePositioning `json:"eEzsigntemplatesignaturePositioning,omitempty"`
	// The page number in the Ezsigntemplatedocument
	IEzsigntemplatedocumentpagePagenumber int32 `json:"iEzsigntemplatedocumentpagePagenumber"`
	// The X coordinate (Horizontal) where to put the Ezsigntemplatesignature on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsigntemplatesignature 2 inches from the left border of the page, you would use \"200\" for the X coordinate.
	IEzsigntemplatesignatureX *int32 `json:"iEzsigntemplatesignatureX,omitempty"`
	// The Y coordinate (Vertical) where to put the Ezsigntemplatesignature on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsigntemplatesignature 3 inches from the top border of the page, you would use \"300\" for the Y coordinate.
	IEzsigntemplatesignatureY *int32 `json:"iEzsigntemplatesignatureY,omitempty"`
	// The width of the Ezsigntemplatesignature.  Size is calculated at 100dpi (dot per inch). So for example, if you want the Ezsigntemplatesignature to have a width of 2 inches, you would use \"200\" for the iEzsigntemplatesignatureWidth.
	IEzsigntemplatesignatureWidth *int32 `json:"iEzsigntemplatesignatureWidth,omitempty"`
	// The height of the Ezsigntemplatesignature.  Size is calculated at 100dpi (dot per inch). So for example, if you want the Ezsigntemplatesignature to have an height of 2 inches, you would use \"200\" for the iEzsigntemplatesignatureHeight.
	IEzsigntemplatesignatureHeight *int32 `json:"iEzsigntemplatesignatureHeight,omitempty"`
	// The step when the Ezsigntemplatesigner will be invited to sign
	IEzsigntemplatesignatureStep int32 `json:"iEzsigntemplatesignatureStep"`
	EEzsigntemplatesignatureType FieldEEzsigntemplatesignatureType `json:"eEzsigntemplatesignatureType"`
	// A tooltip that will be presented to Ezsigntemplatesigner about the Ezsigntemplatesignature
	TEzsigntemplatesignatureTooltip *string `json:"tEzsigntemplatesignatureTooltip,omitempty"`
	EEzsigntemplatesignatureTooltipposition *FieldEEzsigntemplatesignatureTooltipposition `json:"eEzsigntemplatesignatureTooltipposition,omitempty"`
	EEzsigntemplatesignatureFont *FieldEEzsigntemplatesignatureFont `json:"eEzsigntemplatesignatureFont,omitempty"`
	// Whether the Ezsigntemplatesignature is required or not. This field is relevant only with Ezsigntemplatesignature with eEzsigntemplatesignatureType = Attachments.
	BEzsigntemplatesignatureRequired *bool `json:"bEzsigntemplatesignatureRequired,omitempty"`
	EEzsigntemplatesignatureAttachmentnamesource *FieldEEzsigntemplatesignatureAttachmentnamesource `json:"eEzsigntemplatesignatureAttachmentnamesource,omitempty"`
	// The description attached to the attachment name added in Ezsigntemplatesignature of eEzsigntemplatesignatureType Attachments
	SEzsigntemplatesignatureAttachmentdescription *string `json:"sEzsigntemplatesignatureAttachmentdescription,omitempty"`
	// The step when the Ezsigntemplatesigner will be invited to validate the Ezsigntemplatesignature of eEzsigntemplatesignatureType Attachments
	IEzsigntemplatesignatureValidationstep *int32 `json:"iEzsigntemplatesignatureValidationstep,omitempty"`
	// The maximum length for the value in the Ezsigntemplatesignature  This can only be set if eEzsigntemplatesignatureType is **FieldText** or **FieldTextarea**
	IEzsigntemplatesignatureMaxlength *int32 `json:"iEzsigntemplatesignatureMaxlength,omitempty"`
	// A regular expression to indicate what values are acceptable for the Ezsigntemplatesignature.  This can only be set if eEzsigntemplatesignatureType is **Text** or **Textarea**
	SEzsigntemplatesignatureRegexp *string `json:"sEzsigntemplatesignatureRegexp,omitempty"`
	EEzsigntemplatesignatureTextvalidation *EnumTextvalidation `json:"eEzsigntemplatesignatureTextvalidation,omitempty"`
	EEzsigntemplatesignatureDependencyrequirement *FieldEEzsigntemplatesignatureDependencyrequirement `json:"eEzsigntemplatesignatureDependencyrequirement,omitempty"`
	// The string pattern to search for the positioning. **This is not a regexp**  This will be required if **eEzsigntemplatesignaturePositioning** is set to **PerCoordinates**
	SEzsigntemplatesignaturePositioningpattern *string `json:"sEzsigntemplatesignaturePositioningpattern,omitempty"`
	// The offset X  This will be required if **eEzsigntemplatesignaturePositioning** is set to **PerCoordinates**
	IEzsigntemplatesignaturePositioningoffsetx *int32 `json:"iEzsigntemplatesignaturePositioningoffsetx,omitempty"`
	// The offset Y  This will be required if **eEzsigntemplatesignaturePositioning** is set to **PerCoordinates**
	IEzsigntemplatesignaturePositioningoffsety *int32 `json:"iEzsigntemplatesignaturePositioningoffsety,omitempty"`
	EEzsigntemplatesignaturePositioningoccurence *FieldEEzsigntemplatesignaturePositioningoccurence `json:"eEzsigntemplatesignaturePositioningoccurence,omitempty"`
	// Whether the Ezsigntemplatesignature has a custom date format or not. (Only possible when eEzsigntemplatesignatureType is **Name** or **Handwritten**)
	BEzsigntemplatesignatureCustomdate *bool `json:"bEzsigntemplatesignatureCustomdate,omitempty"`
	// An array of custom date blocks that will be filled at the time of signature.  Can only be used if bEzsigntemplatesignatureCustomdate is true.  Use an empty array if you don't want to have a date at all.
	AObjEzsigntemplatesignaturecustomdate []EzsigntemplatesignaturecustomdateRequestCompound `json:"a_objEzsigntemplatesignaturecustomdate,omitempty"`
	AObjEzsigntemplateelementdependency []EzsigntemplateelementdependencyRequestCompound `json:"a_objEzsigntemplateelementdependency,omitempty"`
}

type _EzsigntemplatesignatureRequestCompound EzsigntemplatesignatureRequestCompound

// NewEzsigntemplatesignatureRequestCompound instantiates a new EzsigntemplatesignatureRequestCompound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsigntemplatesignatureRequestCompound(fkiEzsigntemplatedocumentID int32, fkiEzsigntemplatesignerID int32, iEzsigntemplatedocumentpagePagenumber int32, iEzsigntemplatesignatureStep int32, eEzsigntemplatesignatureType FieldEEzsigntemplatesignatureType) *EzsigntemplatesignatureRequestCompound {
	this := EzsigntemplatesignatureRequestCompound{}
	this.FkiEzsigntemplatedocumentID = fkiEzsigntemplatedocumentID
	this.FkiEzsigntemplatesignerID = fkiEzsigntemplatesignerID
	this.IEzsigntemplatedocumentpagePagenumber = iEzsigntemplatedocumentpagePagenumber
	this.IEzsigntemplatesignatureStep = iEzsigntemplatesignatureStep
	this.EEzsigntemplatesignatureType = eEzsigntemplatesignatureType
	return &this
}

// NewEzsigntemplatesignatureRequestCompoundWithDefaults instantiates a new EzsigntemplatesignatureRequestCompound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsigntemplatesignatureRequestCompoundWithDefaults() *EzsigntemplatesignatureRequestCompound {
	this := EzsigntemplatesignatureRequestCompound{}
	return &this
}

// GetPkiEzsigntemplatesignatureID returns the PkiEzsigntemplatesignatureID field value if set, zero value otherwise.
func (o *EzsigntemplatesignatureRequestCompound) GetPkiEzsigntemplatesignatureID() int32 {
	if o == nil || IsNil(o.PkiEzsigntemplatesignatureID) {
		var ret int32
		return ret
	}
	return *o.PkiEzsigntemplatesignatureID
}

// GetPkiEzsigntemplatesignatureIDOk returns a tuple with the PkiEzsigntemplatesignatureID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplatesignatureRequestCompound) GetPkiEzsigntemplatesignatureIDOk() (*int32, bool) {
	if o == nil || IsNil(o.PkiEzsigntemplatesignatureID) {
		return nil, false
	}
	return o.PkiEzsigntemplatesignatureID, true
}

// HasPkiEzsigntemplatesignatureID returns a boolean if a field has been set.
func (o *EzsigntemplatesignatureRequestCompound) HasPkiEzsigntemplatesignatureID() bool {
	if o != nil && !IsNil(o.PkiEzsigntemplatesignatureID) {
		return true
	}

	return false
}

// SetPkiEzsigntemplatesignatureID gets a reference to the given int32 and assigns it to the PkiEzsigntemplatesignatureID field.
func (o *EzsigntemplatesignatureRequestCompound) SetPkiEzsigntemplatesignatureID(v int32) {
	o.PkiEzsigntemplatesignatureID = &v
}

// GetFkiEzsigntemplatedocumentID returns the FkiEzsigntemplatedocumentID field value
func (o *EzsigntemplatesignatureRequestCompound) GetFkiEzsigntemplatedocumentID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiEzsigntemplatedocumentID
}

// GetFkiEzsigntemplatedocumentIDOk returns a tuple with the FkiEzsigntemplatedocumentID field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplatesignatureRequestCompound) GetFkiEzsigntemplatedocumentIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiEzsigntemplatedocumentID, true
}

// SetFkiEzsigntemplatedocumentID sets field value
func (o *EzsigntemplatesignatureRequestCompound) SetFkiEzsigntemplatedocumentID(v int32) {
	o.FkiEzsigntemplatedocumentID = v
}

// GetFkiEzsigntemplatesignerID returns the FkiEzsigntemplatesignerID field value
func (o *EzsigntemplatesignatureRequestCompound) GetFkiEzsigntemplatesignerID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiEzsigntemplatesignerID
}

// GetFkiEzsigntemplatesignerIDOk returns a tuple with the FkiEzsigntemplatesignerID field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplatesignatureRequestCompound) GetFkiEzsigntemplatesignerIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiEzsigntemplatesignerID, true
}

// SetFkiEzsigntemplatesignerID sets field value
func (o *EzsigntemplatesignatureRequestCompound) SetFkiEzsigntemplatesignerID(v int32) {
	o.FkiEzsigntemplatesignerID = v
}

// GetFkiEzsigntemplatesignerIDValidation returns the FkiEzsigntemplatesignerIDValidation field value if set, zero value otherwise.
func (o *EzsigntemplatesignatureRequestCompound) GetFkiEzsigntemplatesignerIDValidation() int32 {
	if o == nil || IsNil(o.FkiEzsigntemplatesignerIDValidation) {
		var ret int32
		return ret
	}
	return *o.FkiEzsigntemplatesignerIDValidation
}

// GetFkiEzsigntemplatesignerIDValidationOk returns a tuple with the FkiEzsigntemplatesignerIDValidation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplatesignatureRequestCompound) GetFkiEzsigntemplatesignerIDValidationOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiEzsigntemplatesignerIDValidation) {
		return nil, false
	}
	return o.FkiEzsigntemplatesignerIDValidation, true
}

// HasFkiEzsigntemplatesignerIDValidation returns a boolean if a field has been set.
func (o *EzsigntemplatesignatureRequestCompound) HasFkiEzsigntemplatesignerIDValidation() bool {
	if o != nil && !IsNil(o.FkiEzsigntemplatesignerIDValidation) {
		return true
	}

	return false
}

// SetFkiEzsigntemplatesignerIDValidation gets a reference to the given int32 and assigns it to the FkiEzsigntemplatesignerIDValidation field.
func (o *EzsigntemplatesignatureRequestCompound) SetFkiEzsigntemplatesignerIDValidation(v int32) {
	o.FkiEzsigntemplatesignerIDValidation = &v
}

// GetEEzsigntemplatesignaturePositioning returns the EEzsigntemplatesignaturePositioning field value if set, zero value otherwise.
func (o *EzsigntemplatesignatureRequestCompound) GetEEzsigntemplatesignaturePositioning() FieldEEzsigntemplatesignaturePositioning {
	if o == nil || IsNil(o.EEzsigntemplatesignaturePositioning) {
		var ret FieldEEzsigntemplatesignaturePositioning
		return ret
	}
	return *o.EEzsigntemplatesignaturePositioning
}

// GetEEzsigntemplatesignaturePositioningOk returns a tuple with the EEzsigntemplatesignaturePositioning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplatesignatureRequestCompound) GetEEzsigntemplatesignaturePositioningOk() (*FieldEEzsigntemplatesignaturePositioning, bool) {
	if o == nil || IsNil(o.EEzsigntemplatesignaturePositioning) {
		return nil, false
	}
	return o.EEzsigntemplatesignaturePositioning, true
}

// HasEEzsigntemplatesignaturePositioning returns a boolean if a field has been set.
func (o *EzsigntemplatesignatureRequestCompound) HasEEzsigntemplatesignaturePositioning() bool {
	if o != nil && !IsNil(o.EEzsigntemplatesignaturePositioning) {
		return true
	}

	return false
}

// SetEEzsigntemplatesignaturePositioning gets a reference to the given FieldEEzsigntemplatesignaturePositioning and assigns it to the EEzsigntemplatesignaturePositioning field.
func (o *EzsigntemplatesignatureRequestCompound) SetEEzsigntemplatesignaturePositioning(v FieldEEzsigntemplatesignaturePositioning) {
	o.EEzsigntemplatesignaturePositioning = &v
}

// GetIEzsigntemplatedocumentpagePagenumber returns the IEzsigntemplatedocumentpagePagenumber field value
func (o *EzsigntemplatesignatureRequestCompound) GetIEzsigntemplatedocumentpagePagenumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IEzsigntemplatedocumentpagePagenumber
}

// GetIEzsigntemplatedocumentpagePagenumberOk returns a tuple with the IEzsigntemplatedocumentpagePagenumber field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplatesignatureRequestCompound) GetIEzsigntemplatedocumentpagePagenumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IEzsigntemplatedocumentpagePagenumber, true
}

// SetIEzsigntemplatedocumentpagePagenumber sets field value
func (o *EzsigntemplatesignatureRequestCompound) SetIEzsigntemplatedocumentpagePagenumber(v int32) {
	o.IEzsigntemplatedocumentpagePagenumber = v
}

// GetIEzsigntemplatesignatureX returns the IEzsigntemplatesignatureX field value if set, zero value otherwise.
func (o *EzsigntemplatesignatureRequestCompound) GetIEzsigntemplatesignatureX() int32 {
	if o == nil || IsNil(o.IEzsigntemplatesignatureX) {
		var ret int32
		return ret
	}
	return *o.IEzsigntemplatesignatureX
}

// GetIEzsigntemplatesignatureXOk returns a tuple with the IEzsigntemplatesignatureX field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplatesignatureRequestCompound) GetIEzsigntemplatesignatureXOk() (*int32, bool) {
	if o == nil || IsNil(o.IEzsigntemplatesignatureX) {
		return nil, false
	}
	return o.IEzsigntemplatesignatureX, true
}

// HasIEzsigntemplatesignatureX returns a boolean if a field has been set.
func (o *EzsigntemplatesignatureRequestCompound) HasIEzsigntemplatesignatureX() bool {
	if o != nil && !IsNil(o.IEzsigntemplatesignatureX) {
		return true
	}

	return false
}

// SetIEzsigntemplatesignatureX gets a reference to the given int32 and assigns it to the IEzsigntemplatesignatureX field.
func (o *EzsigntemplatesignatureRequestCompound) SetIEzsigntemplatesignatureX(v int32) {
	o.IEzsigntemplatesignatureX = &v
}

// GetIEzsigntemplatesignatureY returns the IEzsigntemplatesignatureY field value if set, zero value otherwise.
func (o *EzsigntemplatesignatureRequestCompound) GetIEzsigntemplatesignatureY() int32 {
	if o == nil || IsNil(o.IEzsigntemplatesignatureY) {
		var ret int32
		return ret
	}
	return *o.IEzsigntemplatesignatureY
}

// GetIEzsigntemplatesignatureYOk returns a tuple with the IEzsigntemplatesignatureY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplatesignatureRequestCompound) GetIEzsigntemplatesignatureYOk() (*int32, bool) {
	if o == nil || IsNil(o.IEzsigntemplatesignatureY) {
		return nil, false
	}
	return o.IEzsigntemplatesignatureY, true
}

// HasIEzsigntemplatesignatureY returns a boolean if a field has been set.
func (o *EzsigntemplatesignatureRequestCompound) HasIEzsigntemplatesignatureY() bool {
	if o != nil && !IsNil(o.IEzsigntemplatesignatureY) {
		return true
	}

	return false
}

// SetIEzsigntemplatesignatureY gets a reference to the given int32 and assigns it to the IEzsigntemplatesignatureY field.
func (o *EzsigntemplatesignatureRequestCompound) SetIEzsigntemplatesignatureY(v int32) {
	o.IEzsigntemplatesignatureY = &v
}

// GetIEzsigntemplatesignatureWidth returns the IEzsigntemplatesignatureWidth field value if set, zero value otherwise.
func (o *EzsigntemplatesignatureRequestCompound) GetIEzsigntemplatesignatureWidth() int32 {
	if o == nil || IsNil(o.IEzsigntemplatesignatureWidth) {
		var ret int32
		return ret
	}
	return *o.IEzsigntemplatesignatureWidth
}

// GetIEzsigntemplatesignatureWidthOk returns a tuple with the IEzsigntemplatesignatureWidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplatesignatureRequestCompound) GetIEzsigntemplatesignatureWidthOk() (*int32, bool) {
	if o == nil || IsNil(o.IEzsigntemplatesignatureWidth) {
		return nil, false
	}
	return o.IEzsigntemplatesignatureWidth, true
}

// HasIEzsigntemplatesignatureWidth returns a boolean if a field has been set.
func (o *EzsigntemplatesignatureRequestCompound) HasIEzsigntemplatesignatureWidth() bool {
	if o != nil && !IsNil(o.IEzsigntemplatesignatureWidth) {
		return true
	}

	return false
}

// SetIEzsigntemplatesignatureWidth gets a reference to the given int32 and assigns it to the IEzsigntemplatesignatureWidth field.
func (o *EzsigntemplatesignatureRequestCompound) SetIEzsigntemplatesignatureWidth(v int32) {
	o.IEzsigntemplatesignatureWidth = &v
}

// GetIEzsigntemplatesignatureHeight returns the IEzsigntemplatesignatureHeight field value if set, zero value otherwise.
func (o *EzsigntemplatesignatureRequestCompound) GetIEzsigntemplatesignatureHeight() int32 {
	if o == nil || IsNil(o.IEzsigntemplatesignatureHeight) {
		var ret int32
		return ret
	}
	return *o.IEzsigntemplatesignatureHeight
}

// GetIEzsigntemplatesignatureHeightOk returns a tuple with the IEzsigntemplatesignatureHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplatesignatureRequestCompound) GetIEzsigntemplatesignatureHeightOk() (*int32, bool) {
	if o == nil || IsNil(o.IEzsigntemplatesignatureHeight) {
		return nil, false
	}
	return o.IEzsigntemplatesignatureHeight, true
}

// HasIEzsigntemplatesignatureHeight returns a boolean if a field has been set.
func (o *EzsigntemplatesignatureRequestCompound) HasIEzsigntemplatesignatureHeight() bool {
	if o != nil && !IsNil(o.IEzsigntemplatesignatureHeight) {
		return true
	}

	return false
}

// SetIEzsigntemplatesignatureHeight gets a reference to the given int32 and assigns it to the IEzsigntemplatesignatureHeight field.
func (o *EzsigntemplatesignatureRequestCompound) SetIEzsigntemplatesignatureHeight(v int32) {
	o.IEzsigntemplatesignatureHeight = &v
}

// GetIEzsigntemplatesignatureStep returns the IEzsigntemplatesignatureStep field value
func (o *EzsigntemplatesignatureRequestCompound) GetIEzsigntemplatesignatureStep() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IEzsigntemplatesignatureStep
}

// GetIEzsigntemplatesignatureStepOk returns a tuple with the IEzsigntemplatesignatureStep field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplatesignatureRequestCompound) GetIEzsigntemplatesignatureStepOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IEzsigntemplatesignatureStep, true
}

// SetIEzsigntemplatesignatureStep sets field value
func (o *EzsigntemplatesignatureRequestCompound) SetIEzsigntemplatesignatureStep(v int32) {
	o.IEzsigntemplatesignatureStep = v
}

// GetEEzsigntemplatesignatureType returns the EEzsigntemplatesignatureType field value
func (o *EzsigntemplatesignatureRequestCompound) GetEEzsigntemplatesignatureType() FieldEEzsigntemplatesignatureType {
	if o == nil {
		var ret FieldEEzsigntemplatesignatureType
		return ret
	}

	return o.EEzsigntemplatesignatureType
}

// GetEEzsigntemplatesignatureTypeOk returns a tuple with the EEzsigntemplatesignatureType field value
// and a boolean to check if the value has been set.
func (o *EzsigntemplatesignatureRequestCompound) GetEEzsigntemplatesignatureTypeOk() (*FieldEEzsigntemplatesignatureType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EEzsigntemplatesignatureType, true
}

// SetEEzsigntemplatesignatureType sets field value
func (o *EzsigntemplatesignatureRequestCompound) SetEEzsigntemplatesignatureType(v FieldEEzsigntemplatesignatureType) {
	o.EEzsigntemplatesignatureType = v
}

// GetTEzsigntemplatesignatureTooltip returns the TEzsigntemplatesignatureTooltip field value if set, zero value otherwise.
func (o *EzsigntemplatesignatureRequestCompound) GetTEzsigntemplatesignatureTooltip() string {
	if o == nil || IsNil(o.TEzsigntemplatesignatureTooltip) {
		var ret string
		return ret
	}
	return *o.TEzsigntemplatesignatureTooltip
}

// GetTEzsigntemplatesignatureTooltipOk returns a tuple with the TEzsigntemplatesignatureTooltip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplatesignatureRequestCompound) GetTEzsigntemplatesignatureTooltipOk() (*string, bool) {
	if o == nil || IsNil(o.TEzsigntemplatesignatureTooltip) {
		return nil, false
	}
	return o.TEzsigntemplatesignatureTooltip, true
}

// HasTEzsigntemplatesignatureTooltip returns a boolean if a field has been set.
func (o *EzsigntemplatesignatureRequestCompound) HasTEzsigntemplatesignatureTooltip() bool {
	if o != nil && !IsNil(o.TEzsigntemplatesignatureTooltip) {
		return true
	}

	return false
}

// SetTEzsigntemplatesignatureTooltip gets a reference to the given string and assigns it to the TEzsigntemplatesignatureTooltip field.
func (o *EzsigntemplatesignatureRequestCompound) SetTEzsigntemplatesignatureTooltip(v string) {
	o.TEzsigntemplatesignatureTooltip = &v
}

// GetEEzsigntemplatesignatureTooltipposition returns the EEzsigntemplatesignatureTooltipposition field value if set, zero value otherwise.
func (o *EzsigntemplatesignatureRequestCompound) GetEEzsigntemplatesignatureTooltipposition() FieldEEzsigntemplatesignatureTooltipposition {
	if o == nil || IsNil(o.EEzsigntemplatesignatureTooltipposition) {
		var ret FieldEEzsigntemplatesignatureTooltipposition
		return ret
	}
	return *o.EEzsigntemplatesignatureTooltipposition
}

// GetEEzsigntemplatesignatureTooltippositionOk returns a tuple with the EEzsigntemplatesignatureTooltipposition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplatesignatureRequestCompound) GetEEzsigntemplatesignatureTooltippositionOk() (*FieldEEzsigntemplatesignatureTooltipposition, bool) {
	if o == nil || IsNil(o.EEzsigntemplatesignatureTooltipposition) {
		return nil, false
	}
	return o.EEzsigntemplatesignatureTooltipposition, true
}

// HasEEzsigntemplatesignatureTooltipposition returns a boolean if a field has been set.
func (o *EzsigntemplatesignatureRequestCompound) HasEEzsigntemplatesignatureTooltipposition() bool {
	if o != nil && !IsNil(o.EEzsigntemplatesignatureTooltipposition) {
		return true
	}

	return false
}

// SetEEzsigntemplatesignatureTooltipposition gets a reference to the given FieldEEzsigntemplatesignatureTooltipposition and assigns it to the EEzsigntemplatesignatureTooltipposition field.
func (o *EzsigntemplatesignatureRequestCompound) SetEEzsigntemplatesignatureTooltipposition(v FieldEEzsigntemplatesignatureTooltipposition) {
	o.EEzsigntemplatesignatureTooltipposition = &v
}

// GetEEzsigntemplatesignatureFont returns the EEzsigntemplatesignatureFont field value if set, zero value otherwise.
func (o *EzsigntemplatesignatureRequestCompound) GetEEzsigntemplatesignatureFont() FieldEEzsigntemplatesignatureFont {
	if o == nil || IsNil(o.EEzsigntemplatesignatureFont) {
		var ret FieldEEzsigntemplatesignatureFont
		return ret
	}
	return *o.EEzsigntemplatesignatureFont
}

// GetEEzsigntemplatesignatureFontOk returns a tuple with the EEzsigntemplatesignatureFont field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplatesignatureRequestCompound) GetEEzsigntemplatesignatureFontOk() (*FieldEEzsigntemplatesignatureFont, bool) {
	if o == nil || IsNil(o.EEzsigntemplatesignatureFont) {
		return nil, false
	}
	return o.EEzsigntemplatesignatureFont, true
}

// HasEEzsigntemplatesignatureFont returns a boolean if a field has been set.
func (o *EzsigntemplatesignatureRequestCompound) HasEEzsigntemplatesignatureFont() bool {
	if o != nil && !IsNil(o.EEzsigntemplatesignatureFont) {
		return true
	}

	return false
}

// SetEEzsigntemplatesignatureFont gets a reference to the given FieldEEzsigntemplatesignatureFont and assigns it to the EEzsigntemplatesignatureFont field.
func (o *EzsigntemplatesignatureRequestCompound) SetEEzsigntemplatesignatureFont(v FieldEEzsigntemplatesignatureFont) {
	o.EEzsigntemplatesignatureFont = &v
}

// GetBEzsigntemplatesignatureRequired returns the BEzsigntemplatesignatureRequired field value if set, zero value otherwise.
func (o *EzsigntemplatesignatureRequestCompound) GetBEzsigntemplatesignatureRequired() bool {
	if o == nil || IsNil(o.BEzsigntemplatesignatureRequired) {
		var ret bool
		return ret
	}
	return *o.BEzsigntemplatesignatureRequired
}

// GetBEzsigntemplatesignatureRequiredOk returns a tuple with the BEzsigntemplatesignatureRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplatesignatureRequestCompound) GetBEzsigntemplatesignatureRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsigntemplatesignatureRequired) {
		return nil, false
	}
	return o.BEzsigntemplatesignatureRequired, true
}

// HasBEzsigntemplatesignatureRequired returns a boolean if a field has been set.
func (o *EzsigntemplatesignatureRequestCompound) HasBEzsigntemplatesignatureRequired() bool {
	if o != nil && !IsNil(o.BEzsigntemplatesignatureRequired) {
		return true
	}

	return false
}

// SetBEzsigntemplatesignatureRequired gets a reference to the given bool and assigns it to the BEzsigntemplatesignatureRequired field.
func (o *EzsigntemplatesignatureRequestCompound) SetBEzsigntemplatesignatureRequired(v bool) {
	o.BEzsigntemplatesignatureRequired = &v
}

// GetEEzsigntemplatesignatureAttachmentnamesource returns the EEzsigntemplatesignatureAttachmentnamesource field value if set, zero value otherwise.
func (o *EzsigntemplatesignatureRequestCompound) GetEEzsigntemplatesignatureAttachmentnamesource() FieldEEzsigntemplatesignatureAttachmentnamesource {
	if o == nil || IsNil(o.EEzsigntemplatesignatureAttachmentnamesource) {
		var ret FieldEEzsigntemplatesignatureAttachmentnamesource
		return ret
	}
	return *o.EEzsigntemplatesignatureAttachmentnamesource
}

// GetEEzsigntemplatesignatureAttachmentnamesourceOk returns a tuple with the EEzsigntemplatesignatureAttachmentnamesource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplatesignatureRequestCompound) GetEEzsigntemplatesignatureAttachmentnamesourceOk() (*FieldEEzsigntemplatesignatureAttachmentnamesource, bool) {
	if o == nil || IsNil(o.EEzsigntemplatesignatureAttachmentnamesource) {
		return nil, false
	}
	return o.EEzsigntemplatesignatureAttachmentnamesource, true
}

// HasEEzsigntemplatesignatureAttachmentnamesource returns a boolean if a field has been set.
func (o *EzsigntemplatesignatureRequestCompound) HasEEzsigntemplatesignatureAttachmentnamesource() bool {
	if o != nil && !IsNil(o.EEzsigntemplatesignatureAttachmentnamesource) {
		return true
	}

	return false
}

// SetEEzsigntemplatesignatureAttachmentnamesource gets a reference to the given FieldEEzsigntemplatesignatureAttachmentnamesource and assigns it to the EEzsigntemplatesignatureAttachmentnamesource field.
func (o *EzsigntemplatesignatureRequestCompound) SetEEzsigntemplatesignatureAttachmentnamesource(v FieldEEzsigntemplatesignatureAttachmentnamesource) {
	o.EEzsigntemplatesignatureAttachmentnamesource = &v
}

// GetSEzsigntemplatesignatureAttachmentdescription returns the SEzsigntemplatesignatureAttachmentdescription field value if set, zero value otherwise.
func (o *EzsigntemplatesignatureRequestCompound) GetSEzsigntemplatesignatureAttachmentdescription() string {
	if o == nil || IsNil(o.SEzsigntemplatesignatureAttachmentdescription) {
		var ret string
		return ret
	}
	return *o.SEzsigntemplatesignatureAttachmentdescription
}

// GetSEzsigntemplatesignatureAttachmentdescriptionOk returns a tuple with the SEzsigntemplatesignatureAttachmentdescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplatesignatureRequestCompound) GetSEzsigntemplatesignatureAttachmentdescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.SEzsigntemplatesignatureAttachmentdescription) {
		return nil, false
	}
	return o.SEzsigntemplatesignatureAttachmentdescription, true
}

// HasSEzsigntemplatesignatureAttachmentdescription returns a boolean if a field has been set.
func (o *EzsigntemplatesignatureRequestCompound) HasSEzsigntemplatesignatureAttachmentdescription() bool {
	if o != nil && !IsNil(o.SEzsigntemplatesignatureAttachmentdescription) {
		return true
	}

	return false
}

// SetSEzsigntemplatesignatureAttachmentdescription gets a reference to the given string and assigns it to the SEzsigntemplatesignatureAttachmentdescription field.
func (o *EzsigntemplatesignatureRequestCompound) SetSEzsigntemplatesignatureAttachmentdescription(v string) {
	o.SEzsigntemplatesignatureAttachmentdescription = &v
}

// GetIEzsigntemplatesignatureValidationstep returns the IEzsigntemplatesignatureValidationstep field value if set, zero value otherwise.
func (o *EzsigntemplatesignatureRequestCompound) GetIEzsigntemplatesignatureValidationstep() int32 {
	if o == nil || IsNil(o.IEzsigntemplatesignatureValidationstep) {
		var ret int32
		return ret
	}
	return *o.IEzsigntemplatesignatureValidationstep
}

// GetIEzsigntemplatesignatureValidationstepOk returns a tuple with the IEzsigntemplatesignatureValidationstep field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplatesignatureRequestCompound) GetIEzsigntemplatesignatureValidationstepOk() (*int32, bool) {
	if o == nil || IsNil(o.IEzsigntemplatesignatureValidationstep) {
		return nil, false
	}
	return o.IEzsigntemplatesignatureValidationstep, true
}

// HasIEzsigntemplatesignatureValidationstep returns a boolean if a field has been set.
func (o *EzsigntemplatesignatureRequestCompound) HasIEzsigntemplatesignatureValidationstep() bool {
	if o != nil && !IsNil(o.IEzsigntemplatesignatureValidationstep) {
		return true
	}

	return false
}

// SetIEzsigntemplatesignatureValidationstep gets a reference to the given int32 and assigns it to the IEzsigntemplatesignatureValidationstep field.
func (o *EzsigntemplatesignatureRequestCompound) SetIEzsigntemplatesignatureValidationstep(v int32) {
	o.IEzsigntemplatesignatureValidationstep = &v
}

// GetIEzsigntemplatesignatureMaxlength returns the IEzsigntemplatesignatureMaxlength field value if set, zero value otherwise.
func (o *EzsigntemplatesignatureRequestCompound) GetIEzsigntemplatesignatureMaxlength() int32 {
	if o == nil || IsNil(o.IEzsigntemplatesignatureMaxlength) {
		var ret int32
		return ret
	}
	return *o.IEzsigntemplatesignatureMaxlength
}

// GetIEzsigntemplatesignatureMaxlengthOk returns a tuple with the IEzsigntemplatesignatureMaxlength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplatesignatureRequestCompound) GetIEzsigntemplatesignatureMaxlengthOk() (*int32, bool) {
	if o == nil || IsNil(o.IEzsigntemplatesignatureMaxlength) {
		return nil, false
	}
	return o.IEzsigntemplatesignatureMaxlength, true
}

// HasIEzsigntemplatesignatureMaxlength returns a boolean if a field has been set.
func (o *EzsigntemplatesignatureRequestCompound) HasIEzsigntemplatesignatureMaxlength() bool {
	if o != nil && !IsNil(o.IEzsigntemplatesignatureMaxlength) {
		return true
	}

	return false
}

// SetIEzsigntemplatesignatureMaxlength gets a reference to the given int32 and assigns it to the IEzsigntemplatesignatureMaxlength field.
func (o *EzsigntemplatesignatureRequestCompound) SetIEzsigntemplatesignatureMaxlength(v int32) {
	o.IEzsigntemplatesignatureMaxlength = &v
}

// GetSEzsigntemplatesignatureRegexp returns the SEzsigntemplatesignatureRegexp field value if set, zero value otherwise.
func (o *EzsigntemplatesignatureRequestCompound) GetSEzsigntemplatesignatureRegexp() string {
	if o == nil || IsNil(o.SEzsigntemplatesignatureRegexp) {
		var ret string
		return ret
	}
	return *o.SEzsigntemplatesignatureRegexp
}

// GetSEzsigntemplatesignatureRegexpOk returns a tuple with the SEzsigntemplatesignatureRegexp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplatesignatureRequestCompound) GetSEzsigntemplatesignatureRegexpOk() (*string, bool) {
	if o == nil || IsNil(o.SEzsigntemplatesignatureRegexp) {
		return nil, false
	}
	return o.SEzsigntemplatesignatureRegexp, true
}

// HasSEzsigntemplatesignatureRegexp returns a boolean if a field has been set.
func (o *EzsigntemplatesignatureRequestCompound) HasSEzsigntemplatesignatureRegexp() bool {
	if o != nil && !IsNil(o.SEzsigntemplatesignatureRegexp) {
		return true
	}

	return false
}

// SetSEzsigntemplatesignatureRegexp gets a reference to the given string and assigns it to the SEzsigntemplatesignatureRegexp field.
func (o *EzsigntemplatesignatureRequestCompound) SetSEzsigntemplatesignatureRegexp(v string) {
	o.SEzsigntemplatesignatureRegexp = &v
}

// GetEEzsigntemplatesignatureTextvalidation returns the EEzsigntemplatesignatureTextvalidation field value if set, zero value otherwise.
func (o *EzsigntemplatesignatureRequestCompound) GetEEzsigntemplatesignatureTextvalidation() EnumTextvalidation {
	if o == nil || IsNil(o.EEzsigntemplatesignatureTextvalidation) {
		var ret EnumTextvalidation
		return ret
	}
	return *o.EEzsigntemplatesignatureTextvalidation
}

// GetEEzsigntemplatesignatureTextvalidationOk returns a tuple with the EEzsigntemplatesignatureTextvalidation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplatesignatureRequestCompound) GetEEzsigntemplatesignatureTextvalidationOk() (*EnumTextvalidation, bool) {
	if o == nil || IsNil(o.EEzsigntemplatesignatureTextvalidation) {
		return nil, false
	}
	return o.EEzsigntemplatesignatureTextvalidation, true
}

// HasEEzsigntemplatesignatureTextvalidation returns a boolean if a field has been set.
func (o *EzsigntemplatesignatureRequestCompound) HasEEzsigntemplatesignatureTextvalidation() bool {
	if o != nil && !IsNil(o.EEzsigntemplatesignatureTextvalidation) {
		return true
	}

	return false
}

// SetEEzsigntemplatesignatureTextvalidation gets a reference to the given EnumTextvalidation and assigns it to the EEzsigntemplatesignatureTextvalidation field.
func (o *EzsigntemplatesignatureRequestCompound) SetEEzsigntemplatesignatureTextvalidation(v EnumTextvalidation) {
	o.EEzsigntemplatesignatureTextvalidation = &v
}

// GetEEzsigntemplatesignatureDependencyrequirement returns the EEzsigntemplatesignatureDependencyrequirement field value if set, zero value otherwise.
func (o *EzsigntemplatesignatureRequestCompound) GetEEzsigntemplatesignatureDependencyrequirement() FieldEEzsigntemplatesignatureDependencyrequirement {
	if o == nil || IsNil(o.EEzsigntemplatesignatureDependencyrequirement) {
		var ret FieldEEzsigntemplatesignatureDependencyrequirement
		return ret
	}
	return *o.EEzsigntemplatesignatureDependencyrequirement
}

// GetEEzsigntemplatesignatureDependencyrequirementOk returns a tuple with the EEzsigntemplatesignatureDependencyrequirement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplatesignatureRequestCompound) GetEEzsigntemplatesignatureDependencyrequirementOk() (*FieldEEzsigntemplatesignatureDependencyrequirement, bool) {
	if o == nil || IsNil(o.EEzsigntemplatesignatureDependencyrequirement) {
		return nil, false
	}
	return o.EEzsigntemplatesignatureDependencyrequirement, true
}

// HasEEzsigntemplatesignatureDependencyrequirement returns a boolean if a field has been set.
func (o *EzsigntemplatesignatureRequestCompound) HasEEzsigntemplatesignatureDependencyrequirement() bool {
	if o != nil && !IsNil(o.EEzsigntemplatesignatureDependencyrequirement) {
		return true
	}

	return false
}

// SetEEzsigntemplatesignatureDependencyrequirement gets a reference to the given FieldEEzsigntemplatesignatureDependencyrequirement and assigns it to the EEzsigntemplatesignatureDependencyrequirement field.
func (o *EzsigntemplatesignatureRequestCompound) SetEEzsigntemplatesignatureDependencyrequirement(v FieldEEzsigntemplatesignatureDependencyrequirement) {
	o.EEzsigntemplatesignatureDependencyrequirement = &v
}

// GetSEzsigntemplatesignaturePositioningpattern returns the SEzsigntemplatesignaturePositioningpattern field value if set, zero value otherwise.
func (o *EzsigntemplatesignatureRequestCompound) GetSEzsigntemplatesignaturePositioningpattern() string {
	if o == nil || IsNil(o.SEzsigntemplatesignaturePositioningpattern) {
		var ret string
		return ret
	}
	return *o.SEzsigntemplatesignaturePositioningpattern
}

// GetSEzsigntemplatesignaturePositioningpatternOk returns a tuple with the SEzsigntemplatesignaturePositioningpattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplatesignatureRequestCompound) GetSEzsigntemplatesignaturePositioningpatternOk() (*string, bool) {
	if o == nil || IsNil(o.SEzsigntemplatesignaturePositioningpattern) {
		return nil, false
	}
	return o.SEzsigntemplatesignaturePositioningpattern, true
}

// HasSEzsigntemplatesignaturePositioningpattern returns a boolean if a field has been set.
func (o *EzsigntemplatesignatureRequestCompound) HasSEzsigntemplatesignaturePositioningpattern() bool {
	if o != nil && !IsNil(o.SEzsigntemplatesignaturePositioningpattern) {
		return true
	}

	return false
}

// SetSEzsigntemplatesignaturePositioningpattern gets a reference to the given string and assigns it to the SEzsigntemplatesignaturePositioningpattern field.
func (o *EzsigntemplatesignatureRequestCompound) SetSEzsigntemplatesignaturePositioningpattern(v string) {
	o.SEzsigntemplatesignaturePositioningpattern = &v
}

// GetIEzsigntemplatesignaturePositioningoffsetx returns the IEzsigntemplatesignaturePositioningoffsetx field value if set, zero value otherwise.
func (o *EzsigntemplatesignatureRequestCompound) GetIEzsigntemplatesignaturePositioningoffsetx() int32 {
	if o == nil || IsNil(o.IEzsigntemplatesignaturePositioningoffsetx) {
		var ret int32
		return ret
	}
	return *o.IEzsigntemplatesignaturePositioningoffsetx
}

// GetIEzsigntemplatesignaturePositioningoffsetxOk returns a tuple with the IEzsigntemplatesignaturePositioningoffsetx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplatesignatureRequestCompound) GetIEzsigntemplatesignaturePositioningoffsetxOk() (*int32, bool) {
	if o == nil || IsNil(o.IEzsigntemplatesignaturePositioningoffsetx) {
		return nil, false
	}
	return o.IEzsigntemplatesignaturePositioningoffsetx, true
}

// HasIEzsigntemplatesignaturePositioningoffsetx returns a boolean if a field has been set.
func (o *EzsigntemplatesignatureRequestCompound) HasIEzsigntemplatesignaturePositioningoffsetx() bool {
	if o != nil && !IsNil(o.IEzsigntemplatesignaturePositioningoffsetx) {
		return true
	}

	return false
}

// SetIEzsigntemplatesignaturePositioningoffsetx gets a reference to the given int32 and assigns it to the IEzsigntemplatesignaturePositioningoffsetx field.
func (o *EzsigntemplatesignatureRequestCompound) SetIEzsigntemplatesignaturePositioningoffsetx(v int32) {
	o.IEzsigntemplatesignaturePositioningoffsetx = &v
}

// GetIEzsigntemplatesignaturePositioningoffsety returns the IEzsigntemplatesignaturePositioningoffsety field value if set, zero value otherwise.
func (o *EzsigntemplatesignatureRequestCompound) GetIEzsigntemplatesignaturePositioningoffsety() int32 {
	if o == nil || IsNil(o.IEzsigntemplatesignaturePositioningoffsety) {
		var ret int32
		return ret
	}
	return *o.IEzsigntemplatesignaturePositioningoffsety
}

// GetIEzsigntemplatesignaturePositioningoffsetyOk returns a tuple with the IEzsigntemplatesignaturePositioningoffsety field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplatesignatureRequestCompound) GetIEzsigntemplatesignaturePositioningoffsetyOk() (*int32, bool) {
	if o == nil || IsNil(o.IEzsigntemplatesignaturePositioningoffsety) {
		return nil, false
	}
	return o.IEzsigntemplatesignaturePositioningoffsety, true
}

// HasIEzsigntemplatesignaturePositioningoffsety returns a boolean if a field has been set.
func (o *EzsigntemplatesignatureRequestCompound) HasIEzsigntemplatesignaturePositioningoffsety() bool {
	if o != nil && !IsNil(o.IEzsigntemplatesignaturePositioningoffsety) {
		return true
	}

	return false
}

// SetIEzsigntemplatesignaturePositioningoffsety gets a reference to the given int32 and assigns it to the IEzsigntemplatesignaturePositioningoffsety field.
func (o *EzsigntemplatesignatureRequestCompound) SetIEzsigntemplatesignaturePositioningoffsety(v int32) {
	o.IEzsigntemplatesignaturePositioningoffsety = &v
}

// GetEEzsigntemplatesignaturePositioningoccurence returns the EEzsigntemplatesignaturePositioningoccurence field value if set, zero value otherwise.
func (o *EzsigntemplatesignatureRequestCompound) GetEEzsigntemplatesignaturePositioningoccurence() FieldEEzsigntemplatesignaturePositioningoccurence {
	if o == nil || IsNil(o.EEzsigntemplatesignaturePositioningoccurence) {
		var ret FieldEEzsigntemplatesignaturePositioningoccurence
		return ret
	}
	return *o.EEzsigntemplatesignaturePositioningoccurence
}

// GetEEzsigntemplatesignaturePositioningoccurenceOk returns a tuple with the EEzsigntemplatesignaturePositioningoccurence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplatesignatureRequestCompound) GetEEzsigntemplatesignaturePositioningoccurenceOk() (*FieldEEzsigntemplatesignaturePositioningoccurence, bool) {
	if o == nil || IsNil(o.EEzsigntemplatesignaturePositioningoccurence) {
		return nil, false
	}
	return o.EEzsigntemplatesignaturePositioningoccurence, true
}

// HasEEzsigntemplatesignaturePositioningoccurence returns a boolean if a field has been set.
func (o *EzsigntemplatesignatureRequestCompound) HasEEzsigntemplatesignaturePositioningoccurence() bool {
	if o != nil && !IsNil(o.EEzsigntemplatesignaturePositioningoccurence) {
		return true
	}

	return false
}

// SetEEzsigntemplatesignaturePositioningoccurence gets a reference to the given FieldEEzsigntemplatesignaturePositioningoccurence and assigns it to the EEzsigntemplatesignaturePositioningoccurence field.
func (o *EzsigntemplatesignatureRequestCompound) SetEEzsigntemplatesignaturePositioningoccurence(v FieldEEzsigntemplatesignaturePositioningoccurence) {
	o.EEzsigntemplatesignaturePositioningoccurence = &v
}

// GetBEzsigntemplatesignatureCustomdate returns the BEzsigntemplatesignatureCustomdate field value if set, zero value otherwise.
func (o *EzsigntemplatesignatureRequestCompound) GetBEzsigntemplatesignatureCustomdate() bool {
	if o == nil || IsNil(o.BEzsigntemplatesignatureCustomdate) {
		var ret bool
		return ret
	}
	return *o.BEzsigntemplatesignatureCustomdate
}

// GetBEzsigntemplatesignatureCustomdateOk returns a tuple with the BEzsigntemplatesignatureCustomdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplatesignatureRequestCompound) GetBEzsigntemplatesignatureCustomdateOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsigntemplatesignatureCustomdate) {
		return nil, false
	}
	return o.BEzsigntemplatesignatureCustomdate, true
}

// HasBEzsigntemplatesignatureCustomdate returns a boolean if a field has been set.
func (o *EzsigntemplatesignatureRequestCompound) HasBEzsigntemplatesignatureCustomdate() bool {
	if o != nil && !IsNil(o.BEzsigntemplatesignatureCustomdate) {
		return true
	}

	return false
}

// SetBEzsigntemplatesignatureCustomdate gets a reference to the given bool and assigns it to the BEzsigntemplatesignatureCustomdate field.
func (o *EzsigntemplatesignatureRequestCompound) SetBEzsigntemplatesignatureCustomdate(v bool) {
	o.BEzsigntemplatesignatureCustomdate = &v
}

// GetAObjEzsigntemplatesignaturecustomdate returns the AObjEzsigntemplatesignaturecustomdate field value if set, zero value otherwise.
func (o *EzsigntemplatesignatureRequestCompound) GetAObjEzsigntemplatesignaturecustomdate() []EzsigntemplatesignaturecustomdateRequestCompound {
	if o == nil || IsNil(o.AObjEzsigntemplatesignaturecustomdate) {
		var ret []EzsigntemplatesignaturecustomdateRequestCompound
		return ret
	}
	return o.AObjEzsigntemplatesignaturecustomdate
}

// GetAObjEzsigntemplatesignaturecustomdateOk returns a tuple with the AObjEzsigntemplatesignaturecustomdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplatesignatureRequestCompound) GetAObjEzsigntemplatesignaturecustomdateOk() ([]EzsigntemplatesignaturecustomdateRequestCompound, bool) {
	if o == nil || IsNil(o.AObjEzsigntemplatesignaturecustomdate) {
		return nil, false
	}
	return o.AObjEzsigntemplatesignaturecustomdate, true
}

// HasAObjEzsigntemplatesignaturecustomdate returns a boolean if a field has been set.
func (o *EzsigntemplatesignatureRequestCompound) HasAObjEzsigntemplatesignaturecustomdate() bool {
	if o != nil && !IsNil(o.AObjEzsigntemplatesignaturecustomdate) {
		return true
	}

	return false
}

// SetAObjEzsigntemplatesignaturecustomdate gets a reference to the given []EzsigntemplatesignaturecustomdateRequestCompound and assigns it to the AObjEzsigntemplatesignaturecustomdate field.
func (o *EzsigntemplatesignatureRequestCompound) SetAObjEzsigntemplatesignaturecustomdate(v []EzsigntemplatesignaturecustomdateRequestCompound) {
	o.AObjEzsigntemplatesignaturecustomdate = v
}

// GetAObjEzsigntemplateelementdependency returns the AObjEzsigntemplateelementdependency field value if set, zero value otherwise.
func (o *EzsigntemplatesignatureRequestCompound) GetAObjEzsigntemplateelementdependency() []EzsigntemplateelementdependencyRequestCompound {
	if o == nil || IsNil(o.AObjEzsigntemplateelementdependency) {
		var ret []EzsigntemplateelementdependencyRequestCompound
		return ret
	}
	return o.AObjEzsigntemplateelementdependency
}

// GetAObjEzsigntemplateelementdependencyOk returns a tuple with the AObjEzsigntemplateelementdependency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigntemplatesignatureRequestCompound) GetAObjEzsigntemplateelementdependencyOk() ([]EzsigntemplateelementdependencyRequestCompound, bool) {
	if o == nil || IsNil(o.AObjEzsigntemplateelementdependency) {
		return nil, false
	}
	return o.AObjEzsigntemplateelementdependency, true
}

// HasAObjEzsigntemplateelementdependency returns a boolean if a field has been set.
func (o *EzsigntemplatesignatureRequestCompound) HasAObjEzsigntemplateelementdependency() bool {
	if o != nil && !IsNil(o.AObjEzsigntemplateelementdependency) {
		return true
	}

	return false
}

// SetAObjEzsigntemplateelementdependency gets a reference to the given []EzsigntemplateelementdependencyRequestCompound and assigns it to the AObjEzsigntemplateelementdependency field.
func (o *EzsigntemplatesignatureRequestCompound) SetAObjEzsigntemplateelementdependency(v []EzsigntemplateelementdependencyRequestCompound) {
	o.AObjEzsigntemplateelementdependency = v
}

func (o EzsigntemplatesignatureRequestCompound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsigntemplatesignatureRequestCompound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PkiEzsigntemplatesignatureID) {
		toSerialize["pkiEzsigntemplatesignatureID"] = o.PkiEzsigntemplatesignatureID
	}
	toSerialize["fkiEzsigntemplatedocumentID"] = o.FkiEzsigntemplatedocumentID
	toSerialize["fkiEzsigntemplatesignerID"] = o.FkiEzsigntemplatesignerID
	if !IsNil(o.FkiEzsigntemplatesignerIDValidation) {
		toSerialize["fkiEzsigntemplatesignerIDValidation"] = o.FkiEzsigntemplatesignerIDValidation
	}
	if !IsNil(o.EEzsigntemplatesignaturePositioning) {
		toSerialize["eEzsigntemplatesignaturePositioning"] = o.EEzsigntemplatesignaturePositioning
	}
	toSerialize["iEzsigntemplatedocumentpagePagenumber"] = o.IEzsigntemplatedocumentpagePagenumber
	if !IsNil(o.IEzsigntemplatesignatureX) {
		toSerialize["iEzsigntemplatesignatureX"] = o.IEzsigntemplatesignatureX
	}
	if !IsNil(o.IEzsigntemplatesignatureY) {
		toSerialize["iEzsigntemplatesignatureY"] = o.IEzsigntemplatesignatureY
	}
	if !IsNil(o.IEzsigntemplatesignatureWidth) {
		toSerialize["iEzsigntemplatesignatureWidth"] = o.IEzsigntemplatesignatureWidth
	}
	if !IsNil(o.IEzsigntemplatesignatureHeight) {
		toSerialize["iEzsigntemplatesignatureHeight"] = o.IEzsigntemplatesignatureHeight
	}
	toSerialize["iEzsigntemplatesignatureStep"] = o.IEzsigntemplatesignatureStep
	toSerialize["eEzsigntemplatesignatureType"] = o.EEzsigntemplatesignatureType
	if !IsNil(o.TEzsigntemplatesignatureTooltip) {
		toSerialize["tEzsigntemplatesignatureTooltip"] = o.TEzsigntemplatesignatureTooltip
	}
	if !IsNil(o.EEzsigntemplatesignatureTooltipposition) {
		toSerialize["eEzsigntemplatesignatureTooltipposition"] = o.EEzsigntemplatesignatureTooltipposition
	}
	if !IsNil(o.EEzsigntemplatesignatureFont) {
		toSerialize["eEzsigntemplatesignatureFont"] = o.EEzsigntemplatesignatureFont
	}
	if !IsNil(o.BEzsigntemplatesignatureRequired) {
		toSerialize["bEzsigntemplatesignatureRequired"] = o.BEzsigntemplatesignatureRequired
	}
	if !IsNil(o.EEzsigntemplatesignatureAttachmentnamesource) {
		toSerialize["eEzsigntemplatesignatureAttachmentnamesource"] = o.EEzsigntemplatesignatureAttachmentnamesource
	}
	if !IsNil(o.SEzsigntemplatesignatureAttachmentdescription) {
		toSerialize["sEzsigntemplatesignatureAttachmentdescription"] = o.SEzsigntemplatesignatureAttachmentdescription
	}
	if !IsNil(o.IEzsigntemplatesignatureValidationstep) {
		toSerialize["iEzsigntemplatesignatureValidationstep"] = o.IEzsigntemplatesignatureValidationstep
	}
	if !IsNil(o.IEzsigntemplatesignatureMaxlength) {
		toSerialize["iEzsigntemplatesignatureMaxlength"] = o.IEzsigntemplatesignatureMaxlength
	}
	if !IsNil(o.SEzsigntemplatesignatureRegexp) {
		toSerialize["sEzsigntemplatesignatureRegexp"] = o.SEzsigntemplatesignatureRegexp
	}
	if !IsNil(o.EEzsigntemplatesignatureTextvalidation) {
		toSerialize["eEzsigntemplatesignatureTextvalidation"] = o.EEzsigntemplatesignatureTextvalidation
	}
	if !IsNil(o.EEzsigntemplatesignatureDependencyrequirement) {
		toSerialize["eEzsigntemplatesignatureDependencyrequirement"] = o.EEzsigntemplatesignatureDependencyrequirement
	}
	if !IsNil(o.SEzsigntemplatesignaturePositioningpattern) {
		toSerialize["sEzsigntemplatesignaturePositioningpattern"] = o.SEzsigntemplatesignaturePositioningpattern
	}
	if !IsNil(o.IEzsigntemplatesignaturePositioningoffsetx) {
		toSerialize["iEzsigntemplatesignaturePositioningoffsetx"] = o.IEzsigntemplatesignaturePositioningoffsetx
	}
	if !IsNil(o.IEzsigntemplatesignaturePositioningoffsety) {
		toSerialize["iEzsigntemplatesignaturePositioningoffsety"] = o.IEzsigntemplatesignaturePositioningoffsety
	}
	if !IsNil(o.EEzsigntemplatesignaturePositioningoccurence) {
		toSerialize["eEzsigntemplatesignaturePositioningoccurence"] = o.EEzsigntemplatesignaturePositioningoccurence
	}
	if !IsNil(o.BEzsigntemplatesignatureCustomdate) {
		toSerialize["bEzsigntemplatesignatureCustomdate"] = o.BEzsigntemplatesignatureCustomdate
	}
	if !IsNil(o.AObjEzsigntemplatesignaturecustomdate) {
		toSerialize["a_objEzsigntemplatesignaturecustomdate"] = o.AObjEzsigntemplatesignaturecustomdate
	}
	if !IsNil(o.AObjEzsigntemplateelementdependency) {
		toSerialize["a_objEzsigntemplateelementdependency"] = o.AObjEzsigntemplateelementdependency
	}
	return toSerialize, nil
}

func (o *EzsigntemplatesignatureRequestCompound) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"fkiEzsigntemplatedocumentID",
		"fkiEzsigntemplatesignerID",
		"iEzsigntemplatedocumentpagePagenumber",
		"iEzsigntemplatesignatureStep",
		"eEzsigntemplatesignatureType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsigntemplatesignatureRequestCompound := _EzsigntemplatesignatureRequestCompound{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsigntemplatesignatureRequestCompound)

	if err != nil {
		return err
	}

	*o = EzsigntemplatesignatureRequestCompound(varEzsigntemplatesignatureRequestCompound)

	return err
}

type NullableEzsigntemplatesignatureRequestCompound struct {
	value *EzsigntemplatesignatureRequestCompound
	isSet bool
}

func (v NullableEzsigntemplatesignatureRequestCompound) Get() *EzsigntemplatesignatureRequestCompound {
	return v.value
}

func (v *NullableEzsigntemplatesignatureRequestCompound) Set(val *EzsigntemplatesignatureRequestCompound) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsigntemplatesignatureRequestCompound) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsigntemplatesignatureRequestCompound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsigntemplatesignatureRequestCompound(val *EzsigntemplatesignatureRequestCompound) *NullableEzsigntemplatesignatureRequestCompound {
	return &NullableEzsigntemplatesignatureRequestCompound{value: val, isSet: true}
}

func (v NullableEzsigntemplatesignatureRequestCompound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsigntemplatesignatureRequestCompound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


