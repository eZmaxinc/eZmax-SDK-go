/*
eZmax API Definition

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.1.4
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// EzsignsignerResponseCompoundContact A Ezsignsigner->Contact Object and children to create a complete structure
type EzsignsignerResponseCompoundContact struct {
	// The First name of the contact
	SContactFirstname string `json:"sContactFirstname"`
	// The Last name of the contact
	SContactLastname string `json:"sContactLastname"`
	// The unique ID of the Language.  Valid values:  |Value|Description| |-|-| |1|French| |2|English|
	FkiLanguageID int32 `json:"fkiLanguageID"`
	// The email address.
	SEmailAddress *string `json:"sEmailAddress,omitempty"`
	// A phone number in E.164 Format
	SPhoneE164 *string `json:"sPhoneE164,omitempty"`
	// A phone number in E.164 Format
	SPhoneE164Cell *string `json:"sPhoneE164Cell,omitempty"`
}

// NewEzsignsignerResponseCompoundContact instantiates a new EzsignsignerResponseCompoundContact object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsignsignerResponseCompoundContact(sContactFirstname string, sContactLastname string, fkiLanguageID int32) *EzsignsignerResponseCompoundContact {
	this := EzsignsignerResponseCompoundContact{}
	this.SContactFirstname = sContactFirstname
	this.SContactLastname = sContactLastname
	this.FkiLanguageID = fkiLanguageID
	return &this
}

// NewEzsignsignerResponseCompoundContactWithDefaults instantiates a new EzsignsignerResponseCompoundContact object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsignsignerResponseCompoundContactWithDefaults() *EzsignsignerResponseCompoundContact {
	this := EzsignsignerResponseCompoundContact{}
	return &this
}

// GetSContactFirstname returns the SContactFirstname field value
func (o *EzsignsignerResponseCompoundContact) GetSContactFirstname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SContactFirstname
}

// GetSContactFirstnameOk returns a tuple with the SContactFirstname field value
// and a boolean to check if the value has been set.
func (o *EzsignsignerResponseCompoundContact) GetSContactFirstnameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SContactFirstname, true
}

// SetSContactFirstname sets field value
func (o *EzsignsignerResponseCompoundContact) SetSContactFirstname(v string) {
	o.SContactFirstname = v
}

// GetSContactLastname returns the SContactLastname field value
func (o *EzsignsignerResponseCompoundContact) GetSContactLastname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SContactLastname
}

// GetSContactLastnameOk returns a tuple with the SContactLastname field value
// and a boolean to check if the value has been set.
func (o *EzsignsignerResponseCompoundContact) GetSContactLastnameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SContactLastname, true
}

// SetSContactLastname sets field value
func (o *EzsignsignerResponseCompoundContact) SetSContactLastname(v string) {
	o.SContactLastname = v
}

// GetFkiLanguageID returns the FkiLanguageID field value
func (o *EzsignsignerResponseCompoundContact) GetFkiLanguageID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiLanguageID
}

// GetFkiLanguageIDOk returns a tuple with the FkiLanguageID field value
// and a boolean to check if the value has been set.
func (o *EzsignsignerResponseCompoundContact) GetFkiLanguageIDOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FkiLanguageID, true
}

// SetFkiLanguageID sets field value
func (o *EzsignsignerResponseCompoundContact) SetFkiLanguageID(v int32) {
	o.FkiLanguageID = v
}

// GetSEmailAddress returns the SEmailAddress field value if set, zero value otherwise.
func (o *EzsignsignerResponseCompoundContact) GetSEmailAddress() string {
	if o == nil || o.SEmailAddress == nil {
		var ret string
		return ret
	}
	return *o.SEmailAddress
}

// GetSEmailAddressOk returns a tuple with the SEmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignsignerResponseCompoundContact) GetSEmailAddressOk() (*string, bool) {
	if o == nil || o.SEmailAddress == nil {
		return nil, false
	}
	return o.SEmailAddress, true
}

// HasSEmailAddress returns a boolean if a field has been set.
func (o *EzsignsignerResponseCompoundContact) HasSEmailAddress() bool {
	if o != nil && o.SEmailAddress != nil {
		return true
	}

	return false
}

// SetSEmailAddress gets a reference to the given string and assigns it to the SEmailAddress field.
func (o *EzsignsignerResponseCompoundContact) SetSEmailAddress(v string) {
	o.SEmailAddress = &v
}

// GetSPhoneE164 returns the SPhoneE164 field value if set, zero value otherwise.
func (o *EzsignsignerResponseCompoundContact) GetSPhoneE164() string {
	if o == nil || o.SPhoneE164 == nil {
		var ret string
		return ret
	}
	return *o.SPhoneE164
}

// GetSPhoneE164Ok returns a tuple with the SPhoneE164 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignsignerResponseCompoundContact) GetSPhoneE164Ok() (*string, bool) {
	if o == nil || o.SPhoneE164 == nil {
		return nil, false
	}
	return o.SPhoneE164, true
}

// HasSPhoneE164 returns a boolean if a field has been set.
func (o *EzsignsignerResponseCompoundContact) HasSPhoneE164() bool {
	if o != nil && o.SPhoneE164 != nil {
		return true
	}

	return false
}

// SetSPhoneE164 gets a reference to the given string and assigns it to the SPhoneE164 field.
func (o *EzsignsignerResponseCompoundContact) SetSPhoneE164(v string) {
	o.SPhoneE164 = &v
}

// GetSPhoneE164Cell returns the SPhoneE164Cell field value if set, zero value otherwise.
func (o *EzsignsignerResponseCompoundContact) GetSPhoneE164Cell() string {
	if o == nil || o.SPhoneE164Cell == nil {
		var ret string
		return ret
	}
	return *o.SPhoneE164Cell
}

// GetSPhoneE164CellOk returns a tuple with the SPhoneE164Cell field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignsignerResponseCompoundContact) GetSPhoneE164CellOk() (*string, bool) {
	if o == nil || o.SPhoneE164Cell == nil {
		return nil, false
	}
	return o.SPhoneE164Cell, true
}

// HasSPhoneE164Cell returns a boolean if a field has been set.
func (o *EzsignsignerResponseCompoundContact) HasSPhoneE164Cell() bool {
	if o != nil && o.SPhoneE164Cell != nil {
		return true
	}

	return false
}

// SetSPhoneE164Cell gets a reference to the given string and assigns it to the SPhoneE164Cell field.
func (o *EzsignsignerResponseCompoundContact) SetSPhoneE164Cell(v string) {
	o.SPhoneE164Cell = &v
}

func (o EzsignsignerResponseCompoundContact) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["sContactFirstname"] = o.SContactFirstname
	}
	if true {
		toSerialize["sContactLastname"] = o.SContactLastname
	}
	if true {
		toSerialize["fkiLanguageID"] = o.FkiLanguageID
	}
	if o.SEmailAddress != nil {
		toSerialize["sEmailAddress"] = o.SEmailAddress
	}
	if o.SPhoneE164 != nil {
		toSerialize["sPhoneE164"] = o.SPhoneE164
	}
	if o.SPhoneE164Cell != nil {
		toSerialize["sPhoneE164Cell"] = o.SPhoneE164Cell
	}
	return json.Marshal(toSerialize)
}

type NullableEzsignsignerResponseCompoundContact struct {
	value *EzsignsignerResponseCompoundContact
	isSet bool
}

func (v NullableEzsignsignerResponseCompoundContact) Get() *EzsignsignerResponseCompoundContact {
	return v.value
}

func (v *NullableEzsignsignerResponseCompoundContact) Set(val *EzsignsignerResponseCompoundContact) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsignsignerResponseCompoundContact) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsignsignerResponseCompoundContact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsignsignerResponseCompoundContact(val *EzsignsignerResponseCompoundContact) *NullableEzsignsignerResponseCompoundContact {
	return &NullableEzsignsignerResponseCompoundContact{value: val, isSet: true}
}

func (v NullableEzsignsignerResponseCompoundContact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsignsignerResponseCompoundContact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


