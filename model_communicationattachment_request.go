/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.2
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// checks if the CommunicationattachmentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommunicationattachmentRequest{}

// CommunicationattachmentRequest A Communicationattachment Object
type CommunicationattachmentRequest struct {
	// The unique ID of the Communicationattachment
	PkiCommunicationattachmentID *int32 `json:"pkiCommunicationattachmentID,omitempty"`
	// The unique ID of the Attachment.
	FkiAttachmentID *int32 `json:"fkiAttachmentID,omitempty"`
	// The unique ID of the Invoice.
	FkiInvoiceID *int32 `json:"fkiInvoiceID,omitempty"`
	// The unique ID of the Salarypreparation.
	FkiSalarypreparationID *int32 `json:"fkiSalarypreparationID,omitempty"`
}

// NewCommunicationattachmentRequest instantiates a new CommunicationattachmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommunicationattachmentRequest() *CommunicationattachmentRequest {
	this := CommunicationattachmentRequest{}
	return &this
}

// NewCommunicationattachmentRequestWithDefaults instantiates a new CommunicationattachmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommunicationattachmentRequestWithDefaults() *CommunicationattachmentRequest {
	this := CommunicationattachmentRequest{}
	return &this
}

// GetPkiCommunicationattachmentID returns the PkiCommunicationattachmentID field value if set, zero value otherwise.
func (o *CommunicationattachmentRequest) GetPkiCommunicationattachmentID() int32 {
	if o == nil || IsNil(o.PkiCommunicationattachmentID) {
		var ret int32
		return ret
	}
	return *o.PkiCommunicationattachmentID
}

// GetPkiCommunicationattachmentIDOk returns a tuple with the PkiCommunicationattachmentID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommunicationattachmentRequest) GetPkiCommunicationattachmentIDOk() (*int32, bool) {
	if o == nil || IsNil(o.PkiCommunicationattachmentID) {
		return nil, false
	}
	return o.PkiCommunicationattachmentID, true
}

// HasPkiCommunicationattachmentID returns a boolean if a field has been set.
func (o *CommunicationattachmentRequest) HasPkiCommunicationattachmentID() bool {
	if o != nil && !IsNil(o.PkiCommunicationattachmentID) {
		return true
	}

	return false
}

// SetPkiCommunicationattachmentID gets a reference to the given int32 and assigns it to the PkiCommunicationattachmentID field.
func (o *CommunicationattachmentRequest) SetPkiCommunicationattachmentID(v int32) {
	o.PkiCommunicationattachmentID = &v
}

// GetFkiAttachmentID returns the FkiAttachmentID field value if set, zero value otherwise.
func (o *CommunicationattachmentRequest) GetFkiAttachmentID() int32 {
	if o == nil || IsNil(o.FkiAttachmentID) {
		var ret int32
		return ret
	}
	return *o.FkiAttachmentID
}

// GetFkiAttachmentIDOk returns a tuple with the FkiAttachmentID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommunicationattachmentRequest) GetFkiAttachmentIDOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiAttachmentID) {
		return nil, false
	}
	return o.FkiAttachmentID, true
}

// HasFkiAttachmentID returns a boolean if a field has been set.
func (o *CommunicationattachmentRequest) HasFkiAttachmentID() bool {
	if o != nil && !IsNil(o.FkiAttachmentID) {
		return true
	}

	return false
}

// SetFkiAttachmentID gets a reference to the given int32 and assigns it to the FkiAttachmentID field.
func (o *CommunicationattachmentRequest) SetFkiAttachmentID(v int32) {
	o.FkiAttachmentID = &v
}

// GetFkiInvoiceID returns the FkiInvoiceID field value if set, zero value otherwise.
func (o *CommunicationattachmentRequest) GetFkiInvoiceID() int32 {
	if o == nil || IsNil(o.FkiInvoiceID) {
		var ret int32
		return ret
	}
	return *o.FkiInvoiceID
}

// GetFkiInvoiceIDOk returns a tuple with the FkiInvoiceID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommunicationattachmentRequest) GetFkiInvoiceIDOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiInvoiceID) {
		return nil, false
	}
	return o.FkiInvoiceID, true
}

// HasFkiInvoiceID returns a boolean if a field has been set.
func (o *CommunicationattachmentRequest) HasFkiInvoiceID() bool {
	if o != nil && !IsNil(o.FkiInvoiceID) {
		return true
	}

	return false
}

// SetFkiInvoiceID gets a reference to the given int32 and assigns it to the FkiInvoiceID field.
func (o *CommunicationattachmentRequest) SetFkiInvoiceID(v int32) {
	o.FkiInvoiceID = &v
}

// GetFkiSalarypreparationID returns the FkiSalarypreparationID field value if set, zero value otherwise.
func (o *CommunicationattachmentRequest) GetFkiSalarypreparationID() int32 {
	if o == nil || IsNil(o.FkiSalarypreparationID) {
		var ret int32
		return ret
	}
	return *o.FkiSalarypreparationID
}

// GetFkiSalarypreparationIDOk returns a tuple with the FkiSalarypreparationID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommunicationattachmentRequest) GetFkiSalarypreparationIDOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiSalarypreparationID) {
		return nil, false
	}
	return o.FkiSalarypreparationID, true
}

// HasFkiSalarypreparationID returns a boolean if a field has been set.
func (o *CommunicationattachmentRequest) HasFkiSalarypreparationID() bool {
	if o != nil && !IsNil(o.FkiSalarypreparationID) {
		return true
	}

	return false
}

// SetFkiSalarypreparationID gets a reference to the given int32 and assigns it to the FkiSalarypreparationID field.
func (o *CommunicationattachmentRequest) SetFkiSalarypreparationID(v int32) {
	o.FkiSalarypreparationID = &v
}

func (o CommunicationattachmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommunicationattachmentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PkiCommunicationattachmentID) {
		toSerialize["pkiCommunicationattachmentID"] = o.PkiCommunicationattachmentID
	}
	if !IsNil(o.FkiAttachmentID) {
		toSerialize["fkiAttachmentID"] = o.FkiAttachmentID
	}
	if !IsNil(o.FkiInvoiceID) {
		toSerialize["fkiInvoiceID"] = o.FkiInvoiceID
	}
	if !IsNil(o.FkiSalarypreparationID) {
		toSerialize["fkiSalarypreparationID"] = o.FkiSalarypreparationID
	}
	return toSerialize, nil
}

type NullableCommunicationattachmentRequest struct {
	value *CommunicationattachmentRequest
	isSet bool
}

func (v NullableCommunicationattachmentRequest) Get() *CommunicationattachmentRequest {
	return v.value
}

func (v *NullableCommunicationattachmentRequest) Set(val *CommunicationattachmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCommunicationattachmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCommunicationattachmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommunicationattachmentRequest(val *CommunicationattachmentRequest) *NullableCommunicationattachmentRequest {
	return &NullableCommunicationattachmentRequest{value: val, isSet: true}
}

func (v NullableCommunicationattachmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommunicationattachmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


