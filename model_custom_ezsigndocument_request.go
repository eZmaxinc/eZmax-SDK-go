/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CustomEzsigndocumentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomEzsigndocumentRequest{}

// CustomEzsigndocumentRequest Request for POST /2/object/ezsignfolder/{pkiEzsignfolderID}/reorder
type CustomEzsigndocumentRequest struct {
	// The unique ID of the Ezsigndocument
	PkiEzsigndocumentID int32 `json:"pkiEzsigndocumentID"`
	AObjEzsigndocumentdependency []EzsigndocumentdependencyRequestCompound `json:"a_objEzsigndocumentdependency"`
}

type _CustomEzsigndocumentRequest CustomEzsigndocumentRequest

// NewCustomEzsigndocumentRequest instantiates a new CustomEzsigndocumentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomEzsigndocumentRequest(pkiEzsigndocumentID int32, aObjEzsigndocumentdependency []EzsigndocumentdependencyRequestCompound) *CustomEzsigndocumentRequest {
	this := CustomEzsigndocumentRequest{}
	this.PkiEzsigndocumentID = pkiEzsigndocumentID
	this.AObjEzsigndocumentdependency = aObjEzsigndocumentdependency
	return &this
}

// NewCustomEzsigndocumentRequestWithDefaults instantiates a new CustomEzsigndocumentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomEzsigndocumentRequestWithDefaults() *CustomEzsigndocumentRequest {
	this := CustomEzsigndocumentRequest{}
	return &this
}

// GetPkiEzsigndocumentID returns the PkiEzsigndocumentID field value
func (o *CustomEzsigndocumentRequest) GetPkiEzsigndocumentID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PkiEzsigndocumentID
}

// GetPkiEzsigndocumentIDOk returns a tuple with the PkiEzsigndocumentID field value
// and a boolean to check if the value has been set.
func (o *CustomEzsigndocumentRequest) GetPkiEzsigndocumentIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkiEzsigndocumentID, true
}

// SetPkiEzsigndocumentID sets field value
func (o *CustomEzsigndocumentRequest) SetPkiEzsigndocumentID(v int32) {
	o.PkiEzsigndocumentID = v
}

// GetAObjEzsigndocumentdependency returns the AObjEzsigndocumentdependency field value
func (o *CustomEzsigndocumentRequest) GetAObjEzsigndocumentdependency() []EzsigndocumentdependencyRequestCompound {
	if o == nil {
		var ret []EzsigndocumentdependencyRequestCompound
		return ret
	}

	return o.AObjEzsigndocumentdependency
}

// GetAObjEzsigndocumentdependencyOk returns a tuple with the AObjEzsigndocumentdependency field value
// and a boolean to check if the value has been set.
func (o *CustomEzsigndocumentRequest) GetAObjEzsigndocumentdependencyOk() ([]EzsigndocumentdependencyRequestCompound, bool) {
	if o == nil {
		return nil, false
	}
	return o.AObjEzsigndocumentdependency, true
}

// SetAObjEzsigndocumentdependency sets field value
func (o *CustomEzsigndocumentRequest) SetAObjEzsigndocumentdependency(v []EzsigndocumentdependencyRequestCompound) {
	o.AObjEzsigndocumentdependency = v
}

func (o CustomEzsigndocumentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomEzsigndocumentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pkiEzsigndocumentID"] = o.PkiEzsigndocumentID
	toSerialize["a_objEzsigndocumentdependency"] = o.AObjEzsigndocumentdependency
	return toSerialize, nil
}

func (o *CustomEzsigndocumentRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pkiEzsigndocumentID",
		"a_objEzsigndocumentdependency",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomEzsigndocumentRequest := _CustomEzsigndocumentRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCustomEzsigndocumentRequest)

	if err != nil {
		return err
	}

	*o = CustomEzsigndocumentRequest(varCustomEzsigndocumentRequest)

	return err
}

type NullableCustomEzsigndocumentRequest struct {
	value *CustomEzsigndocumentRequest
	isSet bool
}

func (v NullableCustomEzsigndocumentRequest) Get() *CustomEzsigndocumentRequest {
	return v.value
}

func (v *NullableCustomEzsigndocumentRequest) Set(val *CustomEzsigndocumentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomEzsigndocumentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomEzsigndocumentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomEzsigndocumentRequest(val *CustomEzsigndocumentRequest) *NullableCustomEzsigndocumentRequest {
	return &NullableCustomEzsigndocumentRequest{value: val, isSet: true}
}

func (v NullableCustomEzsigndocumentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomEzsigndocumentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


