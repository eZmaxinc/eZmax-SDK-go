/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.2
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UsergroupAutocompleteElementResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UsergroupAutocompleteElementResponse{}

// UsergroupAutocompleteElementResponse A Usergroup AutocompleteElement Response
type UsergroupAutocompleteElementResponse struct {
	// The Name of the Usergroup in the language of the requester
	SUsergroupNameX string `json:"sUsergroupNameX" validate:"regexp=^.{0,50}$"`
	// The unique ID of the Usergroup
	PkiUsergroupID int32 `json:"pkiUsergroupID"`
	// Whether the Usergroup is active or not
	BUsergroupIsactive bool `json:"bUsergroupIsactive"`
}

type _UsergroupAutocompleteElementResponse UsergroupAutocompleteElementResponse

// NewUsergroupAutocompleteElementResponse instantiates a new UsergroupAutocompleteElementResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsergroupAutocompleteElementResponse(sUsergroupNameX string, pkiUsergroupID int32, bUsergroupIsactive bool) *UsergroupAutocompleteElementResponse {
	this := UsergroupAutocompleteElementResponse{}
	this.SUsergroupNameX = sUsergroupNameX
	this.PkiUsergroupID = pkiUsergroupID
	this.BUsergroupIsactive = bUsergroupIsactive
	return &this
}

// NewUsergroupAutocompleteElementResponseWithDefaults instantiates a new UsergroupAutocompleteElementResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsergroupAutocompleteElementResponseWithDefaults() *UsergroupAutocompleteElementResponse {
	this := UsergroupAutocompleteElementResponse{}
	return &this
}

// GetSUsergroupNameX returns the SUsergroupNameX field value
func (o *UsergroupAutocompleteElementResponse) GetSUsergroupNameX() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SUsergroupNameX
}

// GetSUsergroupNameXOk returns a tuple with the SUsergroupNameX field value
// and a boolean to check if the value has been set.
func (o *UsergroupAutocompleteElementResponse) GetSUsergroupNameXOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SUsergroupNameX, true
}

// SetSUsergroupNameX sets field value
func (o *UsergroupAutocompleteElementResponse) SetSUsergroupNameX(v string) {
	o.SUsergroupNameX = v
}

// GetPkiUsergroupID returns the PkiUsergroupID field value
func (o *UsergroupAutocompleteElementResponse) GetPkiUsergroupID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PkiUsergroupID
}

// GetPkiUsergroupIDOk returns a tuple with the PkiUsergroupID field value
// and a boolean to check if the value has been set.
func (o *UsergroupAutocompleteElementResponse) GetPkiUsergroupIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkiUsergroupID, true
}

// SetPkiUsergroupID sets field value
func (o *UsergroupAutocompleteElementResponse) SetPkiUsergroupID(v int32) {
	o.PkiUsergroupID = v
}

// GetBUsergroupIsactive returns the BUsergroupIsactive field value
func (o *UsergroupAutocompleteElementResponse) GetBUsergroupIsactive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BUsergroupIsactive
}

// GetBUsergroupIsactiveOk returns a tuple with the BUsergroupIsactive field value
// and a boolean to check if the value has been set.
func (o *UsergroupAutocompleteElementResponse) GetBUsergroupIsactiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BUsergroupIsactive, true
}

// SetBUsergroupIsactive sets field value
func (o *UsergroupAutocompleteElementResponse) SetBUsergroupIsactive(v bool) {
	o.BUsergroupIsactive = v
}

func (o UsergroupAutocompleteElementResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UsergroupAutocompleteElementResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sUsergroupNameX"] = o.SUsergroupNameX
	toSerialize["pkiUsergroupID"] = o.PkiUsergroupID
	toSerialize["bUsergroupIsactive"] = o.BUsergroupIsactive
	return toSerialize, nil
}

func (o *UsergroupAutocompleteElementResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sUsergroupNameX",
		"pkiUsergroupID",
		"bUsergroupIsactive",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUsergroupAutocompleteElementResponse := _UsergroupAutocompleteElementResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUsergroupAutocompleteElementResponse)

	if err != nil {
		return err
	}

	*o = UsergroupAutocompleteElementResponse(varUsergroupAutocompleteElementResponse)

	return err
}

type NullableUsergroupAutocompleteElementResponse struct {
	value *UsergroupAutocompleteElementResponse
	isSet bool
}

func (v NullableUsergroupAutocompleteElementResponse) Get() *UsergroupAutocompleteElementResponse {
	return v.value
}

func (v *NullableUsergroupAutocompleteElementResponse) Set(val *UsergroupAutocompleteElementResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUsergroupAutocompleteElementResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUsergroupAutocompleteElementResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsergroupAutocompleteElementResponse(val *UsergroupAutocompleteElementResponse) *NullableUsergroupAutocompleteElementResponse {
	return &NullableUsergroupAutocompleteElementResponse{value: val, isSet: true}
}

func (v NullableUsergroupAutocompleteElementResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsergroupAutocompleteElementResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


