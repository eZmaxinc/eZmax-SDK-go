/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsignfoldertypeRequestCompound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsignfoldertypeRequestCompound{}

// EzsignfoldertypeRequestCompound A Ezsignfoldertype Object and children
type EzsignfoldertypeRequestCompound struct {
	// The unique ID of the Ezsignfoldertype.
	PkiEzsignfoldertypeID *int32 `json:"pkiEzsignfoldertypeID,omitempty"`
	ObjEzsignfoldertypeName MultilingualEzsignfoldertypeName `json:"objEzsignfoldertypeName"`
	// The unique ID of the Branding
	FkiBrandingID int32 `json:"fkiBrandingID"`
	// The unique ID of the Billingentityinternal.
	FkiBillingentityinternalID *int32 `json:"fkiBillingentityinternalID,omitempty"`
	// The unique ID of the Usergroup
	FkiUsergroupID *int32 `json:"fkiUsergroupID,omitempty"`
	// The unique ID of the Usergroup
	FkiUsergroupIDRestricted *int32 `json:"fkiUsergroupIDRestricted,omitempty"`
	// The unique ID of the Ezsigntsarequirement.  Determine if a Time Stamping Authority should add a timestamp on each of the signature. Valid values:  |Value|Description| |-|-| |1|No. TSA Timestamping will requested. This will make all signatures a lot faster since no round-trip to the TSA server will be required. Timestamping will be made using eZsign server's time.| |2|Best effort. Timestamping from a Time Stamping Authority will be requested but is not mandatory. In the very improbable case it cannot be completed, the timestamping will be made using eZsign server's time. **Additional fee applies**| |3|Mandatory. Timestamping from a Time Stamping Authority will be requested and is mandatory. In the very improbable case it cannot be completed, the signature will fail and the user will be asked to retry. **Additional fee applies**|
	FkiEzsigntsarequirementID *int32 `json:"fkiEzsigntsarequirementID,omitempty"`
	// The email address.
	SEmailAddressSigned *string `json:"sEmailAddressSigned,omitempty"`
	// The email address.
	SEmailAddressSummary *string `json:"sEmailAddressSummary,omitempty"`
	EEzsignfoldertypePrivacylevel FieldEEzsignfoldertypePrivacylevel `json:"eEzsignfoldertypePrivacylevel"`
	EEzsignfoldertypeSendreminderfrequency *FieldEEzsignfoldertypeSendreminderfrequency `json:"eEzsignfoldertypeSendreminderfrequency,omitempty"`
	// The number of days before the archival of Ezsignfolders created using this Ezsignfoldertype
	IEzsignfoldertypeArchivaldays int32 `json:"iEzsignfoldertypeArchivaldays"`
	EEzsignfoldertypeDisposal FieldEEzsignfoldertypeDisposal `json:"eEzsignfoldertypeDisposal"`
	EEzsignfoldertypeCompletion FieldEEzsignfoldertypeCompletion `json:"eEzsignfoldertypeCompletion"`
	// The number of days after the archival before the disposal of the Ezsignfolder
	IEzsignfoldertypeDisposaldays *int32 `json:"iEzsignfoldertypeDisposaldays,omitempty"`
	// The number of days to get all Ezsignsignatures
	IEzsignfoldertypeDeadlinedays int32 `json:"iEzsignfoldertypeDeadlinedays"`
	// Wheter if delegation of signature is allowed to another user or not
	BEzsignfoldertypeDelegate *bool `json:"bEzsignfoldertypeDelegate,omitempty"`
	// Wheter if creating a new Discussion is allowed or not
	BEzsignfoldertypeDiscussion *bool `json:"bEzsignfoldertypeDiscussion,omitempty"`
	// Wheter if Reassignment of signature is allowed by a signatory to another signatory or not
	BEzsignfoldertypeReassignezsignsigner *bool `json:"bEzsignfoldertypeReassignezsignsigner,omitempty"`
	// Wheter if Reassignment of signature is allowed by a user to a signatory or another user or not
	BEzsignfoldertypeReassignuser *bool `json:"bEzsignfoldertypeReassignuser,omitempty"`
	// Whether we send an email to Ezsignsigner  when document is completed
	BEzsignfoldertypeSendsignedtoezsignsigner *bool `json:"bEzsignfoldertypeSendsignedtoezsignsigner,omitempty"`
	// Whether we send an email to User who signed when document is completed
	BEzsignfoldertypeSendsignedtouser *bool `json:"bEzsignfoldertypeSendsignedtouser,omitempty"`
	// Whether we send the Ezsigndocument in the email to Ezsignsigner
	BEzsignfoldertypeSendattachmentezsignsigner *bool `json:"bEzsignfoldertypeSendattachmentezsignsigner,omitempty"`
	// Whether we send the proof in the email to Ezsignsigner
	BEzsignfoldertypeSendproofezsignsigner *bool `json:"bEzsignfoldertypeSendproofezsignsigner,omitempty"`
	// Whether we send the Ezsigndocument in the email to User
	BEzsignfoldertypeSendattachmentuser *bool `json:"bEzsignfoldertypeSendattachmentuser,omitempty"`
	// Whether we send the proof in the email to User
	BEzsignfoldertypeSendproofuser *bool `json:"bEzsignfoldertypeSendproofuser,omitempty"`
	// Whether we send the proof in the email to external recipient
	BEzsignfoldertypeSendproofemail *bool `json:"bEzsignfoldertypeSendproofemail,omitempty"`
	// Whether we allow the Ezsigndocument to be downloaded by an Ezsignsigner
	BEzsignfoldertypeAllowdownloadattachmentezsignsigner *bool `json:"bEzsignfoldertypeAllowdownloadattachmentezsignsigner,omitempty"`
	// Whether we allow the proof to be downloaded by an Ezsignsigner
	BEzsignfoldertypeAllowdownloadproofezsignsigner *bool `json:"bEzsignfoldertypeAllowdownloadproofezsignsigner,omitempty"`
	// Whether we send the proof to user and Ezsignsigner who receive all documents.
	BEzsignfoldertypeSendproofreceivealldocument *bool `json:"bEzsignfoldertypeSendproofreceivealldocument,omitempty"`
	// Whether we send the signed Ezsigndocument to the Ezsigndocument's owner
	BEzsignfoldertypeSendsignedtodocumentowner bool `json:"bEzsignfoldertypeSendsignedtodocumentowner"`
	// Whether we send the signed Ezsigndocument to the Ezsignfolder's owner
	BEzsignfoldertypeSendsignedtofolderowner bool `json:"bEzsignfoldertypeSendsignedtofolderowner"`
	// Whether we send the signed Ezsigndocument to the Usergroup that has acces to all Ezsignfolders
	BEzsignfoldertypeSendsignedtofullgroup *bool `json:"bEzsignfoldertypeSendsignedtofullgroup,omitempty"`
	// THIS FIELD WILL BE DELETED. Whether we send the signed Ezsigndocument to the Usergroup that has acces to only their own Ezsignfolders
	BEzsignfoldertypeSendsignedtolimitedgroup *bool `json:"bEzsignfoldertypeSendsignedtolimitedgroup,omitempty"`
	// Whether we send the signed Ezsigndocument to the colleagues
	BEzsignfoldertypeSendsignedtocolleague bool `json:"bEzsignfoldertypeSendsignedtocolleague"`
	// Whether we send the summary to the Ezsigndocument's owner
	BEzsignfoldertypeSendsummarytodocumentowner bool `json:"bEzsignfoldertypeSendsummarytodocumentowner"`
	// Whether we send the summary to the Ezsignfolder's owner
	BEzsignfoldertypeSendsummarytofolderowner bool `json:"bEzsignfoldertypeSendsummarytofolderowner"`
	// Whether we send the summary to the Usergroup that has acces to all Ezsignfolders
	BEzsignfoldertypeSendsummarytofullgroup *bool `json:"bEzsignfoldertypeSendsummarytofullgroup,omitempty"`
	// Whether we send the summary to the Usergroup that has acces to only their own Ezsignfolders
	BEzsignfoldertypeSendsummarytolimitedgroup *bool `json:"bEzsignfoldertypeSendsummarytolimitedgroup,omitempty"`
	// Whether we send the summary to the colleagues
	BEzsignfoldertypeSendsummarytocolleague bool `json:"bEzsignfoldertypeSendsummarytocolleague"`
	// Whether the Ezsignfoldertype is active or not
	BEzsignfoldertypeIsactive bool `json:"bEzsignfoldertypeIsactive"`
	AFkiUserIDSigned []int32 `json:"a_fkiUserIDSigned,omitempty"`
	AFkiUserIDSummary []int32 `json:"a_fkiUserIDSummary,omitempty"`
}

type _EzsignfoldertypeRequestCompound EzsignfoldertypeRequestCompound

// NewEzsignfoldertypeRequestCompound instantiates a new EzsignfoldertypeRequestCompound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsignfoldertypeRequestCompound(objEzsignfoldertypeName MultilingualEzsignfoldertypeName, fkiBrandingID int32, eEzsignfoldertypePrivacylevel FieldEEzsignfoldertypePrivacylevel, iEzsignfoldertypeArchivaldays int32, eEzsignfoldertypeDisposal FieldEEzsignfoldertypeDisposal, eEzsignfoldertypeCompletion FieldEEzsignfoldertypeCompletion, iEzsignfoldertypeDeadlinedays int32, bEzsignfoldertypeSendsignedtodocumentowner bool, bEzsignfoldertypeSendsignedtofolderowner bool, bEzsignfoldertypeSendsignedtocolleague bool, bEzsignfoldertypeSendsummarytodocumentowner bool, bEzsignfoldertypeSendsummarytofolderowner bool, bEzsignfoldertypeSendsummarytocolleague bool, bEzsignfoldertypeIsactive bool) *EzsignfoldertypeRequestCompound {
	this := EzsignfoldertypeRequestCompound{}
	this.ObjEzsignfoldertypeName = objEzsignfoldertypeName
	this.FkiBrandingID = fkiBrandingID
	this.EEzsignfoldertypePrivacylevel = eEzsignfoldertypePrivacylevel
	this.IEzsignfoldertypeArchivaldays = iEzsignfoldertypeArchivaldays
	this.EEzsignfoldertypeDisposal = eEzsignfoldertypeDisposal
	this.EEzsignfoldertypeCompletion = eEzsignfoldertypeCompletion
	this.IEzsignfoldertypeDeadlinedays = iEzsignfoldertypeDeadlinedays
	this.BEzsignfoldertypeSendsignedtodocumentowner = bEzsignfoldertypeSendsignedtodocumentowner
	this.BEzsignfoldertypeSendsignedtofolderowner = bEzsignfoldertypeSendsignedtofolderowner
	this.BEzsignfoldertypeSendsignedtocolleague = bEzsignfoldertypeSendsignedtocolleague
	this.BEzsignfoldertypeSendsummarytodocumentowner = bEzsignfoldertypeSendsummarytodocumentowner
	this.BEzsignfoldertypeSendsummarytofolderowner = bEzsignfoldertypeSendsummarytofolderowner
	this.BEzsignfoldertypeSendsummarytocolleague = bEzsignfoldertypeSendsummarytocolleague
	this.BEzsignfoldertypeIsactive = bEzsignfoldertypeIsactive
	return &this
}

// NewEzsignfoldertypeRequestCompoundWithDefaults instantiates a new EzsignfoldertypeRequestCompound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsignfoldertypeRequestCompoundWithDefaults() *EzsignfoldertypeRequestCompound {
	this := EzsignfoldertypeRequestCompound{}
	return &this
}

// GetPkiEzsignfoldertypeID returns the PkiEzsignfoldertypeID field value if set, zero value otherwise.
func (o *EzsignfoldertypeRequestCompound) GetPkiEzsignfoldertypeID() int32 {
	if o == nil || IsNil(o.PkiEzsignfoldertypeID) {
		var ret int32
		return ret
	}
	return *o.PkiEzsignfoldertypeID
}

// GetPkiEzsignfoldertypeIDOk returns a tuple with the PkiEzsignfoldertypeID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetPkiEzsignfoldertypeIDOk() (*int32, bool) {
	if o == nil || IsNil(o.PkiEzsignfoldertypeID) {
		return nil, false
	}
	return o.PkiEzsignfoldertypeID, true
}

// HasPkiEzsignfoldertypeID returns a boolean if a field has been set.
func (o *EzsignfoldertypeRequestCompound) HasPkiEzsignfoldertypeID() bool {
	if o != nil && !IsNil(o.PkiEzsignfoldertypeID) {
		return true
	}

	return false
}

// SetPkiEzsignfoldertypeID gets a reference to the given int32 and assigns it to the PkiEzsignfoldertypeID field.
func (o *EzsignfoldertypeRequestCompound) SetPkiEzsignfoldertypeID(v int32) {
	o.PkiEzsignfoldertypeID = &v
}

// GetObjEzsignfoldertypeName returns the ObjEzsignfoldertypeName field value
func (o *EzsignfoldertypeRequestCompound) GetObjEzsignfoldertypeName() MultilingualEzsignfoldertypeName {
	if o == nil {
		var ret MultilingualEzsignfoldertypeName
		return ret
	}

	return o.ObjEzsignfoldertypeName
}

// GetObjEzsignfoldertypeNameOk returns a tuple with the ObjEzsignfoldertypeName field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetObjEzsignfoldertypeNameOk() (*MultilingualEzsignfoldertypeName, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjEzsignfoldertypeName, true
}

// SetObjEzsignfoldertypeName sets field value
func (o *EzsignfoldertypeRequestCompound) SetObjEzsignfoldertypeName(v MultilingualEzsignfoldertypeName) {
	o.ObjEzsignfoldertypeName = v
}

// GetFkiBrandingID returns the FkiBrandingID field value
func (o *EzsignfoldertypeRequestCompound) GetFkiBrandingID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiBrandingID
}

// GetFkiBrandingIDOk returns a tuple with the FkiBrandingID field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetFkiBrandingIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiBrandingID, true
}

// SetFkiBrandingID sets field value
func (o *EzsignfoldertypeRequestCompound) SetFkiBrandingID(v int32) {
	o.FkiBrandingID = v
}

// GetFkiBillingentityinternalID returns the FkiBillingentityinternalID field value if set, zero value otherwise.
func (o *EzsignfoldertypeRequestCompound) GetFkiBillingentityinternalID() int32 {
	if o == nil || IsNil(o.FkiBillingentityinternalID) {
		var ret int32
		return ret
	}
	return *o.FkiBillingentityinternalID
}

// GetFkiBillingentityinternalIDOk returns a tuple with the FkiBillingentityinternalID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetFkiBillingentityinternalIDOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiBillingentityinternalID) {
		return nil, false
	}
	return o.FkiBillingentityinternalID, true
}

// HasFkiBillingentityinternalID returns a boolean if a field has been set.
func (o *EzsignfoldertypeRequestCompound) HasFkiBillingentityinternalID() bool {
	if o != nil && !IsNil(o.FkiBillingentityinternalID) {
		return true
	}

	return false
}

// SetFkiBillingentityinternalID gets a reference to the given int32 and assigns it to the FkiBillingentityinternalID field.
func (o *EzsignfoldertypeRequestCompound) SetFkiBillingentityinternalID(v int32) {
	o.FkiBillingentityinternalID = &v
}

// GetFkiUsergroupID returns the FkiUsergroupID field value if set, zero value otherwise.
func (o *EzsignfoldertypeRequestCompound) GetFkiUsergroupID() int32 {
	if o == nil || IsNil(o.FkiUsergroupID) {
		var ret int32
		return ret
	}
	return *o.FkiUsergroupID
}

// GetFkiUsergroupIDOk returns a tuple with the FkiUsergroupID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetFkiUsergroupIDOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiUsergroupID) {
		return nil, false
	}
	return o.FkiUsergroupID, true
}

// HasFkiUsergroupID returns a boolean if a field has been set.
func (o *EzsignfoldertypeRequestCompound) HasFkiUsergroupID() bool {
	if o != nil && !IsNil(o.FkiUsergroupID) {
		return true
	}

	return false
}

// SetFkiUsergroupID gets a reference to the given int32 and assigns it to the FkiUsergroupID field.
func (o *EzsignfoldertypeRequestCompound) SetFkiUsergroupID(v int32) {
	o.FkiUsergroupID = &v
}

// GetFkiUsergroupIDRestricted returns the FkiUsergroupIDRestricted field value if set, zero value otherwise.
func (o *EzsignfoldertypeRequestCompound) GetFkiUsergroupIDRestricted() int32 {
	if o == nil || IsNil(o.FkiUsergroupIDRestricted) {
		var ret int32
		return ret
	}
	return *o.FkiUsergroupIDRestricted
}

// GetFkiUsergroupIDRestrictedOk returns a tuple with the FkiUsergroupIDRestricted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetFkiUsergroupIDRestrictedOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiUsergroupIDRestricted) {
		return nil, false
	}
	return o.FkiUsergroupIDRestricted, true
}

// HasFkiUsergroupIDRestricted returns a boolean if a field has been set.
func (o *EzsignfoldertypeRequestCompound) HasFkiUsergroupIDRestricted() bool {
	if o != nil && !IsNil(o.FkiUsergroupIDRestricted) {
		return true
	}

	return false
}

// SetFkiUsergroupIDRestricted gets a reference to the given int32 and assigns it to the FkiUsergroupIDRestricted field.
func (o *EzsignfoldertypeRequestCompound) SetFkiUsergroupIDRestricted(v int32) {
	o.FkiUsergroupIDRestricted = &v
}

// GetFkiEzsigntsarequirementID returns the FkiEzsigntsarequirementID field value if set, zero value otherwise.
func (o *EzsignfoldertypeRequestCompound) GetFkiEzsigntsarequirementID() int32 {
	if o == nil || IsNil(o.FkiEzsigntsarequirementID) {
		var ret int32
		return ret
	}
	return *o.FkiEzsigntsarequirementID
}

// GetFkiEzsigntsarequirementIDOk returns a tuple with the FkiEzsigntsarequirementID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetFkiEzsigntsarequirementIDOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiEzsigntsarequirementID) {
		return nil, false
	}
	return o.FkiEzsigntsarequirementID, true
}

// HasFkiEzsigntsarequirementID returns a boolean if a field has been set.
func (o *EzsignfoldertypeRequestCompound) HasFkiEzsigntsarequirementID() bool {
	if o != nil && !IsNil(o.FkiEzsigntsarequirementID) {
		return true
	}

	return false
}

// SetFkiEzsigntsarequirementID gets a reference to the given int32 and assigns it to the FkiEzsigntsarequirementID field.
func (o *EzsignfoldertypeRequestCompound) SetFkiEzsigntsarequirementID(v int32) {
	o.FkiEzsigntsarequirementID = &v
}

// GetSEmailAddressSigned returns the SEmailAddressSigned field value if set, zero value otherwise.
func (o *EzsignfoldertypeRequestCompound) GetSEmailAddressSigned() string {
	if o == nil || IsNil(o.SEmailAddressSigned) {
		var ret string
		return ret
	}
	return *o.SEmailAddressSigned
}

// GetSEmailAddressSignedOk returns a tuple with the SEmailAddressSigned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetSEmailAddressSignedOk() (*string, bool) {
	if o == nil || IsNil(o.SEmailAddressSigned) {
		return nil, false
	}
	return o.SEmailAddressSigned, true
}

// HasSEmailAddressSigned returns a boolean if a field has been set.
func (o *EzsignfoldertypeRequestCompound) HasSEmailAddressSigned() bool {
	if o != nil && !IsNil(o.SEmailAddressSigned) {
		return true
	}

	return false
}

// SetSEmailAddressSigned gets a reference to the given string and assigns it to the SEmailAddressSigned field.
func (o *EzsignfoldertypeRequestCompound) SetSEmailAddressSigned(v string) {
	o.SEmailAddressSigned = &v
}

// GetSEmailAddressSummary returns the SEmailAddressSummary field value if set, zero value otherwise.
func (o *EzsignfoldertypeRequestCompound) GetSEmailAddressSummary() string {
	if o == nil || IsNil(o.SEmailAddressSummary) {
		var ret string
		return ret
	}
	return *o.SEmailAddressSummary
}

// GetSEmailAddressSummaryOk returns a tuple with the SEmailAddressSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetSEmailAddressSummaryOk() (*string, bool) {
	if o == nil || IsNil(o.SEmailAddressSummary) {
		return nil, false
	}
	return o.SEmailAddressSummary, true
}

// HasSEmailAddressSummary returns a boolean if a field has been set.
func (o *EzsignfoldertypeRequestCompound) HasSEmailAddressSummary() bool {
	if o != nil && !IsNil(o.SEmailAddressSummary) {
		return true
	}

	return false
}

// SetSEmailAddressSummary gets a reference to the given string and assigns it to the SEmailAddressSummary field.
func (o *EzsignfoldertypeRequestCompound) SetSEmailAddressSummary(v string) {
	o.SEmailAddressSummary = &v
}

// GetEEzsignfoldertypePrivacylevel returns the EEzsignfoldertypePrivacylevel field value
func (o *EzsignfoldertypeRequestCompound) GetEEzsignfoldertypePrivacylevel() FieldEEzsignfoldertypePrivacylevel {
	if o == nil {
		var ret FieldEEzsignfoldertypePrivacylevel
		return ret
	}

	return o.EEzsignfoldertypePrivacylevel
}

// GetEEzsignfoldertypePrivacylevelOk returns a tuple with the EEzsignfoldertypePrivacylevel field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetEEzsignfoldertypePrivacylevelOk() (*FieldEEzsignfoldertypePrivacylevel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EEzsignfoldertypePrivacylevel, true
}

// SetEEzsignfoldertypePrivacylevel sets field value
func (o *EzsignfoldertypeRequestCompound) SetEEzsignfoldertypePrivacylevel(v FieldEEzsignfoldertypePrivacylevel) {
	o.EEzsignfoldertypePrivacylevel = v
}

// GetEEzsignfoldertypeSendreminderfrequency returns the EEzsignfoldertypeSendreminderfrequency field value if set, zero value otherwise.
func (o *EzsignfoldertypeRequestCompound) GetEEzsignfoldertypeSendreminderfrequency() FieldEEzsignfoldertypeSendreminderfrequency {
	if o == nil || IsNil(o.EEzsignfoldertypeSendreminderfrequency) {
		var ret FieldEEzsignfoldertypeSendreminderfrequency
		return ret
	}
	return *o.EEzsignfoldertypeSendreminderfrequency
}

// GetEEzsignfoldertypeSendreminderfrequencyOk returns a tuple with the EEzsignfoldertypeSendreminderfrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetEEzsignfoldertypeSendreminderfrequencyOk() (*FieldEEzsignfoldertypeSendreminderfrequency, bool) {
	if o == nil || IsNil(o.EEzsignfoldertypeSendreminderfrequency) {
		return nil, false
	}
	return o.EEzsignfoldertypeSendreminderfrequency, true
}

// HasEEzsignfoldertypeSendreminderfrequency returns a boolean if a field has been set.
func (o *EzsignfoldertypeRequestCompound) HasEEzsignfoldertypeSendreminderfrequency() bool {
	if o != nil && !IsNil(o.EEzsignfoldertypeSendreminderfrequency) {
		return true
	}

	return false
}

// SetEEzsignfoldertypeSendreminderfrequency gets a reference to the given FieldEEzsignfoldertypeSendreminderfrequency and assigns it to the EEzsignfoldertypeSendreminderfrequency field.
func (o *EzsignfoldertypeRequestCompound) SetEEzsignfoldertypeSendreminderfrequency(v FieldEEzsignfoldertypeSendreminderfrequency) {
	o.EEzsignfoldertypeSendreminderfrequency = &v
}

// GetIEzsignfoldertypeArchivaldays returns the IEzsignfoldertypeArchivaldays field value
func (o *EzsignfoldertypeRequestCompound) GetIEzsignfoldertypeArchivaldays() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IEzsignfoldertypeArchivaldays
}

// GetIEzsignfoldertypeArchivaldaysOk returns a tuple with the IEzsignfoldertypeArchivaldays field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetIEzsignfoldertypeArchivaldaysOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IEzsignfoldertypeArchivaldays, true
}

// SetIEzsignfoldertypeArchivaldays sets field value
func (o *EzsignfoldertypeRequestCompound) SetIEzsignfoldertypeArchivaldays(v int32) {
	o.IEzsignfoldertypeArchivaldays = v
}

// GetEEzsignfoldertypeDisposal returns the EEzsignfoldertypeDisposal field value
func (o *EzsignfoldertypeRequestCompound) GetEEzsignfoldertypeDisposal() FieldEEzsignfoldertypeDisposal {
	if o == nil {
		var ret FieldEEzsignfoldertypeDisposal
		return ret
	}

	return o.EEzsignfoldertypeDisposal
}

// GetEEzsignfoldertypeDisposalOk returns a tuple with the EEzsignfoldertypeDisposal field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetEEzsignfoldertypeDisposalOk() (*FieldEEzsignfoldertypeDisposal, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EEzsignfoldertypeDisposal, true
}

// SetEEzsignfoldertypeDisposal sets field value
func (o *EzsignfoldertypeRequestCompound) SetEEzsignfoldertypeDisposal(v FieldEEzsignfoldertypeDisposal) {
	o.EEzsignfoldertypeDisposal = v
}

// GetEEzsignfoldertypeCompletion returns the EEzsignfoldertypeCompletion field value
func (o *EzsignfoldertypeRequestCompound) GetEEzsignfoldertypeCompletion() FieldEEzsignfoldertypeCompletion {
	if o == nil {
		var ret FieldEEzsignfoldertypeCompletion
		return ret
	}

	return o.EEzsignfoldertypeCompletion
}

// GetEEzsignfoldertypeCompletionOk returns a tuple with the EEzsignfoldertypeCompletion field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetEEzsignfoldertypeCompletionOk() (*FieldEEzsignfoldertypeCompletion, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EEzsignfoldertypeCompletion, true
}

// SetEEzsignfoldertypeCompletion sets field value
func (o *EzsignfoldertypeRequestCompound) SetEEzsignfoldertypeCompletion(v FieldEEzsignfoldertypeCompletion) {
	o.EEzsignfoldertypeCompletion = v
}

// GetIEzsignfoldertypeDisposaldays returns the IEzsignfoldertypeDisposaldays field value if set, zero value otherwise.
func (o *EzsignfoldertypeRequestCompound) GetIEzsignfoldertypeDisposaldays() int32 {
	if o == nil || IsNil(o.IEzsignfoldertypeDisposaldays) {
		var ret int32
		return ret
	}
	return *o.IEzsignfoldertypeDisposaldays
}

// GetIEzsignfoldertypeDisposaldaysOk returns a tuple with the IEzsignfoldertypeDisposaldays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetIEzsignfoldertypeDisposaldaysOk() (*int32, bool) {
	if o == nil || IsNil(o.IEzsignfoldertypeDisposaldays) {
		return nil, false
	}
	return o.IEzsignfoldertypeDisposaldays, true
}

// HasIEzsignfoldertypeDisposaldays returns a boolean if a field has been set.
func (o *EzsignfoldertypeRequestCompound) HasIEzsignfoldertypeDisposaldays() bool {
	if o != nil && !IsNil(o.IEzsignfoldertypeDisposaldays) {
		return true
	}

	return false
}

// SetIEzsignfoldertypeDisposaldays gets a reference to the given int32 and assigns it to the IEzsignfoldertypeDisposaldays field.
func (o *EzsignfoldertypeRequestCompound) SetIEzsignfoldertypeDisposaldays(v int32) {
	o.IEzsignfoldertypeDisposaldays = &v
}

// GetIEzsignfoldertypeDeadlinedays returns the IEzsignfoldertypeDeadlinedays field value
func (o *EzsignfoldertypeRequestCompound) GetIEzsignfoldertypeDeadlinedays() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IEzsignfoldertypeDeadlinedays
}

// GetIEzsignfoldertypeDeadlinedaysOk returns a tuple with the IEzsignfoldertypeDeadlinedays field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetIEzsignfoldertypeDeadlinedaysOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IEzsignfoldertypeDeadlinedays, true
}

// SetIEzsignfoldertypeDeadlinedays sets field value
func (o *EzsignfoldertypeRequestCompound) SetIEzsignfoldertypeDeadlinedays(v int32) {
	o.IEzsignfoldertypeDeadlinedays = v
}

// GetBEzsignfoldertypeDelegate returns the BEzsignfoldertypeDelegate field value if set, zero value otherwise.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeDelegate() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeDelegate) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeDelegate
}

// GetBEzsignfoldertypeDelegateOk returns a tuple with the BEzsignfoldertypeDelegate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeDelegateOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeDelegate) {
		return nil, false
	}
	return o.BEzsignfoldertypeDelegate, true
}

// HasBEzsignfoldertypeDelegate returns a boolean if a field has been set.
func (o *EzsignfoldertypeRequestCompound) HasBEzsignfoldertypeDelegate() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeDelegate) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeDelegate gets a reference to the given bool and assigns it to the BEzsignfoldertypeDelegate field.
func (o *EzsignfoldertypeRequestCompound) SetBEzsignfoldertypeDelegate(v bool) {
	o.BEzsignfoldertypeDelegate = &v
}

// GetBEzsignfoldertypeDiscussion returns the BEzsignfoldertypeDiscussion field value if set, zero value otherwise.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeDiscussion() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeDiscussion) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeDiscussion
}

// GetBEzsignfoldertypeDiscussionOk returns a tuple with the BEzsignfoldertypeDiscussion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeDiscussionOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeDiscussion) {
		return nil, false
	}
	return o.BEzsignfoldertypeDiscussion, true
}

// HasBEzsignfoldertypeDiscussion returns a boolean if a field has been set.
func (o *EzsignfoldertypeRequestCompound) HasBEzsignfoldertypeDiscussion() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeDiscussion) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeDiscussion gets a reference to the given bool and assigns it to the BEzsignfoldertypeDiscussion field.
func (o *EzsignfoldertypeRequestCompound) SetBEzsignfoldertypeDiscussion(v bool) {
	o.BEzsignfoldertypeDiscussion = &v
}

// GetBEzsignfoldertypeReassignezsignsigner returns the BEzsignfoldertypeReassignezsignsigner field value if set, zero value otherwise.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeReassignezsignsigner() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeReassignezsignsigner) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeReassignezsignsigner
}

// GetBEzsignfoldertypeReassignezsignsignerOk returns a tuple with the BEzsignfoldertypeReassignezsignsigner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeReassignezsignsignerOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeReassignezsignsigner) {
		return nil, false
	}
	return o.BEzsignfoldertypeReassignezsignsigner, true
}

// HasBEzsignfoldertypeReassignezsignsigner returns a boolean if a field has been set.
func (o *EzsignfoldertypeRequestCompound) HasBEzsignfoldertypeReassignezsignsigner() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeReassignezsignsigner) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeReassignezsignsigner gets a reference to the given bool and assigns it to the BEzsignfoldertypeReassignezsignsigner field.
func (o *EzsignfoldertypeRequestCompound) SetBEzsignfoldertypeReassignezsignsigner(v bool) {
	o.BEzsignfoldertypeReassignezsignsigner = &v
}

// GetBEzsignfoldertypeReassignuser returns the BEzsignfoldertypeReassignuser field value if set, zero value otherwise.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeReassignuser() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeReassignuser) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeReassignuser
}

// GetBEzsignfoldertypeReassignuserOk returns a tuple with the BEzsignfoldertypeReassignuser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeReassignuserOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeReassignuser) {
		return nil, false
	}
	return o.BEzsignfoldertypeReassignuser, true
}

// HasBEzsignfoldertypeReassignuser returns a boolean if a field has been set.
func (o *EzsignfoldertypeRequestCompound) HasBEzsignfoldertypeReassignuser() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeReassignuser) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeReassignuser gets a reference to the given bool and assigns it to the BEzsignfoldertypeReassignuser field.
func (o *EzsignfoldertypeRequestCompound) SetBEzsignfoldertypeReassignuser(v bool) {
	o.BEzsignfoldertypeReassignuser = &v
}

// GetBEzsignfoldertypeSendsignedtoezsignsigner returns the BEzsignfoldertypeSendsignedtoezsignsigner field value if set, zero value otherwise.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendsignedtoezsignsigner() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeSendsignedtoezsignsigner) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeSendsignedtoezsignsigner
}

// GetBEzsignfoldertypeSendsignedtoezsignsignerOk returns a tuple with the BEzsignfoldertypeSendsignedtoezsignsigner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendsignedtoezsignsignerOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeSendsignedtoezsignsigner) {
		return nil, false
	}
	return o.BEzsignfoldertypeSendsignedtoezsignsigner, true
}

// HasBEzsignfoldertypeSendsignedtoezsignsigner returns a boolean if a field has been set.
func (o *EzsignfoldertypeRequestCompound) HasBEzsignfoldertypeSendsignedtoezsignsigner() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeSendsignedtoezsignsigner) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeSendsignedtoezsignsigner gets a reference to the given bool and assigns it to the BEzsignfoldertypeSendsignedtoezsignsigner field.
func (o *EzsignfoldertypeRequestCompound) SetBEzsignfoldertypeSendsignedtoezsignsigner(v bool) {
	o.BEzsignfoldertypeSendsignedtoezsignsigner = &v
}

// GetBEzsignfoldertypeSendsignedtouser returns the BEzsignfoldertypeSendsignedtouser field value if set, zero value otherwise.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendsignedtouser() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeSendsignedtouser) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeSendsignedtouser
}

// GetBEzsignfoldertypeSendsignedtouserOk returns a tuple with the BEzsignfoldertypeSendsignedtouser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendsignedtouserOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeSendsignedtouser) {
		return nil, false
	}
	return o.BEzsignfoldertypeSendsignedtouser, true
}

// HasBEzsignfoldertypeSendsignedtouser returns a boolean if a field has been set.
func (o *EzsignfoldertypeRequestCompound) HasBEzsignfoldertypeSendsignedtouser() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeSendsignedtouser) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeSendsignedtouser gets a reference to the given bool and assigns it to the BEzsignfoldertypeSendsignedtouser field.
func (o *EzsignfoldertypeRequestCompound) SetBEzsignfoldertypeSendsignedtouser(v bool) {
	o.BEzsignfoldertypeSendsignedtouser = &v
}

// GetBEzsignfoldertypeSendattachmentezsignsigner returns the BEzsignfoldertypeSendattachmentezsignsigner field value if set, zero value otherwise.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendattachmentezsignsigner() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeSendattachmentezsignsigner) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeSendattachmentezsignsigner
}

// GetBEzsignfoldertypeSendattachmentezsignsignerOk returns a tuple with the BEzsignfoldertypeSendattachmentezsignsigner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendattachmentezsignsignerOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeSendattachmentezsignsigner) {
		return nil, false
	}
	return o.BEzsignfoldertypeSendattachmentezsignsigner, true
}

// HasBEzsignfoldertypeSendattachmentezsignsigner returns a boolean if a field has been set.
func (o *EzsignfoldertypeRequestCompound) HasBEzsignfoldertypeSendattachmentezsignsigner() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeSendattachmentezsignsigner) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeSendattachmentezsignsigner gets a reference to the given bool and assigns it to the BEzsignfoldertypeSendattachmentezsignsigner field.
func (o *EzsignfoldertypeRequestCompound) SetBEzsignfoldertypeSendattachmentezsignsigner(v bool) {
	o.BEzsignfoldertypeSendattachmentezsignsigner = &v
}

// GetBEzsignfoldertypeSendproofezsignsigner returns the BEzsignfoldertypeSendproofezsignsigner field value if set, zero value otherwise.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendproofezsignsigner() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeSendproofezsignsigner) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeSendproofezsignsigner
}

// GetBEzsignfoldertypeSendproofezsignsignerOk returns a tuple with the BEzsignfoldertypeSendproofezsignsigner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendproofezsignsignerOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeSendproofezsignsigner) {
		return nil, false
	}
	return o.BEzsignfoldertypeSendproofezsignsigner, true
}

// HasBEzsignfoldertypeSendproofezsignsigner returns a boolean if a field has been set.
func (o *EzsignfoldertypeRequestCompound) HasBEzsignfoldertypeSendproofezsignsigner() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeSendproofezsignsigner) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeSendproofezsignsigner gets a reference to the given bool and assigns it to the BEzsignfoldertypeSendproofezsignsigner field.
func (o *EzsignfoldertypeRequestCompound) SetBEzsignfoldertypeSendproofezsignsigner(v bool) {
	o.BEzsignfoldertypeSendproofezsignsigner = &v
}

// GetBEzsignfoldertypeSendattachmentuser returns the BEzsignfoldertypeSendattachmentuser field value if set, zero value otherwise.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendattachmentuser() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeSendattachmentuser) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeSendattachmentuser
}

// GetBEzsignfoldertypeSendattachmentuserOk returns a tuple with the BEzsignfoldertypeSendattachmentuser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendattachmentuserOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeSendattachmentuser) {
		return nil, false
	}
	return o.BEzsignfoldertypeSendattachmentuser, true
}

// HasBEzsignfoldertypeSendattachmentuser returns a boolean if a field has been set.
func (o *EzsignfoldertypeRequestCompound) HasBEzsignfoldertypeSendattachmentuser() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeSendattachmentuser) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeSendattachmentuser gets a reference to the given bool and assigns it to the BEzsignfoldertypeSendattachmentuser field.
func (o *EzsignfoldertypeRequestCompound) SetBEzsignfoldertypeSendattachmentuser(v bool) {
	o.BEzsignfoldertypeSendattachmentuser = &v
}

// GetBEzsignfoldertypeSendproofuser returns the BEzsignfoldertypeSendproofuser field value if set, zero value otherwise.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendproofuser() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeSendproofuser) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeSendproofuser
}

// GetBEzsignfoldertypeSendproofuserOk returns a tuple with the BEzsignfoldertypeSendproofuser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendproofuserOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeSendproofuser) {
		return nil, false
	}
	return o.BEzsignfoldertypeSendproofuser, true
}

// HasBEzsignfoldertypeSendproofuser returns a boolean if a field has been set.
func (o *EzsignfoldertypeRequestCompound) HasBEzsignfoldertypeSendproofuser() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeSendproofuser) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeSendproofuser gets a reference to the given bool and assigns it to the BEzsignfoldertypeSendproofuser field.
func (o *EzsignfoldertypeRequestCompound) SetBEzsignfoldertypeSendproofuser(v bool) {
	o.BEzsignfoldertypeSendproofuser = &v
}

// GetBEzsignfoldertypeSendproofemail returns the BEzsignfoldertypeSendproofemail field value if set, zero value otherwise.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendproofemail() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeSendproofemail) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeSendproofemail
}

// GetBEzsignfoldertypeSendproofemailOk returns a tuple with the BEzsignfoldertypeSendproofemail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendproofemailOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeSendproofemail) {
		return nil, false
	}
	return o.BEzsignfoldertypeSendproofemail, true
}

// HasBEzsignfoldertypeSendproofemail returns a boolean if a field has been set.
func (o *EzsignfoldertypeRequestCompound) HasBEzsignfoldertypeSendproofemail() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeSendproofemail) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeSendproofemail gets a reference to the given bool and assigns it to the BEzsignfoldertypeSendproofemail field.
func (o *EzsignfoldertypeRequestCompound) SetBEzsignfoldertypeSendproofemail(v bool) {
	o.BEzsignfoldertypeSendproofemail = &v
}

// GetBEzsignfoldertypeAllowdownloadattachmentezsignsigner returns the BEzsignfoldertypeAllowdownloadattachmentezsignsigner field value if set, zero value otherwise.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeAllowdownloadattachmentezsignsigner() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeAllowdownloadattachmentezsignsigner) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeAllowdownloadattachmentezsignsigner
}

// GetBEzsignfoldertypeAllowdownloadattachmentezsignsignerOk returns a tuple with the BEzsignfoldertypeAllowdownloadattachmentezsignsigner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeAllowdownloadattachmentezsignsignerOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeAllowdownloadattachmentezsignsigner) {
		return nil, false
	}
	return o.BEzsignfoldertypeAllowdownloadattachmentezsignsigner, true
}

// HasBEzsignfoldertypeAllowdownloadattachmentezsignsigner returns a boolean if a field has been set.
func (o *EzsignfoldertypeRequestCompound) HasBEzsignfoldertypeAllowdownloadattachmentezsignsigner() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeAllowdownloadattachmentezsignsigner) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeAllowdownloadattachmentezsignsigner gets a reference to the given bool and assigns it to the BEzsignfoldertypeAllowdownloadattachmentezsignsigner field.
func (o *EzsignfoldertypeRequestCompound) SetBEzsignfoldertypeAllowdownloadattachmentezsignsigner(v bool) {
	o.BEzsignfoldertypeAllowdownloadattachmentezsignsigner = &v
}

// GetBEzsignfoldertypeAllowdownloadproofezsignsigner returns the BEzsignfoldertypeAllowdownloadproofezsignsigner field value if set, zero value otherwise.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeAllowdownloadproofezsignsigner() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeAllowdownloadproofezsignsigner) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeAllowdownloadproofezsignsigner
}

// GetBEzsignfoldertypeAllowdownloadproofezsignsignerOk returns a tuple with the BEzsignfoldertypeAllowdownloadproofezsignsigner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeAllowdownloadproofezsignsignerOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeAllowdownloadproofezsignsigner) {
		return nil, false
	}
	return o.BEzsignfoldertypeAllowdownloadproofezsignsigner, true
}

// HasBEzsignfoldertypeAllowdownloadproofezsignsigner returns a boolean if a field has been set.
func (o *EzsignfoldertypeRequestCompound) HasBEzsignfoldertypeAllowdownloadproofezsignsigner() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeAllowdownloadproofezsignsigner) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeAllowdownloadproofezsignsigner gets a reference to the given bool and assigns it to the BEzsignfoldertypeAllowdownloadproofezsignsigner field.
func (o *EzsignfoldertypeRequestCompound) SetBEzsignfoldertypeAllowdownloadproofezsignsigner(v bool) {
	o.BEzsignfoldertypeAllowdownloadproofezsignsigner = &v
}

// GetBEzsignfoldertypeSendproofreceivealldocument returns the BEzsignfoldertypeSendproofreceivealldocument field value if set, zero value otherwise.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendproofreceivealldocument() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeSendproofreceivealldocument) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeSendproofreceivealldocument
}

// GetBEzsignfoldertypeSendproofreceivealldocumentOk returns a tuple with the BEzsignfoldertypeSendproofreceivealldocument field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendproofreceivealldocumentOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeSendproofreceivealldocument) {
		return nil, false
	}
	return o.BEzsignfoldertypeSendproofreceivealldocument, true
}

// HasBEzsignfoldertypeSendproofreceivealldocument returns a boolean if a field has been set.
func (o *EzsignfoldertypeRequestCompound) HasBEzsignfoldertypeSendproofreceivealldocument() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeSendproofreceivealldocument) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeSendproofreceivealldocument gets a reference to the given bool and assigns it to the BEzsignfoldertypeSendproofreceivealldocument field.
func (o *EzsignfoldertypeRequestCompound) SetBEzsignfoldertypeSendproofreceivealldocument(v bool) {
	o.BEzsignfoldertypeSendproofreceivealldocument = &v
}

// GetBEzsignfoldertypeSendsignedtodocumentowner returns the BEzsignfoldertypeSendsignedtodocumentowner field value
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendsignedtodocumentowner() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BEzsignfoldertypeSendsignedtodocumentowner
}

// GetBEzsignfoldertypeSendsignedtodocumentownerOk returns a tuple with the BEzsignfoldertypeSendsignedtodocumentowner field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendsignedtodocumentownerOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BEzsignfoldertypeSendsignedtodocumentowner, true
}

// SetBEzsignfoldertypeSendsignedtodocumentowner sets field value
func (o *EzsignfoldertypeRequestCompound) SetBEzsignfoldertypeSendsignedtodocumentowner(v bool) {
	o.BEzsignfoldertypeSendsignedtodocumentowner = v
}

// GetBEzsignfoldertypeSendsignedtofolderowner returns the BEzsignfoldertypeSendsignedtofolderowner field value
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendsignedtofolderowner() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BEzsignfoldertypeSendsignedtofolderowner
}

// GetBEzsignfoldertypeSendsignedtofolderownerOk returns a tuple with the BEzsignfoldertypeSendsignedtofolderowner field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendsignedtofolderownerOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BEzsignfoldertypeSendsignedtofolderowner, true
}

// SetBEzsignfoldertypeSendsignedtofolderowner sets field value
func (o *EzsignfoldertypeRequestCompound) SetBEzsignfoldertypeSendsignedtofolderowner(v bool) {
	o.BEzsignfoldertypeSendsignedtofolderowner = v
}

// GetBEzsignfoldertypeSendsignedtofullgroup returns the BEzsignfoldertypeSendsignedtofullgroup field value if set, zero value otherwise.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendsignedtofullgroup() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeSendsignedtofullgroup) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeSendsignedtofullgroup
}

// GetBEzsignfoldertypeSendsignedtofullgroupOk returns a tuple with the BEzsignfoldertypeSendsignedtofullgroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendsignedtofullgroupOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeSendsignedtofullgroup) {
		return nil, false
	}
	return o.BEzsignfoldertypeSendsignedtofullgroup, true
}

// HasBEzsignfoldertypeSendsignedtofullgroup returns a boolean if a field has been set.
func (o *EzsignfoldertypeRequestCompound) HasBEzsignfoldertypeSendsignedtofullgroup() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeSendsignedtofullgroup) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeSendsignedtofullgroup gets a reference to the given bool and assigns it to the BEzsignfoldertypeSendsignedtofullgroup field.
func (o *EzsignfoldertypeRequestCompound) SetBEzsignfoldertypeSendsignedtofullgroup(v bool) {
	o.BEzsignfoldertypeSendsignedtofullgroup = &v
}

// GetBEzsignfoldertypeSendsignedtolimitedgroup returns the BEzsignfoldertypeSendsignedtolimitedgroup field value if set, zero value otherwise.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendsignedtolimitedgroup() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeSendsignedtolimitedgroup) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeSendsignedtolimitedgroup
}

// GetBEzsignfoldertypeSendsignedtolimitedgroupOk returns a tuple with the BEzsignfoldertypeSendsignedtolimitedgroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendsignedtolimitedgroupOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeSendsignedtolimitedgroup) {
		return nil, false
	}
	return o.BEzsignfoldertypeSendsignedtolimitedgroup, true
}

// HasBEzsignfoldertypeSendsignedtolimitedgroup returns a boolean if a field has been set.
func (o *EzsignfoldertypeRequestCompound) HasBEzsignfoldertypeSendsignedtolimitedgroup() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeSendsignedtolimitedgroup) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeSendsignedtolimitedgroup gets a reference to the given bool and assigns it to the BEzsignfoldertypeSendsignedtolimitedgroup field.
func (o *EzsignfoldertypeRequestCompound) SetBEzsignfoldertypeSendsignedtolimitedgroup(v bool) {
	o.BEzsignfoldertypeSendsignedtolimitedgroup = &v
}

// GetBEzsignfoldertypeSendsignedtocolleague returns the BEzsignfoldertypeSendsignedtocolleague field value
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendsignedtocolleague() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BEzsignfoldertypeSendsignedtocolleague
}

// GetBEzsignfoldertypeSendsignedtocolleagueOk returns a tuple with the BEzsignfoldertypeSendsignedtocolleague field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendsignedtocolleagueOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BEzsignfoldertypeSendsignedtocolleague, true
}

// SetBEzsignfoldertypeSendsignedtocolleague sets field value
func (o *EzsignfoldertypeRequestCompound) SetBEzsignfoldertypeSendsignedtocolleague(v bool) {
	o.BEzsignfoldertypeSendsignedtocolleague = v
}

// GetBEzsignfoldertypeSendsummarytodocumentowner returns the BEzsignfoldertypeSendsummarytodocumentowner field value
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendsummarytodocumentowner() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BEzsignfoldertypeSendsummarytodocumentowner
}

// GetBEzsignfoldertypeSendsummarytodocumentownerOk returns a tuple with the BEzsignfoldertypeSendsummarytodocumentowner field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendsummarytodocumentownerOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BEzsignfoldertypeSendsummarytodocumentowner, true
}

// SetBEzsignfoldertypeSendsummarytodocumentowner sets field value
func (o *EzsignfoldertypeRequestCompound) SetBEzsignfoldertypeSendsummarytodocumentowner(v bool) {
	o.BEzsignfoldertypeSendsummarytodocumentowner = v
}

// GetBEzsignfoldertypeSendsummarytofolderowner returns the BEzsignfoldertypeSendsummarytofolderowner field value
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendsummarytofolderowner() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BEzsignfoldertypeSendsummarytofolderowner
}

// GetBEzsignfoldertypeSendsummarytofolderownerOk returns a tuple with the BEzsignfoldertypeSendsummarytofolderowner field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendsummarytofolderownerOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BEzsignfoldertypeSendsummarytofolderowner, true
}

// SetBEzsignfoldertypeSendsummarytofolderowner sets field value
func (o *EzsignfoldertypeRequestCompound) SetBEzsignfoldertypeSendsummarytofolderowner(v bool) {
	o.BEzsignfoldertypeSendsummarytofolderowner = v
}

// GetBEzsignfoldertypeSendsummarytofullgroup returns the BEzsignfoldertypeSendsummarytofullgroup field value if set, zero value otherwise.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendsummarytofullgroup() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeSendsummarytofullgroup) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeSendsummarytofullgroup
}

// GetBEzsignfoldertypeSendsummarytofullgroupOk returns a tuple with the BEzsignfoldertypeSendsummarytofullgroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendsummarytofullgroupOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeSendsummarytofullgroup) {
		return nil, false
	}
	return o.BEzsignfoldertypeSendsummarytofullgroup, true
}

// HasBEzsignfoldertypeSendsummarytofullgroup returns a boolean if a field has been set.
func (o *EzsignfoldertypeRequestCompound) HasBEzsignfoldertypeSendsummarytofullgroup() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeSendsummarytofullgroup) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeSendsummarytofullgroup gets a reference to the given bool and assigns it to the BEzsignfoldertypeSendsummarytofullgroup field.
func (o *EzsignfoldertypeRequestCompound) SetBEzsignfoldertypeSendsummarytofullgroup(v bool) {
	o.BEzsignfoldertypeSendsummarytofullgroup = &v
}

// GetBEzsignfoldertypeSendsummarytolimitedgroup returns the BEzsignfoldertypeSendsummarytolimitedgroup field value if set, zero value otherwise.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendsummarytolimitedgroup() bool {
	if o == nil || IsNil(o.BEzsignfoldertypeSendsummarytolimitedgroup) {
		var ret bool
		return ret
	}
	return *o.BEzsignfoldertypeSendsummarytolimitedgroup
}

// GetBEzsignfoldertypeSendsummarytolimitedgroupOk returns a tuple with the BEzsignfoldertypeSendsummarytolimitedgroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendsummarytolimitedgroupOk() (*bool, bool) {
	if o == nil || IsNil(o.BEzsignfoldertypeSendsummarytolimitedgroup) {
		return nil, false
	}
	return o.BEzsignfoldertypeSendsummarytolimitedgroup, true
}

// HasBEzsignfoldertypeSendsummarytolimitedgroup returns a boolean if a field has been set.
func (o *EzsignfoldertypeRequestCompound) HasBEzsignfoldertypeSendsummarytolimitedgroup() bool {
	if o != nil && !IsNil(o.BEzsignfoldertypeSendsummarytolimitedgroup) {
		return true
	}

	return false
}

// SetBEzsignfoldertypeSendsummarytolimitedgroup gets a reference to the given bool and assigns it to the BEzsignfoldertypeSendsummarytolimitedgroup field.
func (o *EzsignfoldertypeRequestCompound) SetBEzsignfoldertypeSendsummarytolimitedgroup(v bool) {
	o.BEzsignfoldertypeSendsummarytolimitedgroup = &v
}

// GetBEzsignfoldertypeSendsummarytocolleague returns the BEzsignfoldertypeSendsummarytocolleague field value
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendsummarytocolleague() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BEzsignfoldertypeSendsummarytocolleague
}

// GetBEzsignfoldertypeSendsummarytocolleagueOk returns a tuple with the BEzsignfoldertypeSendsummarytocolleague field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeSendsummarytocolleagueOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BEzsignfoldertypeSendsummarytocolleague, true
}

// SetBEzsignfoldertypeSendsummarytocolleague sets field value
func (o *EzsignfoldertypeRequestCompound) SetBEzsignfoldertypeSendsummarytocolleague(v bool) {
	o.BEzsignfoldertypeSendsummarytocolleague = v
}

// GetBEzsignfoldertypeIsactive returns the BEzsignfoldertypeIsactive field value
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeIsactive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BEzsignfoldertypeIsactive
}

// GetBEzsignfoldertypeIsactiveOk returns a tuple with the BEzsignfoldertypeIsactive field value
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetBEzsignfoldertypeIsactiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BEzsignfoldertypeIsactive, true
}

// SetBEzsignfoldertypeIsactive sets field value
func (o *EzsignfoldertypeRequestCompound) SetBEzsignfoldertypeIsactive(v bool) {
	o.BEzsignfoldertypeIsactive = v
}

// GetAFkiUserIDSigned returns the AFkiUserIDSigned field value if set, zero value otherwise.
func (o *EzsignfoldertypeRequestCompound) GetAFkiUserIDSigned() []int32 {
	if o == nil || IsNil(o.AFkiUserIDSigned) {
		var ret []int32
		return ret
	}
	return o.AFkiUserIDSigned
}

// GetAFkiUserIDSignedOk returns a tuple with the AFkiUserIDSigned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetAFkiUserIDSignedOk() ([]int32, bool) {
	if o == nil || IsNil(o.AFkiUserIDSigned) {
		return nil, false
	}
	return o.AFkiUserIDSigned, true
}

// HasAFkiUserIDSigned returns a boolean if a field has been set.
func (o *EzsignfoldertypeRequestCompound) HasAFkiUserIDSigned() bool {
	if o != nil && !IsNil(o.AFkiUserIDSigned) {
		return true
	}

	return false
}

// SetAFkiUserIDSigned gets a reference to the given []int32 and assigns it to the AFkiUserIDSigned field.
func (o *EzsignfoldertypeRequestCompound) SetAFkiUserIDSigned(v []int32) {
	o.AFkiUserIDSigned = v
}

// GetAFkiUserIDSummary returns the AFkiUserIDSummary field value if set, zero value otherwise.
func (o *EzsignfoldertypeRequestCompound) GetAFkiUserIDSummary() []int32 {
	if o == nil || IsNil(o.AFkiUserIDSummary) {
		var ret []int32
		return ret
	}
	return o.AFkiUserIDSummary
}

// GetAFkiUserIDSummaryOk returns a tuple with the AFkiUserIDSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsignfoldertypeRequestCompound) GetAFkiUserIDSummaryOk() ([]int32, bool) {
	if o == nil || IsNil(o.AFkiUserIDSummary) {
		return nil, false
	}
	return o.AFkiUserIDSummary, true
}

// HasAFkiUserIDSummary returns a boolean if a field has been set.
func (o *EzsignfoldertypeRequestCompound) HasAFkiUserIDSummary() bool {
	if o != nil && !IsNil(o.AFkiUserIDSummary) {
		return true
	}

	return false
}

// SetAFkiUserIDSummary gets a reference to the given []int32 and assigns it to the AFkiUserIDSummary field.
func (o *EzsignfoldertypeRequestCompound) SetAFkiUserIDSummary(v []int32) {
	o.AFkiUserIDSummary = v
}

func (o EzsignfoldertypeRequestCompound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsignfoldertypeRequestCompound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PkiEzsignfoldertypeID) {
		toSerialize["pkiEzsignfoldertypeID"] = o.PkiEzsignfoldertypeID
	}
	toSerialize["objEzsignfoldertypeName"] = o.ObjEzsignfoldertypeName
	toSerialize["fkiBrandingID"] = o.FkiBrandingID
	if !IsNil(o.FkiBillingentityinternalID) {
		toSerialize["fkiBillingentityinternalID"] = o.FkiBillingentityinternalID
	}
	if !IsNil(o.FkiUsergroupID) {
		toSerialize["fkiUsergroupID"] = o.FkiUsergroupID
	}
	if !IsNil(o.FkiUsergroupIDRestricted) {
		toSerialize["fkiUsergroupIDRestricted"] = o.FkiUsergroupIDRestricted
	}
	if !IsNil(o.FkiEzsigntsarequirementID) {
		toSerialize["fkiEzsigntsarequirementID"] = o.FkiEzsigntsarequirementID
	}
	if !IsNil(o.SEmailAddressSigned) {
		toSerialize["sEmailAddressSigned"] = o.SEmailAddressSigned
	}
	if !IsNil(o.SEmailAddressSummary) {
		toSerialize["sEmailAddressSummary"] = o.SEmailAddressSummary
	}
	toSerialize["eEzsignfoldertypePrivacylevel"] = o.EEzsignfoldertypePrivacylevel
	if !IsNil(o.EEzsignfoldertypeSendreminderfrequency) {
		toSerialize["eEzsignfoldertypeSendreminderfrequency"] = o.EEzsignfoldertypeSendreminderfrequency
	}
	toSerialize["iEzsignfoldertypeArchivaldays"] = o.IEzsignfoldertypeArchivaldays
	toSerialize["eEzsignfoldertypeDisposal"] = o.EEzsignfoldertypeDisposal
	toSerialize["eEzsignfoldertypeCompletion"] = o.EEzsignfoldertypeCompletion
	if !IsNil(o.IEzsignfoldertypeDisposaldays) {
		toSerialize["iEzsignfoldertypeDisposaldays"] = o.IEzsignfoldertypeDisposaldays
	}
	toSerialize["iEzsignfoldertypeDeadlinedays"] = o.IEzsignfoldertypeDeadlinedays
	if !IsNil(o.BEzsignfoldertypeDelegate) {
		toSerialize["bEzsignfoldertypeDelegate"] = o.BEzsignfoldertypeDelegate
	}
	if !IsNil(o.BEzsignfoldertypeDiscussion) {
		toSerialize["bEzsignfoldertypeDiscussion"] = o.BEzsignfoldertypeDiscussion
	}
	if !IsNil(o.BEzsignfoldertypeReassignezsignsigner) {
		toSerialize["bEzsignfoldertypeReassignezsignsigner"] = o.BEzsignfoldertypeReassignezsignsigner
	}
	if !IsNil(o.BEzsignfoldertypeReassignuser) {
		toSerialize["bEzsignfoldertypeReassignuser"] = o.BEzsignfoldertypeReassignuser
	}
	if !IsNil(o.BEzsignfoldertypeSendsignedtoezsignsigner) {
		toSerialize["bEzsignfoldertypeSendsignedtoezsignsigner"] = o.BEzsignfoldertypeSendsignedtoezsignsigner
	}
	if !IsNil(o.BEzsignfoldertypeSendsignedtouser) {
		toSerialize["bEzsignfoldertypeSendsignedtouser"] = o.BEzsignfoldertypeSendsignedtouser
	}
	if !IsNil(o.BEzsignfoldertypeSendattachmentezsignsigner) {
		toSerialize["bEzsignfoldertypeSendattachmentezsignsigner"] = o.BEzsignfoldertypeSendattachmentezsignsigner
	}
	if !IsNil(o.BEzsignfoldertypeSendproofezsignsigner) {
		toSerialize["bEzsignfoldertypeSendproofezsignsigner"] = o.BEzsignfoldertypeSendproofezsignsigner
	}
	if !IsNil(o.BEzsignfoldertypeSendattachmentuser) {
		toSerialize["bEzsignfoldertypeSendattachmentuser"] = o.BEzsignfoldertypeSendattachmentuser
	}
	if !IsNil(o.BEzsignfoldertypeSendproofuser) {
		toSerialize["bEzsignfoldertypeSendproofuser"] = o.BEzsignfoldertypeSendproofuser
	}
	if !IsNil(o.BEzsignfoldertypeSendproofemail) {
		toSerialize["bEzsignfoldertypeSendproofemail"] = o.BEzsignfoldertypeSendproofemail
	}
	if !IsNil(o.BEzsignfoldertypeAllowdownloadattachmentezsignsigner) {
		toSerialize["bEzsignfoldertypeAllowdownloadattachmentezsignsigner"] = o.BEzsignfoldertypeAllowdownloadattachmentezsignsigner
	}
	if !IsNil(o.BEzsignfoldertypeAllowdownloadproofezsignsigner) {
		toSerialize["bEzsignfoldertypeAllowdownloadproofezsignsigner"] = o.BEzsignfoldertypeAllowdownloadproofezsignsigner
	}
	if !IsNil(o.BEzsignfoldertypeSendproofreceivealldocument) {
		toSerialize["bEzsignfoldertypeSendproofreceivealldocument"] = o.BEzsignfoldertypeSendproofreceivealldocument
	}
	toSerialize["bEzsignfoldertypeSendsignedtodocumentowner"] = o.BEzsignfoldertypeSendsignedtodocumentowner
	toSerialize["bEzsignfoldertypeSendsignedtofolderowner"] = o.BEzsignfoldertypeSendsignedtofolderowner
	if !IsNil(o.BEzsignfoldertypeSendsignedtofullgroup) {
		toSerialize["bEzsignfoldertypeSendsignedtofullgroup"] = o.BEzsignfoldertypeSendsignedtofullgroup
	}
	if !IsNil(o.BEzsignfoldertypeSendsignedtolimitedgroup) {
		toSerialize["bEzsignfoldertypeSendsignedtolimitedgroup"] = o.BEzsignfoldertypeSendsignedtolimitedgroup
	}
	toSerialize["bEzsignfoldertypeSendsignedtocolleague"] = o.BEzsignfoldertypeSendsignedtocolleague
	toSerialize["bEzsignfoldertypeSendsummarytodocumentowner"] = o.BEzsignfoldertypeSendsummarytodocumentowner
	toSerialize["bEzsignfoldertypeSendsummarytofolderowner"] = o.BEzsignfoldertypeSendsummarytofolderowner
	if !IsNil(o.BEzsignfoldertypeSendsummarytofullgroup) {
		toSerialize["bEzsignfoldertypeSendsummarytofullgroup"] = o.BEzsignfoldertypeSendsummarytofullgroup
	}
	if !IsNil(o.BEzsignfoldertypeSendsummarytolimitedgroup) {
		toSerialize["bEzsignfoldertypeSendsummarytolimitedgroup"] = o.BEzsignfoldertypeSendsummarytolimitedgroup
	}
	toSerialize["bEzsignfoldertypeSendsummarytocolleague"] = o.BEzsignfoldertypeSendsummarytocolleague
	toSerialize["bEzsignfoldertypeIsactive"] = o.BEzsignfoldertypeIsactive
	if !IsNil(o.AFkiUserIDSigned) {
		toSerialize["a_fkiUserIDSigned"] = o.AFkiUserIDSigned
	}
	if !IsNil(o.AFkiUserIDSummary) {
		toSerialize["a_fkiUserIDSummary"] = o.AFkiUserIDSummary
	}
	return toSerialize, nil
}

func (o *EzsignfoldertypeRequestCompound) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"objEzsignfoldertypeName",
		"fkiBrandingID",
		"eEzsignfoldertypePrivacylevel",
		"iEzsignfoldertypeArchivaldays",
		"eEzsignfoldertypeDisposal",
		"eEzsignfoldertypeCompletion",
		"iEzsignfoldertypeDeadlinedays",
		"bEzsignfoldertypeSendsignedtodocumentowner",
		"bEzsignfoldertypeSendsignedtofolderowner",
		"bEzsignfoldertypeSendsignedtocolleague",
		"bEzsignfoldertypeSendsummarytodocumentowner",
		"bEzsignfoldertypeSendsummarytofolderowner",
		"bEzsignfoldertypeSendsummarytocolleague",
		"bEzsignfoldertypeIsactive",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsignfoldertypeRequestCompound := _EzsignfoldertypeRequestCompound{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsignfoldertypeRequestCompound)

	if err != nil {
		return err
	}

	*o = EzsignfoldertypeRequestCompound(varEzsignfoldertypeRequestCompound)

	return err
}

type NullableEzsignfoldertypeRequestCompound struct {
	value *EzsignfoldertypeRequestCompound
	isSet bool
}

func (v NullableEzsignfoldertypeRequestCompound) Get() *EzsignfoldertypeRequestCompound {
	return v.value
}

func (v *NullableEzsignfoldertypeRequestCompound) Set(val *EzsignfoldertypeRequestCompound) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsignfoldertypeRequestCompound) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsignfoldertypeRequestCompound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsignfoldertypeRequestCompound(val *EzsignfoldertypeRequestCompound) *NullableEzsignfoldertypeRequestCompound {
	return &NullableEzsignfoldertypeRequestCompound{value: val, isSet: true}
}

func (v NullableEzsignfoldertypeRequestCompound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsignfoldertypeRequestCompound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


