/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// checks if the NotificationsubsectionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NotificationsubsectionResponse{}

// NotificationsubsectionResponse A Notificationsubsection Object
type NotificationsubsectionResponse struct {
	// The unique ID of the Notificationsubsection
	PkiNotificationsubsectionID int32 `json:"pkiNotificationsubsectionID"`
	// The unique ID of the Notificationsection
	FkiNotificationsectionID int32 `json:"fkiNotificationsectionID"`
	ObjNotificationsubsectionName *MultilingualNotificationsubsectionName `json:"objNotificationsubsectionName,omitempty"`
	// The name of the Notificationsection in the language of the requester
	SNotificationsectionNameX *string `json:"sNotificationsectionNameX,omitempty"`
	// The name of the Notificationsubsection in the language of the requester
	SNotificationsubsectionNameX string `json:"sNotificationsubsectionNameX"`
}

// NewNotificationsubsectionResponse instantiates a new NotificationsubsectionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationsubsectionResponse(pkiNotificationsubsectionID int32, fkiNotificationsectionID int32, sNotificationsubsectionNameX string) *NotificationsubsectionResponse {
	this := NotificationsubsectionResponse{}
	this.PkiNotificationsubsectionID = pkiNotificationsubsectionID
	this.FkiNotificationsectionID = fkiNotificationsectionID
	this.SNotificationsubsectionNameX = sNotificationsubsectionNameX
	return &this
}

// NewNotificationsubsectionResponseWithDefaults instantiates a new NotificationsubsectionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationsubsectionResponseWithDefaults() *NotificationsubsectionResponse {
	this := NotificationsubsectionResponse{}
	return &this
}

// GetPkiNotificationsubsectionID returns the PkiNotificationsubsectionID field value
func (o *NotificationsubsectionResponse) GetPkiNotificationsubsectionID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PkiNotificationsubsectionID
}

// GetPkiNotificationsubsectionIDOk returns a tuple with the PkiNotificationsubsectionID field value
// and a boolean to check if the value has been set.
func (o *NotificationsubsectionResponse) GetPkiNotificationsubsectionIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkiNotificationsubsectionID, true
}

// SetPkiNotificationsubsectionID sets field value
func (o *NotificationsubsectionResponse) SetPkiNotificationsubsectionID(v int32) {
	o.PkiNotificationsubsectionID = v
}

// GetFkiNotificationsectionID returns the FkiNotificationsectionID field value
func (o *NotificationsubsectionResponse) GetFkiNotificationsectionID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FkiNotificationsectionID
}

// GetFkiNotificationsectionIDOk returns a tuple with the FkiNotificationsectionID field value
// and a boolean to check if the value has been set.
func (o *NotificationsubsectionResponse) GetFkiNotificationsectionIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FkiNotificationsectionID, true
}

// SetFkiNotificationsectionID sets field value
func (o *NotificationsubsectionResponse) SetFkiNotificationsectionID(v int32) {
	o.FkiNotificationsectionID = v
}

// GetObjNotificationsubsectionName returns the ObjNotificationsubsectionName field value if set, zero value otherwise.
func (o *NotificationsubsectionResponse) GetObjNotificationsubsectionName() MultilingualNotificationsubsectionName {
	if o == nil || IsNil(o.ObjNotificationsubsectionName) {
		var ret MultilingualNotificationsubsectionName
		return ret
	}
	return *o.ObjNotificationsubsectionName
}

// GetObjNotificationsubsectionNameOk returns a tuple with the ObjNotificationsubsectionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationsubsectionResponse) GetObjNotificationsubsectionNameOk() (*MultilingualNotificationsubsectionName, bool) {
	if o == nil || IsNil(o.ObjNotificationsubsectionName) {
		return nil, false
	}
	return o.ObjNotificationsubsectionName, true
}

// HasObjNotificationsubsectionName returns a boolean if a field has been set.
func (o *NotificationsubsectionResponse) HasObjNotificationsubsectionName() bool {
	if o != nil && !IsNil(o.ObjNotificationsubsectionName) {
		return true
	}

	return false
}

// SetObjNotificationsubsectionName gets a reference to the given MultilingualNotificationsubsectionName and assigns it to the ObjNotificationsubsectionName field.
func (o *NotificationsubsectionResponse) SetObjNotificationsubsectionName(v MultilingualNotificationsubsectionName) {
	o.ObjNotificationsubsectionName = &v
}

// GetSNotificationsectionNameX returns the SNotificationsectionNameX field value if set, zero value otherwise.
func (o *NotificationsubsectionResponse) GetSNotificationsectionNameX() string {
	if o == nil || IsNil(o.SNotificationsectionNameX) {
		var ret string
		return ret
	}
	return *o.SNotificationsectionNameX
}

// GetSNotificationsectionNameXOk returns a tuple with the SNotificationsectionNameX field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationsubsectionResponse) GetSNotificationsectionNameXOk() (*string, bool) {
	if o == nil || IsNil(o.SNotificationsectionNameX) {
		return nil, false
	}
	return o.SNotificationsectionNameX, true
}

// HasSNotificationsectionNameX returns a boolean if a field has been set.
func (o *NotificationsubsectionResponse) HasSNotificationsectionNameX() bool {
	if o != nil && !IsNil(o.SNotificationsectionNameX) {
		return true
	}

	return false
}

// SetSNotificationsectionNameX gets a reference to the given string and assigns it to the SNotificationsectionNameX field.
func (o *NotificationsubsectionResponse) SetSNotificationsectionNameX(v string) {
	o.SNotificationsectionNameX = &v
}

// GetSNotificationsubsectionNameX returns the SNotificationsubsectionNameX field value
func (o *NotificationsubsectionResponse) GetSNotificationsubsectionNameX() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SNotificationsubsectionNameX
}

// GetSNotificationsubsectionNameXOk returns a tuple with the SNotificationsubsectionNameX field value
// and a boolean to check if the value has been set.
func (o *NotificationsubsectionResponse) GetSNotificationsubsectionNameXOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SNotificationsubsectionNameX, true
}

// SetSNotificationsubsectionNameX sets field value
func (o *NotificationsubsectionResponse) SetSNotificationsubsectionNameX(v string) {
	o.SNotificationsubsectionNameX = v
}

func (o NotificationsubsectionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotificationsubsectionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pkiNotificationsubsectionID"] = o.PkiNotificationsubsectionID
	toSerialize["fkiNotificationsectionID"] = o.FkiNotificationsectionID
	if !IsNil(o.ObjNotificationsubsectionName) {
		toSerialize["objNotificationsubsectionName"] = o.ObjNotificationsubsectionName
	}
	if !IsNil(o.SNotificationsectionNameX) {
		toSerialize["sNotificationsectionNameX"] = o.SNotificationsectionNameX
	}
	toSerialize["sNotificationsubsectionNameX"] = o.SNotificationsubsectionNameX
	return toSerialize, nil
}

type NullableNotificationsubsectionResponse struct {
	value *NotificationsubsectionResponse
	isSet bool
}

func (v NullableNotificationsubsectionResponse) Get() *NotificationsubsectionResponse {
	return v.value
}

func (v *NullableNotificationsubsectionResponse) Set(val *NotificationsubsectionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationsubsectionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationsubsectionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationsubsectionResponse(val *NotificationsubsectionResponse) *NullableNotificationsubsectionResponse {
	return &NullableNotificationsubsectionResponse{value: val, isSet: true}
}

func (v NullableNotificationsubsectionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationsubsectionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


