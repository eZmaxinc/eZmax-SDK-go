/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.2
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CustomerAutocompleteElementResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerAutocompleteElementResponse{}

// CustomerAutocompleteElementResponse A Customer AutocompleteElement Response
type CustomerAutocompleteElementResponse struct {
	// The unique ID of the Customer.
	PkiCustomerID int32 `json:"pkiCustomerID"`
	// The name of the Customer
	SCustomerName string `json:"sCustomerName" validate:"regexp=^.{0,50}$"`
	// Whether the customer is active or not
	BCustomerIsactive bool `json:"bCustomerIsactive"`
}

type _CustomerAutocompleteElementResponse CustomerAutocompleteElementResponse

// NewCustomerAutocompleteElementResponse instantiates a new CustomerAutocompleteElementResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerAutocompleteElementResponse(pkiCustomerID int32, sCustomerName string, bCustomerIsactive bool) *CustomerAutocompleteElementResponse {
	this := CustomerAutocompleteElementResponse{}
	this.PkiCustomerID = pkiCustomerID
	this.SCustomerName = sCustomerName
	this.BCustomerIsactive = bCustomerIsactive
	return &this
}

// NewCustomerAutocompleteElementResponseWithDefaults instantiates a new CustomerAutocompleteElementResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerAutocompleteElementResponseWithDefaults() *CustomerAutocompleteElementResponse {
	this := CustomerAutocompleteElementResponse{}
	return &this
}

// GetPkiCustomerID returns the PkiCustomerID field value
func (o *CustomerAutocompleteElementResponse) GetPkiCustomerID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PkiCustomerID
}

// GetPkiCustomerIDOk returns a tuple with the PkiCustomerID field value
// and a boolean to check if the value has been set.
func (o *CustomerAutocompleteElementResponse) GetPkiCustomerIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkiCustomerID, true
}

// SetPkiCustomerID sets field value
func (o *CustomerAutocompleteElementResponse) SetPkiCustomerID(v int32) {
	o.PkiCustomerID = v
}

// GetSCustomerName returns the SCustomerName field value
func (o *CustomerAutocompleteElementResponse) GetSCustomerName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SCustomerName
}

// GetSCustomerNameOk returns a tuple with the SCustomerName field value
// and a boolean to check if the value has been set.
func (o *CustomerAutocompleteElementResponse) GetSCustomerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SCustomerName, true
}

// SetSCustomerName sets field value
func (o *CustomerAutocompleteElementResponse) SetSCustomerName(v string) {
	o.SCustomerName = v
}

// GetBCustomerIsactive returns the BCustomerIsactive field value
func (o *CustomerAutocompleteElementResponse) GetBCustomerIsactive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BCustomerIsactive
}

// GetBCustomerIsactiveOk returns a tuple with the BCustomerIsactive field value
// and a boolean to check if the value has been set.
func (o *CustomerAutocompleteElementResponse) GetBCustomerIsactiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BCustomerIsactive, true
}

// SetBCustomerIsactive sets field value
func (o *CustomerAutocompleteElementResponse) SetBCustomerIsactive(v bool) {
	o.BCustomerIsactive = v
}

func (o CustomerAutocompleteElementResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerAutocompleteElementResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pkiCustomerID"] = o.PkiCustomerID
	toSerialize["sCustomerName"] = o.SCustomerName
	toSerialize["bCustomerIsactive"] = o.BCustomerIsactive
	return toSerialize, nil
}

func (o *CustomerAutocompleteElementResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pkiCustomerID",
		"sCustomerName",
		"bCustomerIsactive",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomerAutocompleteElementResponse := _CustomerAutocompleteElementResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCustomerAutocompleteElementResponse)

	if err != nil {
		return err
	}

	*o = CustomerAutocompleteElementResponse(varCustomerAutocompleteElementResponse)

	return err
}

type NullableCustomerAutocompleteElementResponse struct {
	value *CustomerAutocompleteElementResponse
	isSet bool
}

func (v NullableCustomerAutocompleteElementResponse) Get() *CustomerAutocompleteElementResponse {
	return v.value
}

func (v *NullableCustomerAutocompleteElementResponse) Set(val *CustomerAutocompleteElementResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerAutocompleteElementResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerAutocompleteElementResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerAutocompleteElementResponse(val *CustomerAutocompleteElementResponse) *NullableCustomerAutocompleteElementResponse {
	return &NullableCustomerAutocompleteElementResponse{value: val, isSet: true}
}

func (v NullableCustomerAutocompleteElementResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerAutocompleteElementResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


