/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CustomAutocompleteElementResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomAutocompleteElementResponse{}

// CustomAutocompleteElementResponse Generic AutocompleteElement Response
type CustomAutocompleteElementResponse struct {
	// The Category for the dropdown or an empty string if not categorized
	SCategory string `json:"sCategory"`
	// The Description of the element
	SLabel string `json:"sLabel"`
	// The Unique ID of the element
	SValue string `json:"sValue"`
	// The Unique ID of the element
	// Deprecated
	MValue *string `json:"mValue,omitempty"`
	// Indicates if the element is active
	BActive bool `json:"bActive"`
}

type _CustomAutocompleteElementResponse CustomAutocompleteElementResponse

// NewCustomAutocompleteElementResponse instantiates a new CustomAutocompleteElementResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomAutocompleteElementResponse(sCategory string, sLabel string, sValue string, bActive bool) *CustomAutocompleteElementResponse {
	this := CustomAutocompleteElementResponse{}
	this.SCategory = sCategory
	this.SLabel = sLabel
	this.SValue = sValue
	this.BActive = bActive
	return &this
}

// NewCustomAutocompleteElementResponseWithDefaults instantiates a new CustomAutocompleteElementResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomAutocompleteElementResponseWithDefaults() *CustomAutocompleteElementResponse {
	this := CustomAutocompleteElementResponse{}
	return &this
}

// GetSCategory returns the SCategory field value
func (o *CustomAutocompleteElementResponse) GetSCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SCategory
}

// GetSCategoryOk returns a tuple with the SCategory field value
// and a boolean to check if the value has been set.
func (o *CustomAutocompleteElementResponse) GetSCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SCategory, true
}

// SetSCategory sets field value
func (o *CustomAutocompleteElementResponse) SetSCategory(v string) {
	o.SCategory = v
}

// GetSLabel returns the SLabel field value
func (o *CustomAutocompleteElementResponse) GetSLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SLabel
}

// GetSLabelOk returns a tuple with the SLabel field value
// and a boolean to check if the value has been set.
func (o *CustomAutocompleteElementResponse) GetSLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SLabel, true
}

// SetSLabel sets field value
func (o *CustomAutocompleteElementResponse) SetSLabel(v string) {
	o.SLabel = v
}

// GetSValue returns the SValue field value
func (o *CustomAutocompleteElementResponse) GetSValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SValue
}

// GetSValueOk returns a tuple with the SValue field value
// and a boolean to check if the value has been set.
func (o *CustomAutocompleteElementResponse) GetSValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SValue, true
}

// SetSValue sets field value
func (o *CustomAutocompleteElementResponse) SetSValue(v string) {
	o.SValue = v
}

// GetMValue returns the MValue field value if set, zero value otherwise.
// Deprecated
func (o *CustomAutocompleteElementResponse) GetMValue() string {
	if o == nil || IsNil(o.MValue) {
		var ret string
		return ret
	}
	return *o.MValue
}

// GetMValueOk returns a tuple with the MValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *CustomAutocompleteElementResponse) GetMValueOk() (*string, bool) {
	if o == nil || IsNil(o.MValue) {
		return nil, false
	}
	return o.MValue, true
}

// HasMValue returns a boolean if a field has been set.
func (o *CustomAutocompleteElementResponse) HasMValue() bool {
	if o != nil && !IsNil(o.MValue) {
		return true
	}

	return false
}

// SetMValue gets a reference to the given string and assigns it to the MValue field.
// Deprecated
func (o *CustomAutocompleteElementResponse) SetMValue(v string) {
	o.MValue = &v
}

// GetBActive returns the BActive field value
func (o *CustomAutocompleteElementResponse) GetBActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BActive
}

// GetBActiveOk returns a tuple with the BActive field value
// and a boolean to check if the value has been set.
func (o *CustomAutocompleteElementResponse) GetBActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BActive, true
}

// SetBActive sets field value
func (o *CustomAutocompleteElementResponse) SetBActive(v bool) {
	o.BActive = v
}

func (o CustomAutocompleteElementResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomAutocompleteElementResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sCategory"] = o.SCategory
	toSerialize["sLabel"] = o.SLabel
	toSerialize["sValue"] = o.SValue
	if !IsNil(o.MValue) {
		toSerialize["mValue"] = o.MValue
	}
	toSerialize["bActive"] = o.BActive
	return toSerialize, nil
}

func (o *CustomAutocompleteElementResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sCategory",
		"sLabel",
		"sValue",
		"bActive",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomAutocompleteElementResponse := _CustomAutocompleteElementResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCustomAutocompleteElementResponse)

	if err != nil {
		return err
	}

	*o = CustomAutocompleteElementResponse(varCustomAutocompleteElementResponse)

	return err
}

type NullableCustomAutocompleteElementResponse struct {
	value *CustomAutocompleteElementResponse
	isSet bool
}

func (v NullableCustomAutocompleteElementResponse) Get() *CustomAutocompleteElementResponse {
	return v.value
}

func (v *NullableCustomAutocompleteElementResponse) Set(val *CustomAutocompleteElementResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomAutocompleteElementResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomAutocompleteElementResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomAutocompleteElementResponse(val *CustomAutocompleteElementResponse) *NullableCustomAutocompleteElementResponse {
	return &NullableCustomAutocompleteElementResponse{value: val, isSet: true}
}

func (v NullableCustomAutocompleteElementResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomAutocompleteElementResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


