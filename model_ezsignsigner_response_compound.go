/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EzsignsignerResponseCompound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsignsignerResponseCompound{}

// EzsignsignerResponseCompound An Ezsignsigner Object and children to create a complete structure
type EzsignsignerResponseCompound struct {
	EzsignsignerResponse
	ObjContact EzsignsignerResponseCompoundContact `json:"objContact"`
}

type _EzsignsignerResponseCompound EzsignsignerResponseCompound

// NewEzsignsignerResponseCompound instantiates a new EzsignsignerResponseCompound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsignsignerResponseCompound(objContact EzsignsignerResponseCompoundContact, pkiEzsignsignerID int32, fkiTaxassignmentID int32, fkiUserlogintypeID int32, sUserlogintypeDescriptionX string) *EzsignsignerResponseCompound {
	this := EzsignsignerResponseCompound{}
	this.PkiEzsignsignerID = pkiEzsignsignerID
	this.FkiTaxassignmentID = fkiTaxassignmentID
	this.FkiUserlogintypeID = fkiUserlogintypeID
	this.SUserlogintypeDescriptionX = sUserlogintypeDescriptionX
	this.ObjContact = objContact
	return &this
}

// NewEzsignsignerResponseCompoundWithDefaults instantiates a new EzsignsignerResponseCompound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsignsignerResponseCompoundWithDefaults() *EzsignsignerResponseCompound {
	this := EzsignsignerResponseCompound{}
	return &this
}

// GetObjContact returns the ObjContact field value
func (o *EzsignsignerResponseCompound) GetObjContact() EzsignsignerResponseCompoundContact {
	if o == nil {
		var ret EzsignsignerResponseCompoundContact
		return ret
	}

	return o.ObjContact
}

// GetObjContactOk returns a tuple with the ObjContact field value
// and a boolean to check if the value has been set.
func (o *EzsignsignerResponseCompound) GetObjContactOk() (*EzsignsignerResponseCompoundContact, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjContact, true
}

// SetObjContact sets field value
func (o *EzsignsignerResponseCompound) SetObjContact(v EzsignsignerResponseCompoundContact) {
	o.ObjContact = v
}

func (o EzsignsignerResponseCompound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsignsignerResponseCompound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["objContact"] = o.ObjContact
	return toSerialize, nil
}

func (o *EzsignsignerResponseCompound) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"objContact",
		"pkiEzsignsignerID",
		"fkiTaxassignmentID",
		"fkiUserlogintypeID",
		"sUserlogintypeDescriptionX",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEzsignsignerResponseCompound := _EzsignsignerResponseCompound{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEzsignsignerResponseCompound)

	if err != nil {
		return err
	}

	*o = EzsignsignerResponseCompound(varEzsignsignerResponseCompound)

	return err
}

type NullableEzsignsignerResponseCompound struct {
	value *EzsignsignerResponseCompound
	isSet bool
}

func (v NullableEzsignsignerResponseCompound) Get() *EzsignsignerResponseCompound {
	return v.value
}

func (v *NullableEzsignsignerResponseCompound) Set(val *EzsignsignerResponseCompound) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsignsignerResponseCompound) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsignsignerResponseCompound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsignsignerResponseCompound(val *EzsignsignerResponseCompound) *NullableEzsignsignerResponseCompound {
	return &NullableEzsignsignerResponseCompound{value: val, isSet: true}
}

func (v NullableEzsignsignerResponseCompound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsignsignerResponseCompound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


