/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.2
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
)

// checks if the EzsigndocumentMatchingtemplateV3Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EzsigndocumentMatchingtemplateV3Response{}

// EzsigndocumentMatchingtemplateV3Response A Ezsigndocument createObject Response
type EzsigndocumentMatchingtemplateV3Response struct {
	// The unique ID of the Ezsigntemplate
	PkiEzsigntemplateID *int32 `json:"pkiEzsigntemplateID,omitempty"`
	// The unique ID of the Ezsigntemplateglobal
	PkiEzsigntemplateglobalID *int32 `json:"pkiEzsigntemplateglobalID,omitempty"`
}

// NewEzsigndocumentMatchingtemplateV3Response instantiates a new EzsigndocumentMatchingtemplateV3Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEzsigndocumentMatchingtemplateV3Response() *EzsigndocumentMatchingtemplateV3Response {
	this := EzsigndocumentMatchingtemplateV3Response{}
	return &this
}

// NewEzsigndocumentMatchingtemplateV3ResponseWithDefaults instantiates a new EzsigndocumentMatchingtemplateV3Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEzsigndocumentMatchingtemplateV3ResponseWithDefaults() *EzsigndocumentMatchingtemplateV3Response {
	this := EzsigndocumentMatchingtemplateV3Response{}
	return &this
}

// GetPkiEzsigntemplateID returns the PkiEzsigntemplateID field value if set, zero value otherwise.
func (o *EzsigndocumentMatchingtemplateV3Response) GetPkiEzsigntemplateID() int32 {
	if o == nil || IsNil(o.PkiEzsigntemplateID) {
		var ret int32
		return ret
	}
	return *o.PkiEzsigntemplateID
}

// GetPkiEzsigntemplateIDOk returns a tuple with the PkiEzsigntemplateID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigndocumentMatchingtemplateV3Response) GetPkiEzsigntemplateIDOk() (*int32, bool) {
	if o == nil || IsNil(o.PkiEzsigntemplateID) {
		return nil, false
	}
	return o.PkiEzsigntemplateID, true
}

// HasPkiEzsigntemplateID returns a boolean if a field has been set.
func (o *EzsigndocumentMatchingtemplateV3Response) HasPkiEzsigntemplateID() bool {
	if o != nil && !IsNil(o.PkiEzsigntemplateID) {
		return true
	}

	return false
}

// SetPkiEzsigntemplateID gets a reference to the given int32 and assigns it to the PkiEzsigntemplateID field.
func (o *EzsigndocumentMatchingtemplateV3Response) SetPkiEzsigntemplateID(v int32) {
	o.PkiEzsigntemplateID = &v
}

// GetPkiEzsigntemplateglobalID returns the PkiEzsigntemplateglobalID field value if set, zero value otherwise.
func (o *EzsigndocumentMatchingtemplateV3Response) GetPkiEzsigntemplateglobalID() int32 {
	if o == nil || IsNil(o.PkiEzsigntemplateglobalID) {
		var ret int32
		return ret
	}
	return *o.PkiEzsigntemplateglobalID
}

// GetPkiEzsigntemplateglobalIDOk returns a tuple with the PkiEzsigntemplateglobalID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EzsigndocumentMatchingtemplateV3Response) GetPkiEzsigntemplateglobalIDOk() (*int32, bool) {
	if o == nil || IsNil(o.PkiEzsigntemplateglobalID) {
		return nil, false
	}
	return o.PkiEzsigntemplateglobalID, true
}

// HasPkiEzsigntemplateglobalID returns a boolean if a field has been set.
func (o *EzsigndocumentMatchingtemplateV3Response) HasPkiEzsigntemplateglobalID() bool {
	if o != nil && !IsNil(o.PkiEzsigntemplateglobalID) {
		return true
	}

	return false
}

// SetPkiEzsigntemplateglobalID gets a reference to the given int32 and assigns it to the PkiEzsigntemplateglobalID field.
func (o *EzsigndocumentMatchingtemplateV3Response) SetPkiEzsigntemplateglobalID(v int32) {
	o.PkiEzsigntemplateglobalID = &v
}

func (o EzsigndocumentMatchingtemplateV3Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EzsigndocumentMatchingtemplateV3Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PkiEzsigntemplateID) {
		toSerialize["pkiEzsigntemplateID"] = o.PkiEzsigntemplateID
	}
	if !IsNil(o.PkiEzsigntemplateglobalID) {
		toSerialize["pkiEzsigntemplateglobalID"] = o.PkiEzsigntemplateglobalID
	}
	return toSerialize, nil
}

type NullableEzsigndocumentMatchingtemplateV3Response struct {
	value *EzsigndocumentMatchingtemplateV3Response
	isSet bool
}

func (v NullableEzsigndocumentMatchingtemplateV3Response) Get() *EzsigndocumentMatchingtemplateV3Response {
	return v.value
}

func (v *NullableEzsigndocumentMatchingtemplateV3Response) Set(val *EzsigndocumentMatchingtemplateV3Response) {
	v.value = val
	v.isSet = true
}

func (v NullableEzsigndocumentMatchingtemplateV3Response) IsSet() bool {
	return v.isSet
}

func (v *NullableEzsigndocumentMatchingtemplateV3Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEzsigndocumentMatchingtemplateV3Response(val *EzsigndocumentMatchingtemplateV3Response) *NullableEzsigndocumentMatchingtemplateV3Response {
	return &NullableEzsigndocumentMatchingtemplateV3Response{value: val, isSet: true}
}

func (v NullableEzsigndocumentMatchingtemplateV3Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEzsigndocumentMatchingtemplateV3Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


