/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.1
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SupplyRequestCompound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SupplyRequestCompound{}

// SupplyRequestCompound A Supply Object and children
type SupplyRequestCompound struct {
	SupplyRequest
}

type _SupplyRequestCompound SupplyRequestCompound

// NewSupplyRequestCompound instantiates a new SupplyRequestCompound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSupplyRequestCompound(fkiVariableexpenseID int32, sSupplyCode string, objSupplyDescription MultilingualSupplyDescription, dSupplyUnitprice string, bSupplyIsactive bool, bSupplyVariableprice bool) *SupplyRequestCompound {
	this := SupplyRequestCompound{}
	this.FkiVariableexpenseID = fkiVariableexpenseID
	this.SSupplyCode = sSupplyCode
	this.ObjSupplyDescription = objSupplyDescription
	this.DSupplyUnitprice = dSupplyUnitprice
	this.BSupplyIsactive = bSupplyIsactive
	this.BSupplyVariableprice = bSupplyVariableprice
	return &this
}

// NewSupplyRequestCompoundWithDefaults instantiates a new SupplyRequestCompound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSupplyRequestCompoundWithDefaults() *SupplyRequestCompound {
	this := SupplyRequestCompound{}
	return &this
}

func (o SupplyRequestCompound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SupplyRequestCompound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	return toSerialize, nil
}

func (o *SupplyRequestCompound) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"fkiVariableexpenseID",
		"sSupplyCode",
		"objSupplyDescription",
		"dSupplyUnitprice",
		"bSupplyIsactive",
		"bSupplyVariableprice",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSupplyRequestCompound := _SupplyRequestCompound{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSupplyRequestCompound)

	if err != nil {
		return err
	}

	*o = SupplyRequestCompound(varSupplyRequestCompound)

	return err
}

type NullableSupplyRequestCompound struct {
	value *SupplyRequestCompound
	isSet bool
}

func (v NullableSupplyRequestCompound) Get() *SupplyRequestCompound {
	return v.value
}

func (v *NullableSupplyRequestCompound) Set(val *SupplyRequestCompound) {
	v.value = val
	v.isSet = true
}

func (v NullableSupplyRequestCompound) IsSet() bool {
	return v.isSet
}

func (v *NullableSupplyRequestCompound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSupplyRequestCompound(val *SupplyRequestCompound) *NullableSupplyRequestCompound {
	return &NullableSupplyRequestCompound{value: val, isSet: true}
}

func (v NullableSupplyRequestCompound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSupplyRequestCompound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


