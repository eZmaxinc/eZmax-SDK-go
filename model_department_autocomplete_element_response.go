/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.0
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DepartmentAutocompleteElementResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DepartmentAutocompleteElementResponse{}

// DepartmentAutocompleteElementResponse A Department AutocompleteElement Response
type DepartmentAutocompleteElementResponse struct {
	// The Name of the Company in the language of the requester
	SCompanyNameX string `json:"sCompanyNameX"`
	// The Name of the Department in the language of the requester
	SDepartmentNameX string `json:"sDepartmentNameX"`
	// The unique ID of the Department
	PkiDepartmentID int32 `json:"pkiDepartmentID"`
	// Whether the Department is active or not
	BDepartmentIsactive bool `json:"bDepartmentIsactive"`
}

type _DepartmentAutocompleteElementResponse DepartmentAutocompleteElementResponse

// NewDepartmentAutocompleteElementResponse instantiates a new DepartmentAutocompleteElementResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDepartmentAutocompleteElementResponse(sCompanyNameX string, sDepartmentNameX string, pkiDepartmentID int32, bDepartmentIsactive bool) *DepartmentAutocompleteElementResponse {
	this := DepartmentAutocompleteElementResponse{}
	this.SCompanyNameX = sCompanyNameX
	this.SDepartmentNameX = sDepartmentNameX
	this.PkiDepartmentID = pkiDepartmentID
	this.BDepartmentIsactive = bDepartmentIsactive
	return &this
}

// NewDepartmentAutocompleteElementResponseWithDefaults instantiates a new DepartmentAutocompleteElementResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDepartmentAutocompleteElementResponseWithDefaults() *DepartmentAutocompleteElementResponse {
	this := DepartmentAutocompleteElementResponse{}
	return &this
}

// GetSCompanyNameX returns the SCompanyNameX field value
func (o *DepartmentAutocompleteElementResponse) GetSCompanyNameX() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SCompanyNameX
}

// GetSCompanyNameXOk returns a tuple with the SCompanyNameX field value
// and a boolean to check if the value has been set.
func (o *DepartmentAutocompleteElementResponse) GetSCompanyNameXOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SCompanyNameX, true
}

// SetSCompanyNameX sets field value
func (o *DepartmentAutocompleteElementResponse) SetSCompanyNameX(v string) {
	o.SCompanyNameX = v
}

// GetSDepartmentNameX returns the SDepartmentNameX field value
func (o *DepartmentAutocompleteElementResponse) GetSDepartmentNameX() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SDepartmentNameX
}

// GetSDepartmentNameXOk returns a tuple with the SDepartmentNameX field value
// and a boolean to check if the value has been set.
func (o *DepartmentAutocompleteElementResponse) GetSDepartmentNameXOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SDepartmentNameX, true
}

// SetSDepartmentNameX sets field value
func (o *DepartmentAutocompleteElementResponse) SetSDepartmentNameX(v string) {
	o.SDepartmentNameX = v
}

// GetPkiDepartmentID returns the PkiDepartmentID field value
func (o *DepartmentAutocompleteElementResponse) GetPkiDepartmentID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PkiDepartmentID
}

// GetPkiDepartmentIDOk returns a tuple with the PkiDepartmentID field value
// and a boolean to check if the value has been set.
func (o *DepartmentAutocompleteElementResponse) GetPkiDepartmentIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkiDepartmentID, true
}

// SetPkiDepartmentID sets field value
func (o *DepartmentAutocompleteElementResponse) SetPkiDepartmentID(v int32) {
	o.PkiDepartmentID = v
}

// GetBDepartmentIsactive returns the BDepartmentIsactive field value
func (o *DepartmentAutocompleteElementResponse) GetBDepartmentIsactive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BDepartmentIsactive
}

// GetBDepartmentIsactiveOk returns a tuple with the BDepartmentIsactive field value
// and a boolean to check if the value has been set.
func (o *DepartmentAutocompleteElementResponse) GetBDepartmentIsactiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BDepartmentIsactive, true
}

// SetBDepartmentIsactive sets field value
func (o *DepartmentAutocompleteElementResponse) SetBDepartmentIsactive(v bool) {
	o.BDepartmentIsactive = v
}

func (o DepartmentAutocompleteElementResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DepartmentAutocompleteElementResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sCompanyNameX"] = o.SCompanyNameX
	toSerialize["sDepartmentNameX"] = o.SDepartmentNameX
	toSerialize["pkiDepartmentID"] = o.PkiDepartmentID
	toSerialize["bDepartmentIsactive"] = o.BDepartmentIsactive
	return toSerialize, nil
}

func (o *DepartmentAutocompleteElementResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sCompanyNameX",
		"sDepartmentNameX",
		"pkiDepartmentID",
		"bDepartmentIsactive",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDepartmentAutocompleteElementResponse := _DepartmentAutocompleteElementResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDepartmentAutocompleteElementResponse)

	if err != nil {
		return err
	}

	*o = DepartmentAutocompleteElementResponse(varDepartmentAutocompleteElementResponse)

	return err
}

type NullableDepartmentAutocompleteElementResponse struct {
	value *DepartmentAutocompleteElementResponse
	isSet bool
}

func (v NullableDepartmentAutocompleteElementResponse) Get() *DepartmentAutocompleteElementResponse {
	return v.value
}

func (v *NullableDepartmentAutocompleteElementResponse) Set(val *DepartmentAutocompleteElementResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDepartmentAutocompleteElementResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDepartmentAutocompleteElementResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDepartmentAutocompleteElementResponse(val *DepartmentAutocompleteElementResponse) *NullableDepartmentAutocompleteElementResponse {
	return &NullableDepartmentAutocompleteElementResponse{value: val, isSet: true}
}

func (v NullableDepartmentAutocompleteElementResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDepartmentAutocompleteElementResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


