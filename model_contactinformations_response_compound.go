/*
eZmax API Definition (Full)

This API expose all the functionnalities for the eZmax and eZsign applications.

API version: 1.2.2
Contact: support-api@ezmax.ca
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eZmaxApi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ContactinformationsResponseCompound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContactinformationsResponseCompound{}

// ContactinformationsResponseCompound A Contactinformations Object
type ContactinformationsResponseCompound struct {
	// The unique ID of the Contactinformations
	PkiContactinformationsID int32 `json:"pkiContactinformationsID"`
	// The unique ID of the Address
	FkiAddressIDDefault *int32 `json:"fkiAddressIDDefault,omitempty"`
	// The unique ID of the Phone.
	FkiPhoneIDDefault *int32 `json:"fkiPhoneIDDefault,omitempty"`
	// The unique ID of the Email
	FkiEmailIDDefault *int32 `json:"fkiEmailIDDefault,omitempty"`
	// The unique ID of the Website Default
	FkiWebsiteIDDefault *int32 `json:"fkiWebsiteIDDefault,omitempty"`
	EContactinformationsType FieldEContactinformationsType `json:"eContactinformationsType"`
	// The url of the Contactinformations
	SContactinformationsUrl *string `json:"sContactinformationsUrl,omitempty" validate:"regexp=^.{0,255}$"`
	ObjAddressDefault *AddressResponseCompound `json:"objAddressDefault,omitempty"`
	ObjPhoneDefault *PhoneResponseCompound `json:"objPhoneDefault,omitempty"`
	ObjEmailDefault *EmailResponseCompound `json:"objEmailDefault,omitempty"`
	ObjWebsiteDefault *WebsiteResponseCompound `json:"objWebsiteDefault,omitempty"`
	AObjAddress []AddressResponseCompound `json:"a_objAddress"`
	AObjPhone []PhoneResponseCompound `json:"a_objPhone"`
	AObjEmail []EmailResponseCompound `json:"a_objEmail"`
	AObjWebsite []WebsiteResponseCompound `json:"a_objWebsite"`
}

type _ContactinformationsResponseCompound ContactinformationsResponseCompound

// NewContactinformationsResponseCompound instantiates a new ContactinformationsResponseCompound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContactinformationsResponseCompound(pkiContactinformationsID int32, eContactinformationsType FieldEContactinformationsType, aObjAddress []AddressResponseCompound, aObjPhone []PhoneResponseCompound, aObjEmail []EmailResponseCompound, aObjWebsite []WebsiteResponseCompound) *ContactinformationsResponseCompound {
	this := ContactinformationsResponseCompound{}
	this.PkiContactinformationsID = pkiContactinformationsID
	this.EContactinformationsType = eContactinformationsType
	this.AObjAddress = aObjAddress
	this.AObjPhone = aObjPhone
	this.AObjEmail = aObjEmail
	this.AObjWebsite = aObjWebsite
	return &this
}

// NewContactinformationsResponseCompoundWithDefaults instantiates a new ContactinformationsResponseCompound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContactinformationsResponseCompoundWithDefaults() *ContactinformationsResponseCompound {
	this := ContactinformationsResponseCompound{}
	return &this
}

// GetPkiContactinformationsID returns the PkiContactinformationsID field value
func (o *ContactinformationsResponseCompound) GetPkiContactinformationsID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PkiContactinformationsID
}

// GetPkiContactinformationsIDOk returns a tuple with the PkiContactinformationsID field value
// and a boolean to check if the value has been set.
func (o *ContactinformationsResponseCompound) GetPkiContactinformationsIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkiContactinformationsID, true
}

// SetPkiContactinformationsID sets field value
func (o *ContactinformationsResponseCompound) SetPkiContactinformationsID(v int32) {
	o.PkiContactinformationsID = v
}

// GetFkiAddressIDDefault returns the FkiAddressIDDefault field value if set, zero value otherwise.
func (o *ContactinformationsResponseCompound) GetFkiAddressIDDefault() int32 {
	if o == nil || IsNil(o.FkiAddressIDDefault) {
		var ret int32
		return ret
	}
	return *o.FkiAddressIDDefault
}

// GetFkiAddressIDDefaultOk returns a tuple with the FkiAddressIDDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactinformationsResponseCompound) GetFkiAddressIDDefaultOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiAddressIDDefault) {
		return nil, false
	}
	return o.FkiAddressIDDefault, true
}

// HasFkiAddressIDDefault returns a boolean if a field has been set.
func (o *ContactinformationsResponseCompound) HasFkiAddressIDDefault() bool {
	if o != nil && !IsNil(o.FkiAddressIDDefault) {
		return true
	}

	return false
}

// SetFkiAddressIDDefault gets a reference to the given int32 and assigns it to the FkiAddressIDDefault field.
func (o *ContactinformationsResponseCompound) SetFkiAddressIDDefault(v int32) {
	o.FkiAddressIDDefault = &v
}

// GetFkiPhoneIDDefault returns the FkiPhoneIDDefault field value if set, zero value otherwise.
func (o *ContactinformationsResponseCompound) GetFkiPhoneIDDefault() int32 {
	if o == nil || IsNil(o.FkiPhoneIDDefault) {
		var ret int32
		return ret
	}
	return *o.FkiPhoneIDDefault
}

// GetFkiPhoneIDDefaultOk returns a tuple with the FkiPhoneIDDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactinformationsResponseCompound) GetFkiPhoneIDDefaultOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiPhoneIDDefault) {
		return nil, false
	}
	return o.FkiPhoneIDDefault, true
}

// HasFkiPhoneIDDefault returns a boolean if a field has been set.
func (o *ContactinformationsResponseCompound) HasFkiPhoneIDDefault() bool {
	if o != nil && !IsNil(o.FkiPhoneIDDefault) {
		return true
	}

	return false
}

// SetFkiPhoneIDDefault gets a reference to the given int32 and assigns it to the FkiPhoneIDDefault field.
func (o *ContactinformationsResponseCompound) SetFkiPhoneIDDefault(v int32) {
	o.FkiPhoneIDDefault = &v
}

// GetFkiEmailIDDefault returns the FkiEmailIDDefault field value if set, zero value otherwise.
func (o *ContactinformationsResponseCompound) GetFkiEmailIDDefault() int32 {
	if o == nil || IsNil(o.FkiEmailIDDefault) {
		var ret int32
		return ret
	}
	return *o.FkiEmailIDDefault
}

// GetFkiEmailIDDefaultOk returns a tuple with the FkiEmailIDDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactinformationsResponseCompound) GetFkiEmailIDDefaultOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiEmailIDDefault) {
		return nil, false
	}
	return o.FkiEmailIDDefault, true
}

// HasFkiEmailIDDefault returns a boolean if a field has been set.
func (o *ContactinformationsResponseCompound) HasFkiEmailIDDefault() bool {
	if o != nil && !IsNil(o.FkiEmailIDDefault) {
		return true
	}

	return false
}

// SetFkiEmailIDDefault gets a reference to the given int32 and assigns it to the FkiEmailIDDefault field.
func (o *ContactinformationsResponseCompound) SetFkiEmailIDDefault(v int32) {
	o.FkiEmailIDDefault = &v
}

// GetFkiWebsiteIDDefault returns the FkiWebsiteIDDefault field value if set, zero value otherwise.
func (o *ContactinformationsResponseCompound) GetFkiWebsiteIDDefault() int32 {
	if o == nil || IsNil(o.FkiWebsiteIDDefault) {
		var ret int32
		return ret
	}
	return *o.FkiWebsiteIDDefault
}

// GetFkiWebsiteIDDefaultOk returns a tuple with the FkiWebsiteIDDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactinformationsResponseCompound) GetFkiWebsiteIDDefaultOk() (*int32, bool) {
	if o == nil || IsNil(o.FkiWebsiteIDDefault) {
		return nil, false
	}
	return o.FkiWebsiteIDDefault, true
}

// HasFkiWebsiteIDDefault returns a boolean if a field has been set.
func (o *ContactinformationsResponseCompound) HasFkiWebsiteIDDefault() bool {
	if o != nil && !IsNil(o.FkiWebsiteIDDefault) {
		return true
	}

	return false
}

// SetFkiWebsiteIDDefault gets a reference to the given int32 and assigns it to the FkiWebsiteIDDefault field.
func (o *ContactinformationsResponseCompound) SetFkiWebsiteIDDefault(v int32) {
	o.FkiWebsiteIDDefault = &v
}

// GetEContactinformationsType returns the EContactinformationsType field value
func (o *ContactinformationsResponseCompound) GetEContactinformationsType() FieldEContactinformationsType {
	if o == nil {
		var ret FieldEContactinformationsType
		return ret
	}

	return o.EContactinformationsType
}

// GetEContactinformationsTypeOk returns a tuple with the EContactinformationsType field value
// and a boolean to check if the value has been set.
func (o *ContactinformationsResponseCompound) GetEContactinformationsTypeOk() (*FieldEContactinformationsType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EContactinformationsType, true
}

// SetEContactinformationsType sets field value
func (o *ContactinformationsResponseCompound) SetEContactinformationsType(v FieldEContactinformationsType) {
	o.EContactinformationsType = v
}

// GetSContactinformationsUrl returns the SContactinformationsUrl field value if set, zero value otherwise.
func (o *ContactinformationsResponseCompound) GetSContactinformationsUrl() string {
	if o == nil || IsNil(o.SContactinformationsUrl) {
		var ret string
		return ret
	}
	return *o.SContactinformationsUrl
}

// GetSContactinformationsUrlOk returns a tuple with the SContactinformationsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactinformationsResponseCompound) GetSContactinformationsUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SContactinformationsUrl) {
		return nil, false
	}
	return o.SContactinformationsUrl, true
}

// HasSContactinformationsUrl returns a boolean if a field has been set.
func (o *ContactinformationsResponseCompound) HasSContactinformationsUrl() bool {
	if o != nil && !IsNil(o.SContactinformationsUrl) {
		return true
	}

	return false
}

// SetSContactinformationsUrl gets a reference to the given string and assigns it to the SContactinformationsUrl field.
func (o *ContactinformationsResponseCompound) SetSContactinformationsUrl(v string) {
	o.SContactinformationsUrl = &v
}

// GetObjAddressDefault returns the ObjAddressDefault field value if set, zero value otherwise.
func (o *ContactinformationsResponseCompound) GetObjAddressDefault() AddressResponseCompound {
	if o == nil || IsNil(o.ObjAddressDefault) {
		var ret AddressResponseCompound
		return ret
	}
	return *o.ObjAddressDefault
}

// GetObjAddressDefaultOk returns a tuple with the ObjAddressDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactinformationsResponseCompound) GetObjAddressDefaultOk() (*AddressResponseCompound, bool) {
	if o == nil || IsNil(o.ObjAddressDefault) {
		return nil, false
	}
	return o.ObjAddressDefault, true
}

// HasObjAddressDefault returns a boolean if a field has been set.
func (o *ContactinformationsResponseCompound) HasObjAddressDefault() bool {
	if o != nil && !IsNil(o.ObjAddressDefault) {
		return true
	}

	return false
}

// SetObjAddressDefault gets a reference to the given AddressResponseCompound and assigns it to the ObjAddressDefault field.
func (o *ContactinformationsResponseCompound) SetObjAddressDefault(v AddressResponseCompound) {
	o.ObjAddressDefault = &v
}

// GetObjPhoneDefault returns the ObjPhoneDefault field value if set, zero value otherwise.
func (o *ContactinformationsResponseCompound) GetObjPhoneDefault() PhoneResponseCompound {
	if o == nil || IsNil(o.ObjPhoneDefault) {
		var ret PhoneResponseCompound
		return ret
	}
	return *o.ObjPhoneDefault
}

// GetObjPhoneDefaultOk returns a tuple with the ObjPhoneDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactinformationsResponseCompound) GetObjPhoneDefaultOk() (*PhoneResponseCompound, bool) {
	if o == nil || IsNil(o.ObjPhoneDefault) {
		return nil, false
	}
	return o.ObjPhoneDefault, true
}

// HasObjPhoneDefault returns a boolean if a field has been set.
func (o *ContactinformationsResponseCompound) HasObjPhoneDefault() bool {
	if o != nil && !IsNil(o.ObjPhoneDefault) {
		return true
	}

	return false
}

// SetObjPhoneDefault gets a reference to the given PhoneResponseCompound and assigns it to the ObjPhoneDefault field.
func (o *ContactinformationsResponseCompound) SetObjPhoneDefault(v PhoneResponseCompound) {
	o.ObjPhoneDefault = &v
}

// GetObjEmailDefault returns the ObjEmailDefault field value if set, zero value otherwise.
func (o *ContactinformationsResponseCompound) GetObjEmailDefault() EmailResponseCompound {
	if o == nil || IsNil(o.ObjEmailDefault) {
		var ret EmailResponseCompound
		return ret
	}
	return *o.ObjEmailDefault
}

// GetObjEmailDefaultOk returns a tuple with the ObjEmailDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactinformationsResponseCompound) GetObjEmailDefaultOk() (*EmailResponseCompound, bool) {
	if o == nil || IsNil(o.ObjEmailDefault) {
		return nil, false
	}
	return o.ObjEmailDefault, true
}

// HasObjEmailDefault returns a boolean if a field has been set.
func (o *ContactinformationsResponseCompound) HasObjEmailDefault() bool {
	if o != nil && !IsNil(o.ObjEmailDefault) {
		return true
	}

	return false
}

// SetObjEmailDefault gets a reference to the given EmailResponseCompound and assigns it to the ObjEmailDefault field.
func (o *ContactinformationsResponseCompound) SetObjEmailDefault(v EmailResponseCompound) {
	o.ObjEmailDefault = &v
}

// GetObjWebsiteDefault returns the ObjWebsiteDefault field value if set, zero value otherwise.
func (o *ContactinformationsResponseCompound) GetObjWebsiteDefault() WebsiteResponseCompound {
	if o == nil || IsNil(o.ObjWebsiteDefault) {
		var ret WebsiteResponseCompound
		return ret
	}
	return *o.ObjWebsiteDefault
}

// GetObjWebsiteDefaultOk returns a tuple with the ObjWebsiteDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactinformationsResponseCompound) GetObjWebsiteDefaultOk() (*WebsiteResponseCompound, bool) {
	if o == nil || IsNil(o.ObjWebsiteDefault) {
		return nil, false
	}
	return o.ObjWebsiteDefault, true
}

// HasObjWebsiteDefault returns a boolean if a field has been set.
func (o *ContactinformationsResponseCompound) HasObjWebsiteDefault() bool {
	if o != nil && !IsNil(o.ObjWebsiteDefault) {
		return true
	}

	return false
}

// SetObjWebsiteDefault gets a reference to the given WebsiteResponseCompound and assigns it to the ObjWebsiteDefault field.
func (o *ContactinformationsResponseCompound) SetObjWebsiteDefault(v WebsiteResponseCompound) {
	o.ObjWebsiteDefault = &v
}

// GetAObjAddress returns the AObjAddress field value
func (o *ContactinformationsResponseCompound) GetAObjAddress() []AddressResponseCompound {
	if o == nil {
		var ret []AddressResponseCompound
		return ret
	}

	return o.AObjAddress
}

// GetAObjAddressOk returns a tuple with the AObjAddress field value
// and a boolean to check if the value has been set.
func (o *ContactinformationsResponseCompound) GetAObjAddressOk() ([]AddressResponseCompound, bool) {
	if o == nil {
		return nil, false
	}
	return o.AObjAddress, true
}

// SetAObjAddress sets field value
func (o *ContactinformationsResponseCompound) SetAObjAddress(v []AddressResponseCompound) {
	o.AObjAddress = v
}

// GetAObjPhone returns the AObjPhone field value
func (o *ContactinformationsResponseCompound) GetAObjPhone() []PhoneResponseCompound {
	if o == nil {
		var ret []PhoneResponseCompound
		return ret
	}

	return o.AObjPhone
}

// GetAObjPhoneOk returns a tuple with the AObjPhone field value
// and a boolean to check if the value has been set.
func (o *ContactinformationsResponseCompound) GetAObjPhoneOk() ([]PhoneResponseCompound, bool) {
	if o == nil {
		return nil, false
	}
	return o.AObjPhone, true
}

// SetAObjPhone sets field value
func (o *ContactinformationsResponseCompound) SetAObjPhone(v []PhoneResponseCompound) {
	o.AObjPhone = v
}

// GetAObjEmail returns the AObjEmail field value
func (o *ContactinformationsResponseCompound) GetAObjEmail() []EmailResponseCompound {
	if o == nil {
		var ret []EmailResponseCompound
		return ret
	}

	return o.AObjEmail
}

// GetAObjEmailOk returns a tuple with the AObjEmail field value
// and a boolean to check if the value has been set.
func (o *ContactinformationsResponseCompound) GetAObjEmailOk() ([]EmailResponseCompound, bool) {
	if o == nil {
		return nil, false
	}
	return o.AObjEmail, true
}

// SetAObjEmail sets field value
func (o *ContactinformationsResponseCompound) SetAObjEmail(v []EmailResponseCompound) {
	o.AObjEmail = v
}

// GetAObjWebsite returns the AObjWebsite field value
func (o *ContactinformationsResponseCompound) GetAObjWebsite() []WebsiteResponseCompound {
	if o == nil {
		var ret []WebsiteResponseCompound
		return ret
	}

	return o.AObjWebsite
}

// GetAObjWebsiteOk returns a tuple with the AObjWebsite field value
// and a boolean to check if the value has been set.
func (o *ContactinformationsResponseCompound) GetAObjWebsiteOk() ([]WebsiteResponseCompound, bool) {
	if o == nil {
		return nil, false
	}
	return o.AObjWebsite, true
}

// SetAObjWebsite sets field value
func (o *ContactinformationsResponseCompound) SetAObjWebsite(v []WebsiteResponseCompound) {
	o.AObjWebsite = v
}

func (o ContactinformationsResponseCompound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContactinformationsResponseCompound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pkiContactinformationsID"] = o.PkiContactinformationsID
	if !IsNil(o.FkiAddressIDDefault) {
		toSerialize["fkiAddressIDDefault"] = o.FkiAddressIDDefault
	}
	if !IsNil(o.FkiPhoneIDDefault) {
		toSerialize["fkiPhoneIDDefault"] = o.FkiPhoneIDDefault
	}
	if !IsNil(o.FkiEmailIDDefault) {
		toSerialize["fkiEmailIDDefault"] = o.FkiEmailIDDefault
	}
	if !IsNil(o.FkiWebsiteIDDefault) {
		toSerialize["fkiWebsiteIDDefault"] = o.FkiWebsiteIDDefault
	}
	toSerialize["eContactinformationsType"] = o.EContactinformationsType
	if !IsNil(o.SContactinformationsUrl) {
		toSerialize["sContactinformationsUrl"] = o.SContactinformationsUrl
	}
	if !IsNil(o.ObjAddressDefault) {
		toSerialize["objAddressDefault"] = o.ObjAddressDefault
	}
	if !IsNil(o.ObjPhoneDefault) {
		toSerialize["objPhoneDefault"] = o.ObjPhoneDefault
	}
	if !IsNil(o.ObjEmailDefault) {
		toSerialize["objEmailDefault"] = o.ObjEmailDefault
	}
	if !IsNil(o.ObjWebsiteDefault) {
		toSerialize["objWebsiteDefault"] = o.ObjWebsiteDefault
	}
	toSerialize["a_objAddress"] = o.AObjAddress
	toSerialize["a_objPhone"] = o.AObjPhone
	toSerialize["a_objEmail"] = o.AObjEmail
	toSerialize["a_objWebsite"] = o.AObjWebsite
	return toSerialize, nil
}

func (o *ContactinformationsResponseCompound) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pkiContactinformationsID",
		"eContactinformationsType",
		"a_objAddress",
		"a_objPhone",
		"a_objEmail",
		"a_objWebsite",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varContactinformationsResponseCompound := _ContactinformationsResponseCompound{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varContactinformationsResponseCompound)

	if err != nil {
		return err
	}

	*o = ContactinformationsResponseCompound(varContactinformationsResponseCompound)

	return err
}

type NullableContactinformationsResponseCompound struct {
	value *ContactinformationsResponseCompound
	isSet bool
}

func (v NullableContactinformationsResponseCompound) Get() *ContactinformationsResponseCompound {
	return v.value
}

func (v *NullableContactinformationsResponseCompound) Set(val *ContactinformationsResponseCompound) {
	v.value = val
	v.isSet = true
}

func (v NullableContactinformationsResponseCompound) IsSet() bool {
	return v.isSet
}

func (v *NullableContactinformationsResponseCompound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContactinformationsResponseCompound(val *ContactinformationsResponseCompound) *NullableContactinformationsResponseCompound {
	return &NullableContactinformationsResponseCompound{value: val, isSet: true}
}

func (v NullableContactinformationsResponseCompound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContactinformationsResponseCompound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


